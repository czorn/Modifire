ATSDown = int

ATSNone = int

ATSPad = int

ATSUnspecified = int

ATSUp = int

ATS_down = int

ATS_none = int

ATS_pad = int

ATS_unspecified = int

ATS_up = int

class AdaptiveLru:
  def __init__(self):
    pass
  def assign(self):
    pass
  def beginEpoch(self):
    pass
  def begin_epoch(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def considerEvict(self):
    pass
  def consider_evict(self):
    pass
  def countActiveSize(self):
    pass
  def count_active_size(self):
    pass
  def evictTo(self):
    pass
  def evict_to(self):
    pass
  def get_class_type():
    pass
  def getMaxSize(self):
    pass
  def getMaxUpdatesPerFrame(self):
    pass
  def getName(self):
    pass
  def getTotalSize(self):
    pass
  def getWeight(self):
    pass
  def get_class_type():
    pass
  def get_max_size(self):
    pass
  def get_max_updates_per_frame(self):
    pass
  def get_name(self):
    pass
  def get_total_size(self):
    pass
  def get_weight(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def setMaxSize(self):
    pass
  def setMaxUpdatesPerFrame(self):
    pass
  def setName(self):
    pass
  def setWeight(self):
    pass
  def set_max_size(self):
    pass
  def set_max_updates_per_frame(self):
    pass
  def set_name(self):
    pass
  def set_weight(self):
    pass
  def validate(self):
    pass
  def write(self):
    pass
class AdaptiveLruPage:
  def __init__(self):
    pass
  def assign(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToIndexBufferContext(self):
    pass
  def downcastToTextureContext(self):
    pass
  def downcastToVertexBufferContext(self):
    pass
  def downcast_to_IndexBufferContext(self):
    pass
  def downcast_to_TextureContext(self):
    pass
  def downcast_to_VertexBufferContext(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getNumFrames(self):
    pass
  def getNumInactiveFrames(self):
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_inactive_frames(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def setLruSize(self):
    pass
  def set_lru_size(self):
    pass
  def write(self):
    pass
class AlphaTestAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getReferenceAlpha(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_reference_alpha(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class AmbientLight:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setColor(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_color(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class AnalogNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearOutput(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_output(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getControlState(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumControls(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOutput(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_control_state(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_controls(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_output(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isControlKnown(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOutputFlipped(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_control_known(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_output_flipped(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOutput(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_output(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class AnimBundle:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def copyBundle(self):
    pass
  def copy_bundle(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBaseFrameRate(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getNumFrames(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_base_frame_rate(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_num_frames(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimBundleNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def find_anim_bundle():
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_anim_bundle():
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getBundle(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_bundle(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class AnimChannelBase:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelMatrix:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def getValueNoScaleShear(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def get_value_no_scale_shear(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelMatrixDynamic:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def getValueNoScaleShear(self):
    pass
  def getValueNode(self):
    pass
  def getValueTransform(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def get_value_no_scale_shear(self):
    pass
  def get_value_node(self):
    pass
  def get_value_transform(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def setValue(self):
    pass
  def setValueNode(self):
    pass
  def set_name(self):
    pass
  def set_value(self):
    pass
  def set_value_node(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelMatrixXfmTable:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearAllTables(self):
    pass
  def clearName(self):
    pass
  def clearTable(self):
    pass
  def clear_all_tables(self):
    pass
  def clear_name(self):
    pass
  def clear_table(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getTable(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def getValueNoScaleShear(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_table(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def get_value_no_scale_shear(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def hasTable(self):
    pass
  def has_name(self):
    pass
  def has_table(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_valid_id():
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid_id():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def setTable(self):
    pass
  def set_name(self):
    pass
  def set_table(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelScalar:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelScalarDynamic:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def setValue(self):
    pass
  def setValueNode(self):
    pass
  def set_name(self):
    pass
  def set_value(self):
    pass
  def set_value_node(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimChannelScalarTable:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clearTable(self):
    pass
  def clear_name(self):
    pass
  def clear_table(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getHpr(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getPos(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getShear(self):
    pass
  def getTable(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValueType(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_hpr(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_pos(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_shear(self):
    pass
  def get_table(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value_type(self):
    pass
  def hasName(self):
    pass
  def hasTable(self):
    pass
  def has_name(self):
    pass
  def has_table(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def setTable(self):
    pass
  def set_name(self):
    pass
  def set_table(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimControl:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAnim(self):
    pass
  def getAnimModel(self):
    pass
  def getBoundJoints(self):
    pass
  def getChannelIndex(self):
    pass
  def get_class_type():
    pass
  def getFrac(self):
    pass
  def getFrame(self):
    pass
  def getFrameRate(self):
    pass
  def getFullFframe(self):
    pass
  def getFullFrame(self):
    pass
  def getName(self):
    pass
  def getNextFrame(self):
    pass
  def getNumFrames(self):
    pass
  def getPart(self):
    pass
  def getPendingDoneEvent(self):
    pass
  def getPlayRate(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_anim(self):
    pass
  def get_anim_model(self):
    pass
  def get_bound_joints(self):
    pass
  def get_channel_index(self):
    pass
  def get_class_type():
    pass
  def get_frac(self):
    pass
  def get_frame(self):
    pass
  def get_frame_rate(self):
    pass
  def get_full_fframe(self):
    pass
  def get_full_frame(self):
    pass
  def get_name(self):
    pass
  def get_next_frame(self):
    pass
  def get_num_frames(self):
    pass
  def get_part(self):
    pass
  def get_pending_done_event(self):
    pass
  def get_play_rate(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasAnim(self):
    pass
  def hasName(self):
    pass
  def has_anim(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isPending(self):
    pass
  def isPlaying(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_pending(self):
    pass
  def is_playing(self):
    pass
  def loop(self):
    pass
  def output(self):
    pass
  def pingpong(self):
    pass
  def play(self):
    pass
  def pose(self):
    pass
  def ref(self):
    pass
  def setAnimModel(self):
    pass
  def setName(self):
    pass
  def setPendingDoneEvent(self):
    pass
  def setPlayRate(self):
    pass
  def set_anim_model(self):
    pass
  def set_name(self):
    pass
  def set_pending_done_event(self):
    pass
  def set_play_rate(self):
    pass
  def stop(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToAnimInterface(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_AnimInterface(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def waitPending(self):
    pass
  def wait_pending(self):
    pass
class AnimControlCollection:
  def __init__(self):
    pass
  def clearAnims(self):
    pass
  def clear_anims(self):
    pass
  def findAnim(self):
    pass
  def find_anim(self):
    pass
  def getAnim(self):
    pass
  def getAnimName(self):
    pass
  def getAnimNames(self):
    pass
  def getAnims(self):
    pass
  def getFrame(self):
    pass
  def getNumAnims(self):
    pass
  def getNumFrames(self):
    pass
  def get_anim(self):
    pass
  def get_anim_name(self):
    pass
  def get_anim_names(self):
    pass
  def get_anims(self):
    pass
  def get_frame(self):
    pass
  def get_num_anims(self):
    pass
  def get_num_frames(self):
    pass
  def isPlaying(self):
    pass
  def is_playing(self):
    pass
  def loop(self):
    pass
  def loopAll(self):
    pass
  def loop_all(self):
    pass
  def output(self):
    pass
  def play(self):
    pass
  def playAll(self):
    pass
  def play_all(self):
    pass
  def pose(self):
    pass
  def poseAll(self):
    pass
  def pose_all(self):
    pass
  def stop(self):
    pass
  def stopAll(self):
    pass
  def stop_all(self):
    pass
  def storeAnim(self):
    pass
  def store_anim(self):
    pass
  def unbindAnim(self):
    pass
  def unbind_anim(self):
    pass
  def whichAnimPlaying(self):
    pass
  def which_anim_playing(self):
    pass
  def write(self):
    pass
class AnimGroup:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class AnimInterface:
  def __init__(self):
    pass
  def get_class_type():
    pass
  def getFrac(self):
    pass
  def getFrame(self):
    pass
  def getFrameRate(self):
    pass
  def getFullFframe(self):
    pass
  def getFullFrame(self):
    pass
  def getNextFrame(self):
    pass
  def getNumFrames(self):
    pass
  def getPlayRate(self):
    pass
  def get_class_type():
    pass
  def get_frac(self):
    pass
  def get_frame(self):
    pass
  def get_frame_rate(self):
    pass
  def get_full_fframe(self):
    pass
  def get_full_frame(self):
    pass
  def get_next_frame(self):
    pass
  def get_num_frames(self):
    pass
  def get_play_rate(self):
    pass
  def isPlaying(self):
    pass
  def is_playing(self):
    pass
  def loop(self):
    pass
  def output(self):
    pass
  def pingpong(self):
    pass
  def play(self):
    pass
  def pose(self):
    pass
  def setPlayRate(self):
    pass
  def set_play_rate(self):
    pass
  def stop(self):
    pass
class AnimPreloadTable:
  def __init__(self):
    pass
  def addAnim(self):
    pass
  def addAnimsFrom(self):
    pass
  def add_anim(self):
    pass
  def add_anims_from(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearAnims(self):
    pass
  def clear_anims(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findAnim(self):
    pass
  def find_anim(self):
    pass
  def getBamModified(self):
    pass
  def getBaseFrameRate(self):
    pass
  def getBasename(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getNumAnims(self):
    pass
  def getNumFrames(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_base_frame_rate(self):
    pass
  def get_basename(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_num_anims(self):
    pass
  def get_num_frames(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeAnim(self):
    pass
  def remove_anim(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class AnimateVerticesRequest:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isReady(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_ready(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class AntialiasAttrib:
  def __init__(self):
    pass
  MAlways = int

  MAuto = int

  MBetter = int

  MConstant = int

  MDontCare = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MFaster = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MLine = int

  MMultisample = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPoint = int

  MPointSprite = int

  MPolygon = int

  MTypeMask = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_auto = int

  M_better = int

  M_constant = int

  M_dont_care = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_faster = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_line = int

  M_multisample = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point = int

  M_point_sprite = int

  M_polygon = int

  M_type_mask = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def getModeQuality(self):
    pass
  def getModeType(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_mode_quality(self):
    pass
  def get_mode_type(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class AsyncTask:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class AsyncTaskBase:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class AsyncTaskChain:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getActiveTasks(self):
    pass
  def get_class_type():
    pass
  def getFrameBudget(self):
    pass
  def getFrameSync(self):
    pass
  def getName(self):
    pass
  def getNextWakeTime(self):
    pass
  def getNumRunningThreads(self):
    pass
  def getNumTasks(self):
    pass
  def getNumThreads(self):
    pass
  def getRefCount(self):
    pass
  def getSleepingTasks(self):
    pass
  def getTasks(self):
    pass
  def getThreadPriority(self):
    pass
  def getTickClock(self):
    pass
  def getTimeslicePriority(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active_tasks(self):
    pass
  def get_class_type():
    pass
  def get_frame_budget(self):
    pass
  def get_frame_sync(self):
    pass
  def get_name(self):
    pass
  def get_next_wake_time(self):
    pass
  def get_num_running_threads(self):
    pass
  def get_num_tasks(self):
    pass
  def get_num_threads(self):
    pass
  def get_ref_count(self):
    pass
  def get_sleeping_tasks(self):
    pass
  def get_tasks(self):
    pass
  def get_thread_priority(self):
    pass
  def get_tick_clock(self):
    pass
  def get_timeslice_priority(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def hasTask(self):
    pass
  def has_name(self):
    pass
  def has_task(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isStarted(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_started(self):
    pass
  def output(self):
    pass
  def poll(self):
    pass
  def ref(self):
    pass
  def setFrameBudget(self):
    pass
  def setFrameSync(self):
    pass
  def setName(self):
    pass
  def setNumThreads(self):
    pass
  def setThreadPriority(self):
    pass
  def setTickClock(self):
    pass
  def setTimeslicePriority(self):
    pass
  def set_frame_budget(self):
    pass
  def set_frame_sync(self):
    pass
  def set_name(self):
    pass
  def set_num_threads(self):
    pass
  def set_thread_priority(self):
    pass
  def set_tick_clock(self):
    pass
  def set_timeslice_priority(self):
    pass
  def startThreads(self):
    pass
  def start_threads(self):
    pass
  def stopThreads(self):
    pass
  def stop_threads(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def waitForTasks(self):
    pass
  def wait_for_tasks(self):
    pass
  def write(self):
    pass
class AsyncTaskCollection:
  def __init__(self):
    pass
  def addTask(self):
    pass
  def addTasksFrom(self):
    pass
  def add_task(self):
    pass
  def add_tasks_from(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def findTask(self):
    pass
  def find_task(self):
    pass
  def getNumTasks(self):
    pass
  def getTask(self):
    pass
  def getTasks(self):
    pass
  def get_num_tasks(self):
    pass
  def get_task(self):
    pass
  def get_tasks(self):
    pass
  def hasTask(self):
    pass
  def has_task(self):
    pass
  def output(self):
    pass
  def removeDuplicateTasks(self):
    pass
  def removeTask(self):
    pass
  def removeTasksFrom(self):
    pass
  def remove_duplicate_tasks(self):
    pass
  def remove_task(self):
    pass
  def remove_tasks_from(self):
    pass
  def size(self):
    pass
  def write(self):
    pass
class AsyncTaskManager:
  def __init__(self):
    pass
  def add(self):
    pass
  def assign(self):
    pass
  def cleanup(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def findTask(self):
    pass
  def findTaskChain(self):
    pass
  def findTasks(self):
    pass
  def findTasksMatching(self):
    pass
  def find_task(self):
    pass
  def find_task_chain(self):
    pass
  def find_tasks(self):
    pass
  def find_tasks_matching(self):
    pass
  def getActiveTasks(self):
    pass
  def get_class_type():
    pass
  def getClock(self):
    pass
  def get_global_ptr():
    pass
  def getName(self):
    pass
  def getNextWakeTime(self):
    pass
  def getNumTaskChains(self):
    pass
  def getNumTasks(self):
    pass
  def getRefCount(self):
    pass
  def getSleepingTasks(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskChains(self):
    pass
  def getTasks(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active_tasks(self):
    pass
  def get_class_type():
    pass
  def get_clock(self):
    pass
  def get_global_ptr():
    pass
  def get_name(self):
    pass
  def get_next_wake_time(self):
    pass
  def get_num_task_chains(self):
    pass
  def get_num_tasks(self):
    pass
  def get_ref_count(self):
    pass
  def get_sleeping_tasks(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_chains(self):
    pass
  def get_tasks(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def hasTask(self):
    pass
  def has_name(self):
    pass
  def has_task(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeTaskChain(self):
    pass
  def make_task_chain(self):
    pass
  def output(self):
    pass
  def poll(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def removeTaskChain(self):
    pass
  def remove_task_chain(self):
    pass
  def setClock(self):
    pass
  def setName(self):
    pass
  def set_clock(self):
    pass
  def set_name(self):
    pass
  def startThreads(self):
    pass
  def start_threads(self):
    pass
  def stopThreads(self):
    pass
  def stop_threads(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def waitForTasks(self):
    pass
  def wait_for_tasks(self):
    pass
  def write(self):
    pass
class AsyncTaskPause:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class AsyncTaskSequence:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def addTask(self):
    pass
  def addTasksFrom(self):
    pass
  def add_task(self):
    pass
  def add_tasks_from(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def findTask(self):
    pass
  def find_task(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getCurrentTaskIndex(self):
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getNumTasks(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getRepeatCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTask(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getTasks(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_current_task_index(self):
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_num_tasks(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_repeat_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_tasks(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def hasTask(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def has_task(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def removeDuplicateTasks(self):
    pass
  def removeTask(self):
    pass
  def removeTasksFrom(self):
    pass
  def remove_duplicate_tasks(self):
    pass
  def remove_task(self):
    pass
  def remove_tasks_from(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setRepeatCount(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_repeat_count(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def size(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToAsyncTask(self):
    pass
  def upcastToAsyncTaskCollection(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_AsyncTask(self):
    pass
  def upcast_to_AsyncTaskCollection(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write(self):
    pass
class AttribNodeRegistry:
  def __init__(self):
    pass
  def addNode(self):
    pass
  def add_node(self):
    pass
  def clear(self):
    pass
  def findNode(self):
    pass
  def find_node(self):
    pass
  def get_global_ptr():
    pass
  def getNode(self):
    pass
  def getNodeName(self):
    pass
  def getNodeType(self):
    pass
  def getNodes(self):
    pass
  def getNumNodes(self):
    pass
  def get_global_ptr():
    pass
  def get_node(self):
    pass
  def get_node_name(self):
    pass
  def get_node_type(self):
    pass
  def get_nodes(self):
    pass
  def get_num_nodes(self):
    pass
  def lookupNode(self):
    pass
  def lookup_node(self):
    pass
  def output(self):
    pass
  def removeNode(self):
    pass
  def remove_node(self):
    pass
  def write(self):
    pass
class AudioManager:
  def __init__(self):
    pass
  SMHeuristic = int

  SMSample = int

  SMStream = int

  SM_heuristic = int

  SM_sample = int

  SM_stream = int

  SPEAKERMODE5point1 = int

  SPEAKERMODE7point1 = int

  SPEAKERMODECOUNT = int

  SPEAKERMODEMax = int

  SPEAKERMODEMono = int

  SPEAKERMODEPrologic = int

  SPEAKERMODEQuad = int

  SPEAKERMODERaw = int

  SPEAKERMODEStereo = int

  SPEAKERMODESurround = int

  SPEAKERMODE_5point1 = int

  SPEAKERMODE_7point1 = int

  SPEAKERMODE_COUNT = int

  SPEAKERMODE_max = int

  SPEAKERMODE_mono = int

  SPEAKERMODE_prologic = int

  SPEAKERMODE_quad = int

  SPEAKERMODE_raw = int

  SPEAKERMODE_stereo = int

  SPEAKERMODE_surround = int

  SPKBackleft = int

  SPKBackright = int

  SPKCOUNT = int

  SPKCenter = int

  SPKFrontleft = int

  SPKFrontright = int

  SPKNone = int

  SPKSideleft = int

  SPKSideright = int

  SPKSub = int

  SPK_COUNT = int

  SPK_backleft = int

  SPK_backright = int

  SPK_center = int

  SPK_frontleft = int

  SPK_frontright = int

  SPK_none = int

  SPK_sideleft = int

  SPK_sideright = int

  SPK_sub = int

  def audio3dGetDistanceFactor(self):
    pass
  def audio3dGetDopplerFactor(self):
    pass
  def audio3dGetDropOffFactor(self):
    pass
  def audio3dSetDistanceFactor(self):
    pass
  def audio3dSetDopplerFactor(self):
    pass
  def audio3dSetDropOffFactor(self):
    pass
  def audio3dSetListenerAttributes(self):
    pass
  def audio_3d_get_distance_factor(self):
    pass
  def audio_3d_get_doppler_factor(self):
    pass
  def audio_3d_get_drop_off_factor(self):
    pass
  def audio_3d_set_distance_factor(self):
    pass
  def audio_3d_set_doppler_factor(self):
    pass
  def audio_3d_set_drop_off_factor(self):
    pass
  def audio_3d_set_listener_attributes(self):
    pass
  def clearCache(self):
    pass
  def clear_cache(self):
    pass
  def configureFilters(self):
    pass
  def configure_filters(self):
    pass
  def create_AudioManager():
    pass
  def create_AudioManager():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getActive(self):
    pass
  def getCacheLimit(self):
    pass
  def get_class_type():
    pass
  def getConcurrentSoundLimit(self):
    pass
  def get_dls_pathname():
    pass
  def getNullSound(self):
    pass
  def getRefCount(self):
    pass
  def getSound(self):
    pass
  def getSpeakerSetup(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_active(self):
    pass
  def get_cache_limit(self):
    pass
  def get_class_type():
    pass
  def get_concurrent_sound_limit(self):
    pass
  def get_dls_pathname():
    pass
  def get_null_sound(self):
    pass
  def get_ref_count(self):
    pass
  def get_sound(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def output(self):
    pass
  def reduceSoundsPlayingTo(self):
    pass
  def reduce_sounds_playing_to(self):
    pass
  def ref(self):
    pass
  def setActive(self):
    pass
  def setCacheLimit(self):
    pass
  def setConcurrentSoundLimit(self):
    pass
  def setSpeakerConfiguration(self):
    pass
  def setSpeakerSetup(self):
    pass
  def setVolume(self):
    pass
  def set_active(self):
    pass
  def set_cache_limit(self):
    pass
  def set_concurrent_sound_limit(self):
    pass
  def set_speaker_configuration(self):
    pass
  def set_volume(self):
    pass
  def shutdown(self):
    pass
  def stopAllSounds(self):
    pass
  def stop_all_sounds(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncacheSound(self):
    pass
  def uncache_sound(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def update(self):
    pass
  def write(self):
    pass
class AudioSound:
  def __init__(self):
    pass
  BAD = int

  PLAYING = int

  READY = int

  def configureFilters(self):
    pass
  def configure_filters(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get3dMaxDistance(self):
    pass
  def get3dMinDistance(self):
    pass
  def getActive(self):
    pass
  def getBalance(self):
    pass
  def get_class_type():
    pass
  def getFinishedEvent(self):
    pass
  def getLoop(self):
    pass
  def getLoopCount(self):
    pass
  def getName(self):
    pass
  def getPlayRate(self):
    pass
  def getPriority(self):
    pass
  def getRefCount(self):
    pass
  def getSpeakerLevel(self):
    pass
  def getSpeakerMix(self):
    pass
  def getTime(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_3d_max_distance(self):
    pass
  def get_3d_min_distance(self):
    pass
  def get_active(self):
    pass
  def get_balance(self):
    pass
  def get_class_type():
    pass
  def get_finished_event(self):
    pass
  def get_loop(self):
    pass
  def get_loop_count(self):
    pass
  def get_name(self):
    pass
  def get_play_rate(self):
    pass
  def get_priority(self):
    pass
  def get_ref_count(self):
    pass
  def get_speaker_level(self):
    pass
  def get_speaker_mix(self):
    pass
  def get_time(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def output(self):
    pass
  def play(self):
    pass
  def ref(self):
    pass
  def set3dAttributes(self):
    pass
  def set3dMaxDistance(self):
    pass
  def set3dMinDistance(self):
    pass
  def setActive(self):
    pass
  def setBalance(self):
    pass
  def setFinishedEvent(self):
    pass
  def setLoop(self):
    pass
  def setLoopCount(self):
    pass
  def setPlayRate(self):
    pass
  def setPriority(self):
    pass
  def setSpeakerLevels(self):
    pass
  def setSpeakerMix(self):
    pass
  def setTime(self):
    pass
  def setVolume(self):
    pass
  def set_3d_attributes(self):
    pass
  def set_3d_max_distance(self):
    pass
  def set_3d_min_distance(self):
    pass
  def set_active(self):
    pass
  def set_balance(self):
    pass
  def set_finished_event(self):
    pass
  def set_loop(self):
    pass
  def set_loop_count(self):
    pass
  def set_play_rate(self):
    pass
  def set_priority(self):
    pass
  def set_speaker_levels(self):
    pass
  def set_speaker_mix(self):
    pass
  def set_time(self):
    pass
  def set_volume(self):
    pass
  def status(self):
    pass
  def stop(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
class AudioVolumeAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def getVolume(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def get_volume(self):
    pass
  def hasVolume(self):
    pass
  def has_volume(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_identity():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_identity():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setVolume(self):
    pass
  def set_volume(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class AuxBitplaneAttrib:
  def __init__(self):
    pass
  ABOAuxGlow = int

  ABOAuxNormal = int

  ABOGlow = int

  ABO_aux_glow = int

  ABO_aux_normal = int

  ABO_glow = int

  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getOutputs(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_outputs(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class AuxSceneData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getDuration(self):
    pass
  def getExpirationTime(self):
    pass
  def getLastRenderTime(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_duration(self):
    pass
  def get_expiration_time(self):
    pass
  def get_last_render_time(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setDuration(self):
    pass
  def setLastRenderTime(self):
    pass
  def set_duration(self):
    pass
  def set_last_render_time(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
class BamCache:
  def __init__(self):
    pass
  def considerFlushIndex(self):
    pass
  def consider_flush_index(self):
    pass
  def flushIndex(self):
    pass
  def flush_index(self):
    pass
  def getActive(self):
    pass
  def getCacheCompressedTextures(self):
    pass
  def getCacheMaxKbytes(self):
    pass
  def getCacheModels(self):
    pass
  def getCacheTextures(self):
    pass
  def getFlushTime(self):
    pass
  def get_global_ptr():
    pass
  def getReadOnly(self):
    pass
  def getRoot(self):
    pass
  def get_active(self):
    pass
  def get_cache_compressed_textures(self):
    pass
  def get_cache_max_kbytes(self):
    pass
  def get_cache_models(self):
    pass
  def get_cache_textures(self):
    pass
  def get_flush_time(self):
    pass
  def get_global_ptr():
    pass
  def get_read_only(self):
    pass
  def get_root(self):
    pass
  def lookup(self):
    pass
  def setActive(self):
    pass
  def setCacheCompressedTextures(self):
    pass
  def setCacheMaxKbytes(self):
    pass
  def setCacheModels(self):
    pass
  def setCacheTextures(self):
    pass
  def setFlushTime(self):
    pass
  def setReadOnly(self):
    pass
  def setRoot(self):
    pass
  def set_active(self):
    pass
  def set_cache_compressed_textures(self):
    pass
  def set_cache_max_kbytes(self):
    pass
  def set_cache_models(self):
    pass
  def set_cache_textures(self):
    pass
  def set_flush_time(self):
    pass
  def set_read_only(self):
    pass
  def set_root(self):
    pass
  def store(self):
    pass
class BamCacheRecord:
  def __init__(self):
    pass
  def addDependentFile(self):
    pass
  def add_dependent_file(self):
    pass
  def clearData(self):
    pass
  def clearDependentFiles(self):
    pass
  def clear_data(self):
    pass
  def clear_dependent_files(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def dependentsUnchanged(self):
    pass
  def dependents_unchanged(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def eq(self):
    pass
  def getBamModified(self):
    pass
  def getCacheFilename(self):
    pass
  def get_class_type():
    pass
  def getData(self):
    pass
  def getDependentPathname(self):
    pass
  def getNumDependentFiles(self):
    pass
  def getRecordedTime(self):
    pass
  def getRefCount(self):
    pass
  def getSourcePathname(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_filename(self):
    pass
  def get_class_type():
    pass
  def get_data(self):
    pass
  def get_dependent_pathname(self):
    pass
  def get_num_dependent_files(self):
    pass
  def get_recorded_time(self):
    pass
  def get_ref_count(self):
    pass
  def get_source_pathname(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasData(self):
    pass
  def has_data(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setData(self):
    pass
  def set_data(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class BamEnums:
  def __init__(self):
    pass
  BEBigendian = int

  BELittleendian = int

  BENative = int

  BE_bigendian = int

  BE_littleendian = int

  BE_native = int

  BOCAdjunct = int

  BOCFileData = int

  BOCPop = int

  BOCPush = int

  BOCRemove = int

  BOC_adjunct = int

  BOC_file_data = int

  BOC_pop = int

  BOC_push = int

  BOC_remove = int

  BTMBasename = int

  BTMFullpath = int

  BTMRawdata = int

  BTMRelative = int

  BTMUnchanged = int

  BTM_basename = int

  BTM_fullpath = int

  BTM_rawdata = int

  BTM_relative = int

  BTM_unchanged = int

class BamFile:
  def __init__(self):
    pass
  BEBigendian = int

  BELittleendian = int

  BENative = int

  BE_bigendian = int

  BE_littleendian = int

  BE_native = int

  BOCAdjunct = int

  BOCFileData = int

  BOCPop = int

  BOCPush = int

  BOCRemove = int

  BOC_adjunct = int

  BOC_file_data = int

  BOC_pop = int

  BOC_push = int

  BOC_remove = int

  BTMBasename = int

  BTMFullpath = int

  BTMRawdata = int

  BTMRelative = int

  BTMUnchanged = int

  BTM_basename = int

  BTM_fullpath = int

  BTM_rawdata = int

  BTM_relative = int

  BTM_unchanged = int

  def close(self):
    pass
  def getCurrentMajorVer(self):
    pass
  def getCurrentMinorVer(self):
    pass
  def getFileEndian(self):
    pass
  def getFileMajorVer(self):
    pass
  def getFileMinorVer(self):
    pass
  def getFileStdfloatDouble(self):
    pass
  def getReader(self):
    pass
  def getWriter(self):
    pass
  def get_current_major_ver(self):
    pass
  def get_current_minor_ver(self):
    pass
  def get_file_endian(self):
    pass
  def get_file_major_ver(self):
    pass
  def get_file_minor_ver(self):
    pass
  def get_file_stdfloat_double(self):
    pass
  def get_reader(self):
    pass
  def get_writer(self):
    pass
  def isEof(self):
    pass
  def isValidRead(self):
    pass
  def isValidWrite(self):
    pass
  def is_eof(self):
    pass
  def is_valid_read(self):
    pass
  def is_valid_write(self):
    pass
  def openRead(self):
    pass
  def openWrite(self):
    pass
  def open_read(self):
    pass
  def open_write(self):
    pass
  def readNode(self):
    pass
  def readObject(self):
    pass
  def read_node(self):
    pass
  def read_object(self):
    pass
  def resolve(self):
    pass
  def writeObject(self):
    pass
  def write_object(self):
    pass
class BamReader:
  def __init__(self):
    pass
  BEBigendian = int

  BELittleendian = int

  BENative = int

  BE_bigendian = int

  BE_littleendian = int

  BE_native = int

  BOCAdjunct = int

  BOCFileData = int

  BOCPop = int

  BOCPush = int

  BOCRemove = int

  BOC_adjunct = int

  BOC_file_data = int

  BOC_pop = int

  BOC_push = int

  BOC_remove = int

  BTMBasename = int

  BTMFullpath = int

  BTMRawdata = int

  BTMRelative = int

  BTMUnchanged = int

  BTM_basename = int

  BTM_fullpath = int

  BTM_rawdata = int

  BTM_relative = int

  BTM_unchanged = int

  def changePointer(self):
    pass
  def change_pointer(self):
    pass
  def getCurrentMajorVer(self):
    pass
  def getCurrentMinorVer(self):
    pass
  def getFileEndian(self):
    pass
  def getFileMajorVer(self):
    pass
  def getFileMinorVer(self):
    pass
  def getFileStdfloatDouble(self):
    pass
  def getFilename(self):
    pass
  def getLoaderOptions(self):
    pass
  def getSource(self):
    pass
  def get_current_major_ver(self):
    pass
  def get_current_minor_ver(self):
    pass
  def get_file_endian(self):
    pass
  def get_file_major_ver(self):
    pass
  def get_file_minor_ver(self):
    pass
  def get_file_stdfloat_double(self):
    pass
  def get_filename(self):
    pass
  def get_loader_options(self):
    pass
  def get_source(self):
    pass
  def init(self):
    pass
  def isEof(self):
    pass
  def is_eof(self):
    pass
  def readObject(self):
    pass
  def read_object(self):
    pass
  def resolve(self):
    pass
  def setLoaderOptions(self):
    pass
  def setSource(self):
    pass
  def set_loader_options(self):
    pass
  def set_source(self):
    pass
class BamWriter:
  def __init__(self):
    pass
  BEBigendian = int

  BELittleendian = int

  BENative = int

  BE_bigendian = int

  BE_littleendian = int

  BE_native = int

  BOCAdjunct = int

  BOCFileData = int

  BOCPop = int

  BOCPush = int

  BOCRemove = int

  BOC_adjunct = int

  BOC_file_data = int

  BOC_pop = int

  BOC_push = int

  BOC_remove = int

  BTMBasename = int

  BTMFullpath = int

  BTMRawdata = int

  BTMRelative = int

  BTMUnchanged = int

  BTM_basename = int

  BTM_fullpath = int

  BTM_rawdata = int

  BTM_relative = int

  BTM_unchanged = int

  def flush(self):
    pass
  def getFileEndian(self):
    pass
  def getFileStdfloatDouble(self):
    pass
  def getFileTextureMode(self):
    pass
  def getFilename(self):
    pass
  def getTarget(self):
    pass
  def get_file_endian(self):
    pass
  def get_file_stdfloat_double(self):
    pass
  def get_file_texture_mode(self):
    pass
  def get_filename(self):
    pass
  def get_target(self):
    pass
  def hasObject(self):
    pass
  def has_object(self):
    pass
  def init(self):
    pass
  def setFileTextureMode(self):
    pass
  def setTarget(self):
    pass
  def set_file_texture_mode(self):
    pass
  def set_target(self):
    pass
  def writeObject(self):
    pass
  def write_object(self):
    pass
class BillboardEffect:
  def __init__(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getAxialRotate(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getEyeRelative(self):
    pass
  def getLookAt(self):
    pass
  def getLookAtPoint(self):
    pass
  def get_num_effects():
    pass
  def getOffset(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUpVector(self):
    pass
  def get_axial_rotate(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_eye_relative(self):
    pass
  def get_look_at(self):
    pass
  def get_look_at_point(self):
    pass
  def get_num_effects():
    pass
  def get_offset(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_up_vector(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def make_axis():
    pass
  def make_point_eye():
    pass
  def make_point_world():
    pass
  def make_axis():
    pass
  def make_point_eye():
    pass
  def make_point_world():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class BindAnimRequest:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getFilename(self):
    pass
  def getLoader(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getModel(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getOptions(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_filename(self):
    pass
  def get_loader(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_model(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_options(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isReady(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_ready(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class BitArray:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestBits(self):
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def getNumBits(self):
    pass
  def get_num_bits_per_word():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getNumWords(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_bits(self):
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits(self):
    pass
  def get_num_bits_per_word():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_num_words(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BitMask16:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BitMask32:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BitMask64:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BitMask32:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BoundingBox:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getMax(self):
    pass
  def getMin(self):
    pass
  def getNumPlanes(self):
    pass
  def getNumPoints(self):
    pass
  def getPlane(self):
    pass
  def getPlanes(self):
    pass
  def getPoint(self):
    pass
  def getPoints(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_max(self):
    pass
  def get_min(self):
    pass
  def get_num_planes(self):
    pass
  def get_num_points(self):
    pass
  def get_plane(self):
    pass
  def get_planes(self):
    pass
  def get_point(self):
    pass
  def get_points(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class BoundingHexahedron:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getMax(self):
    pass
  def getMin(self):
    pass
  def getNumPlanes(self):
    pass
  def getNumPoints(self):
    pass
  def getPlane(self):
    pass
  def getPlanes(self):
    pass
  def getPoint(self):
    pass
  def getPoints(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_max(self):
    pass
  def get_min(self):
    pass
  def get_num_planes(self):
    pass
  def get_num_points(self):
    pass
  def get_plane(self):
    pass
  def get_planes(self):
    pass
  def get_point(self):
    pass
  def get_points(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class BoundingLine:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getPointA(self):
    pass
  def getPointB(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_point_a(self):
    pass
  def get_point_b(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class BoundingPlane:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getPlane(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_plane(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class BoundingSphere:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getMax(self):
    pass
  def getMin(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_approx_center(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_max(self):
    pass
  def get_min(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class BoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
class BufferContext:
  def __init__(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToIndexBufferContext(self):
    pass
  def downcastToTextureContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToVertexBufferContext(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_IndexBufferContext(self):
    pass
  def downcast_to_TextureContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_VertexBufferContext(self):
    pass
  def getActive(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getModified(self):
    pass
  def getResident(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_modified(self):
    pass
  def get_resident(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def upcastToSavedContext(self):
    pass
  def upcast_to_SavedContext(self):
    pass
class Buffered_DatagramConnection:
  def __init__(self):
    pass
  def Active(self):
    pass
  def ActiveOpen(self):
    pass
  def ActiveOpenNonBlocking(self):
    pass
  def AddAddress(self):
    pass
  def AddressQueueSize(self):
    pass
  def ClearAddresses(self):
    pass
  def Close(self):
    pass
  def DoConnect(self):
    pass
  def DontLinger(self):
    pass
  def ErrorIsWouldBlocking(self):
    pass
  def ErrorIs_WouldBlocking(self):
    pass
  def Flush(self):
    pass
  def GetLastError():
    pass
  def GetMessage(self):
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def IsConnected(self):
    pass
  def RecvData(self):
    pass
  def Reset(self):
    pass
  def SendData(self):
    pass
  def SendMessage(self):
    pass
  def SetBlocking(self):
    pass
  def SetLinger(self):
    pass
  def SetNoDelay(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSendBufferSize(self):
    pass
  def SetSocket(self):
    pass
  def ShutdownSend(self):
    pass
  def WaitForNetworkReadEvent(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Buffered_DatagramConnection:
  def __init__(self):
    pass
  def Active(self):
    pass
  def ActiveOpen(self):
    pass
  def ActiveOpenNonBlocking(self):
    pass
  def AddAddress(self):
    pass
  def AddressQueueSize(self):
    pass
  def ClearAddresses(self):
    pass
  def Close(self):
    pass
  def DoConnect(self):
    pass
  def DontLinger(self):
    pass
  def ErrorIsWouldBlocking(self):
    pass
  def ErrorIs_WouldBlocking(self):
    pass
  def Flush(self):
    pass
  def GetLastError():
    pass
  def GetMessage(self):
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def IsConnected(self):
    pass
  def RecvData(self):
    pass
  def Reset(self):
    pass
  def SendData(self):
    pass
  def SendMessage(self):
    pass
  def SetBlocking(self):
    pass
  def SetLinger(self):
    pass
  def SetNoDelay(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSendBufferSize(self):
    pass
  def SetSocket(self):
    pass
  def ShutdownSend(self):
    pass
  def WaitForNetworkReadEvent(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class ButtonHandle:
  def __init__(self):
    pass
  def getAlias(self):
    pass
  def getAsciiEquivalent(self):
    pass
  def get_class_type():
    pass
  def getIndex(self):
    pass
  def getName(self):
    pass
  def get_alias(self):
    pass
  def get_ascii_equivalent(self):
    pass
  def get_class_type():
    pass
  def get_index(self):
    pass
  def get_name(self):
    pass
  def hasAsciiEquivalent(self):
    pass
  def has_ascii_equivalent(self):
    pass
  def matches(self):
    pass
  def none():
    pass
  def output(self):
    pass
class ButtonNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getButtonMap(self):
    pass
  def getButtonState(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumButtons(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_button_map(self):
    pass
  def get_button_state(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_buttons(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isButtonKnown(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_button_known(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setButtonMap(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_button_map(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class ButtonRegistry:
  def __init__(self):
    pass
  def findAsciiButton(self):
    pass
  def find_ascii_button(self):
    pass
  def getButton(self):
    pass
  def get_button(self):
    pass
  def ptr():
    pass
  def write(self):
    pass
class ButtonThrower:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addParameter(self):
    pass
  def addStashed(self):
    pass
  def addThrowButton(self):
    pass
  def add_child(self):
    pass
  def add_parameter(self):
    pass
  def add_stashed(self):
    pass
  def add_throw_button(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearThrowButtons(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_throw_buttons(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getButtonDownEvent(self):
    pass
  def getButtonRepeatEvent(self):
    pass
  def getButtonUpEvent(self):
    pass
  def getCandidateEvent(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getModifierButtons(self):
    pass
  def getMoveEvent(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParameters(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParameter(self):
    pass
  def getParameters(self):
    pass
  def getParent(self):
    pass
  def getPrefix(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getSpecificFlag(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getThrowButtonsActive(self):
    pass
  def getTimeFlag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_button_down_event(self):
    pass
  def get_button_repeat_event(self):
    pass
  def get_button_up_event(self):
    pass
  def get_candidate_event(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_modifier_buttons(self):
    pass
  def get_move_event(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parameters(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parameter(self):
    pass
  def get_parameters(self):
    pass
  def get_parent(self):
    pass
  def get_prefix(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_specific_flag(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_throw_buttons_active(self):
    pass
  def get_time_flag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasThrowButton(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_throw_button(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def removeThrowButton(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def remove_throw_button(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setButtonDownEvent(self):
    pass
  def setButtonRepeatEvent(self):
    pass
  def setButtonUpEvent(self):
    pass
  def setCandidateEvent(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setKeystrokeEvent(self):
    pass
  def setModifierButtons(self):
    pass
  def setMoveEvent(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrefix(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSpecificFlag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setThrowButtonsActive(self):
    pass
  def setTimeFlag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_button_down_event(self):
    pass
  def set_button_repeat_event(self):
    pass
  def set_button_up_event(self):
    pass
  def set_candidate_event(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_keystroke_event(self):
    pass
  def set_modifier_buttons(self):
    pass
  def set_move_event(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prefix(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_specific_flag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_throw_buttons_active(self):
    pass
  def set_time_flag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class CPTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_ushort:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
class CPTA_ushort:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def clear(self):
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def size(self):
    pass
CSDefault = int

CSInvalid = int

CSYupLeft = int

CSYupRight = int

CSZupLeft = int

CSZupRight = int

CS_default = int

CS_invalid = int

CS_yup_left = int

CS_yup_right = int

CS_zup_left = int

CS_zup_right = int

class CString:
  def __init__(self):
    pass
class CachedTypedWritableReferenceCount:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class CallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def upcall(self):
    pass
class CallbackGraphicsWindow:
  def __init__(self):
    pass
  FMParasite = int

  FMRefresh = int

  FMRender = int

  FM_parasite = int

  FM_refresh = int

  FM_render = int

  RCTBeginFlip = int

  RCTBeginFrame = int

  RCTEndFlip = int

  RCTEndFrame = int

  RCT_begin_flip = int

  RCT_begin_frame = int

  RCT_end_flip = int

  RCT_end_frame = int

  RTMBindOrCopy = int

  RTMCopyRam = int

  RTMCopyTexture = int

  RTMNone = int

  RTMTriggeredCopyRam = int

  RTMTriggeredCopyTexture = int

  RTM_bind_or_copy = int

  RTM_copy_ram = int

  RTM_copy_texture = int

  RTM_none = int

  RTM_triggered_copy_ram = int

  RTM_triggered_copy_texture = int

  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def addPythonEventHandler(self):
    pass
  def addRenderTexture(self):
    pass
  def add_python_event_handler(self):
    pass
  def add_render_texture(self):
    pass
  def clearChildSort(self):
    pass
  def clearDeleteFlag(self):
    pass
  def clearEventsCallback(self):
    pass
  def clearPropertiesCallback(self):
    pass
  def clearRejectedProperties(self):
    pass
  def clearRenderCallback(self):
    pass
  def clearRenderTextures(self):
    pass
  def clear_child_sort(self):
    pass
  def clear_delete_flag(self):
    pass
  def clear_events_callback(self):
    pass
  def clear_properties_callback(self):
    pass
  def clear_rejected_properties(self):
    pass
  def clear_render_callback(self):
    pass
  def clear_render_textures(self):
    pass
  def closeIme(self):
    pass
  def close_ime(self):
    pass
  def countTextures(self):
    pass
  def count_textures(self):
    pass
  def createInputDevice(self):
    pass
  def create_input_device(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disableClears(self):
    pass
  def disablePointerEvents(self):
    pass
  def disablePointerMode(self):
    pass
  def disable_clears(self):
    pass
  def disable_pointer_events(self):
    pass
  def disable_pointer_mode(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def enablePointerEvents(self):
    pass
  def enablePointerMode(self):
    pass
  def enable_pointer_events(self):
    pass
  def enable_pointer_mode(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActiveDisplayRegion(self):
    pass
  def getActiveDisplayRegions(self):
    pass
  def getBamModified(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getCloseRequestEvent(self):
    pass
  def getDeleteFlag(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getEngine(self):
    pass
  def getEventsCallback(self):
    pass
  def getFbProperties(self):
    pass
  def getFbXSize(self):
    pass
  def getFbYSize(self):
    pass
  def getGsg(self):
    pass
  def getInputDevice(self):
    pass
  def getInputDeviceName(self):
    pass
  def getInputDeviceNames(self):
    pass
  def getInverted(self):
    pass
  def getLeftEyeColorMask(self):
    pass
  def getName(self):
    pass
  def getNumActiveDisplayRegions(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumInputDevices(self):
    pass
  def getOneShot(self):
    pass
  def getOverlayDisplayRegion(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def getPointer(self):
    pass
  def getProperties(self):
    pass
  def getPropertiesCallback(self):
    pass
  def getRedBlueStereo(self):
    pass
  def getRefCount(self):
    pass
  def getRejectedProperties(self):
    pass
  def getRenderCallback(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRequestedProperties(self):
    pass
  def getRightEyeColorMask(self):
    pass
  def getRtmMode(self):
    pass
  def getSbsLeftDimensions(self):
    pass
  def getSbsLeftXSize(self):
    pass
  def getSbsLeftYSize(self):
    pass
  def getSbsRightDimensions(self):
    pass
  def getSbsRightXSize(self):
    pass
  def getSbsRightYSize(self):
    pass
  def getScreenshot(self):
    pass
  def getSideBySideStereo(self):
    pass
  def getSort(self):
    pass
  def getSupportsRenderTexture(self):
    pass
  def getSwapEyes(self):
    pass
  def getTexture(self):
    pass
  def getTextureCard(self):
    pass
  def getTexturePlane(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexposedDraw(self):
    pass
  def getWindowEvent(self):
    pass
  def getWindowHandle(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_active_display_region(self):
    pass
  def get_active_display_regions(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_close_request_event(self):
    pass
  def get_delete_flag(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_engine(self):
    pass
  def get_events_callback(self):
    pass
  def get_fb_properties(self):
    pass
  def get_fb_x_size(self):
    pass
  def get_fb_y_size(self):
    pass
  def get_gsg(self):
    pass
  def get_input_device(self):
    pass
  def get_input_device_name(self):
    pass
  def get_input_device_names(self):
    pass
  def get_inverted(self):
    pass
  def get_left_eye_color_mask(self):
    pass
  def get_name(self):
    pass
  def get_num_active_display_regions(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_input_devices(self):
    pass
  def get_one_shot(self):
    pass
  def get_overlay_display_region(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_pointer(self):
    pass
  def get_properties(self):
    pass
  def get_properties_callback(self):
    pass
  def get_red_blue_stereo(self):
    pass
  def get_ref_count(self):
    pass
  def get_rejected_properties(self):
    pass
  def get_render_callback(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_requested_properties(self):
    pass
  def get_right_eye_color_mask(self):
    pass
  def get_rtm_mode(self):
    pass
  def get_sbs_left_dimensions(self):
    pass
  def get_sbs_left_x_size(self):
    pass
  def get_sbs_left_y_size(self):
    pass
  def get_sbs_right_dimensions(self):
    pass
  def get_sbs_right_x_size(self):
    pass
  def get_sbs_right_y_size(self):
    pass
  def get_screenshot(self):
    pass
  def get_side_by_side_stereo(self):
    pass
  def get_sort(self):
    pass
  def get_supports_render_texture(self):
    pass
  def get_swap_eyes(self):
    pass
  def get_texture(self):
    pass
  def get_texture_card(self):
    pass
  def get_texture_plane(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexposed_draw(self):
    pass
  def get_window_event(self):
    pass
  def get_window_handle(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasKeyboard(self):
    pass
  def hasPointer(self):
    pass
  def hasSize(self):
    pass
  def hasTexture(self):
    pass
  def has_keyboard(self):
    pass
  def has_pointer(self):
    pass
  def has_size(self):
    pass
  def has_texture(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isClosed(self):
    pass
  def isExactType(self):
    pass
  def isFullscreen(self):
    pass
  def isNonzeroSize(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_closed(self):
    pass
  def is_exact_type(self):
    pass
  def is_fullscreen(self):
    pass
  def is_nonzero_size(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def is_valid(self):
    pass
  def makeCubeMap(self):
    pass
  def makeDisplayRegion(self):
    pass
  def makeMonoDisplayRegion(self):
    pass
  def make_screenshot_filename():
    pass
  def makeStereoDisplayRegion(self):
    pass
  def makeTextureBuffer(self):
    pass
  def make_cube_map(self):
    pass
  def make_display_region(self):
    pass
  def make_mono_display_region(self):
    pass
  def make_screenshot_filename():
    pass
  def make_stereo_display_region(self):
    pass
  def make_texture_buffer(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def movePointer(self):
    pass
  def move_pointer(self):
    pass
  def ref(self):
    pass
  def removeAllDisplayRegions(self):
    pass
  def removeDisplayRegion(self):
    pass
  def removePythonEventHandler(self):
    pass
  def remove_all_display_regions(self):
    pass
  def remove_display_region(self):
    pass
  def remove_python_event_handler(self):
    pass
  def requestProperties(self):
    pass
  def request_properties(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setChildSort(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setCloseRequestEvent(self):
    pass
  def setEventsCallback(self):
    pass
  def setInverted(self):
    pass
  def setOneShot(self):
    pass
  def setOverlayDisplayRegion(self):
    pass
  def setPixelZoom(self):
    pass
  def setPropertiesCallback(self):
    pass
  def setRedBlueStereo(self):
    pass
  def setRenderCallback(self):
    pass
  def setSideBySideStereo(self):
    pass
  def setSort(self):
    pass
  def setSwapEyes(self):
    pass
  def setUnexposedDraw(self):
    pass
  def setWindowEvent(self):
    pass
  def set_active(self):
    pass
  def set_child_sort(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_close_request_event(self):
    pass
  def set_events_callback(self):
    pass
  def set_inverted(self):
    pass
  def set_one_shot(self):
    pass
  def set_overlay_display_region(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_properties_callback(self):
    pass
  def set_red_blue_stereo(self):
    pass
  def set_render_callback(self):
    pass
  def set_side_by_side_stereo(self):
    pass
  def set_sort(self):
    pass
  def set_swap_eyes(self):
    pass
  def set_unexposed_draw(self):
    pass
  def set_window_event(self):
    pass
  def setupRenderTexture(self):
    pass
  def setup_render_texture(self):
    pass
  def shareDepthBuffer(self):
    pass
  def share_depth_buffer(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def triggerCopy(self):
    pass
  def trigger_copy(self):
    pass
  def unref(self):
    pass
  def unshareDepthBuffer(self):
    pass
  def unshare_depth_buffer(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToGraphicsOutputBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_GraphicsOutputBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class CallbackNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearCullCallback(self):
    pass
  def clearDrawCallback(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_cull_callback(self):
    pass
  def clear_draw_callback(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCullCallback(self):
    pass
  def getDrawCallback(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_cull_callback(self):
    pass
  def get_draw_callback(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCullCallback(self):
    pass
  def setDrawCallback(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_cull_callback(self):
    pass
  def set_draw_callback(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CallbackObject:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class Camera:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def cleanupAuxSceneData(self):
    pass
  def cleanup_aux_scene_data(self):
    pass
  def clearAttrib(self):
    pass
  def clearAuxSceneData(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTagState(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_aux_scene_data(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_tag_state(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getAuxSceneData(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCameraMask(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInitialState(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getLodCenter(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTagState(self):
    pass
  def getTagStateKey(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_aux_scene_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_camera_mask(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_initial_state(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_lod_center(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tag_state(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTagState(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tag_state(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isActive(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_active(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listAuxSceneData(self):
    pass
  def listTags(self):
    pass
  def list_aux_scene_data(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setAuxSceneData(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCameraMask(self):
    pass
  def setCullBounds(self):
    pass
  def setCullCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setInitialState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setLodCenter(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setScene(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTagState(self):
    pass
  def setTagStateKey(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_aux_scene_data(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_camera_mask(self):
    pass
  def set_cull_bounds(self):
    pass
  def set_cull_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_initial_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_lod_center(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_scene(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tag_state(self):
    pass
  def set_tag_state_key(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CardMaker:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clearSourceGeometry(self):
    pass
  def clear_name(self):
    pass
  def clear_source_geometry(self):
    pass
  def generate(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def reset(self):
    pass
  def setColor(self):
    pass
  def setFrame(self):
    pass
  def setFrameFullscreenQuad(self):
    pass
  def setHas3dUvs(self):
    pass
  def setHasNormals(self):
    pass
  def setHasUvs(self):
    pass
  def setName(self):
    pass
  def setSourceGeometry(self):
    pass
  def setUvRange(self):
    pass
  def setUvRangeCube(self):
    pass
  def set_color(self):
    pass
  def set_frame(self):
    pass
  def set_frame_fullscreen_quad(self):
    pass
  def set_has_3d_uvs(self):
    pass
  def set_has_normals(self):
    pass
  def set_has_uvs(self):
    pass
  def set_name(self):
    pass
  def set_source_geometry(self):
    pass
  def set_uv_range(self):
    pass
  def set_uv_range_cube(self):
    pass
class Character:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearLodAnimation(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_lod_animation(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findJoint(self):
    pass
  def findParent(self):
    pass
  def findSlider(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_joint(self):
    pass
  def find_parent(self):
    pass
  def find_slider(self):
    pass
  def find_stashed(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getBundle(self):
    pass
  def getBundleHandle(self):
    pass
  def getBundleHandles(self):
    pass
  def getBundles(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumBundles(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_bundle(self):
    pass
  def get_bundle_handle(self):
    pass
  def get_bundle_handles(self):
    pass
  def get_bundles(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_bundles(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def mergeBundles(self):
    pass
  def merge_bundles(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLodAnimation(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lod_animation(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def update(self):
    pass
  def updateToNow(self):
    pass
  def update_to_now(self):
    pass
  def write(self):
    pass
  def writePartValues(self):
    pass
  def writeParts(self):
    pass
  def write_part_values(self):
    pass
  def write_parts(self):
    pass
class CharacterJoint:
  def __init__(self):
    pass
  def addLocalTransform(self):
    pass
  def addNetTransform(self):
    pass
  def add_local_transform(self):
    pass
  def add_net_transform(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearLocalTransforms(self):
    pass
  def clearName(self):
    pass
  def clearNetTransforms(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_local_transforms(self):
    pass
  def clear_name(self):
    pass
  def clear_net_transforms(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getCharacter(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getLocalTransforms(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNetTransform(self):
    pass
  def getNetTransforms(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getTransform(self):
    pass
  def getTransformState(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_character(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_local_transforms(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_net_transform(self):
    pass
  def get_net_transforms(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_transform(self):
    pass
  def get_transform_state(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasLocalTransform(self):
    pass
  def hasName(self):
    pass
  def hasNetTransform(self):
    pass
  def has_local_transform(self):
    pass
  def has_name(self):
    pass
  def has_net_transform(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def removeLocalTransform(self):
    pass
  def removeNetTransform(self):
    pass
  def remove_local_transform(self):
    pass
  def remove_net_transform(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class CharacterJointBundle:
  def __init__(self):
    pass
  BTComponentwise = int

  BTComponentwiseQuat = int

  BTLinear = int

  BTNormalizedLinear = int

  BT_componentwise = int

  BT_componentwise_quat = int

  BT_linear = int

  BT_normalized_linear = int

  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def applyTransform(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def apply_transform(self):
    pass
  def assign(self):
    pass
  def bindAnim(self):
    pass
  def bind_anim(self):
    pass
  def clearAnimPreload(self):
    pass
  def clearControlEffects(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_anim_preload(self):
    pass
  def clear_control_effects(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def controlJoint(self):
    pass
  def control_joint(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def freezeJoint(self):
    pass
  def freeze_joint(self):
    pass
  def getAnimBlendFlag(self):
    pass
  def getAnimPreload(self):
    pass
  def getBamModified(self):
    pass
  def getBlendType(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getControlEffect(self):
    pass
  def getForcedChannel(self):
    pass
  def getFrameBlendFlag(self):
    pass
  def getName(self):
    pass
  def getNode(self):
    pass
  def getNodes(self):
    pass
  def getNumChildren(self):
    pass
  def getNumNodes(self):
    pass
  def getRefCount(self):
    pass
  def getRootXform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_anim_blend_flag(self):
    pass
  def get_anim_preload(self):
    pass
  def get_bam_modified(self):
    pass
  def get_blend_type(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_control_effect(self):
    pass
  def get_forced_channel(self):
    pass
  def get_frame_blend_flag(self):
    pass
  def get_name(self):
    pass
  def get_node(self):
    pass
  def get_nodes(self):
    pass
  def get_num_children(self):
    pass
  def get_num_nodes(self):
    pass
  def get_ref_count(self):
    pass
  def get_root_xform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def loadBindAnim(self):
    pass
  def load_bind_anim(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mergeAnimPreloads(self):
    pass
  def merge_anim_preloads(self):
    pass
  def modifyAnimPreload(self):
    pass
  def modify_anim_preload(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def releaseJoint(self):
    pass
  def release_joint(self):
    pass
  def setAnimBlendFlag(self):
    pass
  def setAnimPreload(self):
    pass
  def setBlendType(self):
    pass
  def setControlEffect(self):
    pass
  def setFrameBlendFlag(self):
    pass
  def setName(self):
    pass
  def setRootXform(self):
    pass
  def set_anim_blend_flag(self):
    pass
  def set_anim_preload(self):
    pass
  def set_blend_type(self):
    pass
  def set_control_effect(self):
    pass
  def set_frame_blend_flag(self):
    pass
  def set_name(self):
    pass
  def set_root_xform(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def update(self):
    pass
  def waitPending(self):
    pass
  def wait_pending(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
  def xform(self):
    pass
class CharacterJointEffect:
  def __init__(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCharacter(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_character(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class CharacterSlider:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def updateInternals(self):
    pass
  def update_internals(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class CharacterVertexSlider:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCharSlider(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSlider(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_char_slider(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_slider(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ClientBase:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def forkAsynchronousThread(self):
    pass
  def fork_asynchronous_thread(self):
    pass
  def get_class_type():
    pass
  def getCoordinateSystem(self):
    pass
  def getLastPollTime(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_coordinate_system(self):
    pass
  def get_last_poll_time(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isForked(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_forked(self):
    pass
  def is_of_type(self):
    pass
  def poll(self):
    pass
  def ref(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_coordinate_system(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class ClipPlaneAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  OAdd = int

  ORemove = int

  OSet = int

  O_add = int

  O_remove = int

  O_set = int

  def addOffPlane(self):
    pass
  def addOnPlane(self):
    pass
  def addPlane(self):
    pass
  def add_off_plane(self):
    pass
  def add_on_plane(self):
    pass
  def add_plane(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def filterToMax(self):
    pass
  def filter_to_max(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getNumOffPlanes(self):
    pass
  def getNumOnPlanes(self):
    pass
  def getNumPlanes(self):
    pass
  def getOffPlane(self):
    pass
  def getOffPlanes(self):
    pass
  def getOnPlane(self):
    pass
  def getOnPlanes(self):
    pass
  def getOperation(self):
    pass
  def getPlane(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_num_off_planes(self):
    pass
  def get_num_on_planes(self):
    pass
  def get_num_planes(self):
    pass
  def get_off_plane(self):
    pass
  def get_off_planes(self):
    pass
  def get_on_plane(self):
    pass
  def get_on_planes(self):
    pass
  def get_operation(self):
    pass
  def get_plane(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasAllOff(self):
    pass
  def hasOffPlane(self):
    pass
  def hasOnPlane(self):
    pass
  def hasPlane(self):
    pass
  def has_all_off(self):
    pass
  def has_off_plane(self):
    pass
  def has_on_plane(self):
    pass
  def has_plane(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeOffPlane(self):
    pass
  def removeOnPlane(self):
    pass
  def removePlane(self):
    pass
  def remove_off_plane(self):
    pass
  def remove_on_plane(self):
    pass
  def remove_plane(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ClockObject:
  def __init__(self):
    pass
  MDegrade = int

  MForced = int

  MInteger = int

  MIntegerLimited = int

  MLimited = int

  MNonRealTime = int

  MNormal = int

  MSlave = int

  M_degrade = int

  M_forced = int

  M_integer = int

  M_integer_limited = int

  M_limited = int

  M_non_real_time = int

  M_normal = int

  M_slave = int

  def calcFrameRateDeviation(self):
    pass
  def calc_frame_rate_deviation(self):
    pass
  def checkErrors(self):
    pass
  def check_errors(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageFrameRate(self):
    pass
  def getAverageFrameRateInterval(self):
    pass
  def get_class_type():
    pass
  def getDegradeFactor(self):
    pass
  def getDt(self):
    pass
  def getFrameCount(self):
    pass
  def getFrameTime(self):
    pass
  def get_global_clock():
    pass
  def getLongTime(self):
    pass
  def getMaxDt(self):
    pass
  def getMaxFrameDuration(self):
    pass
  def getMode(self):
    pass
  def getNetFrameRate(self):
    pass
  def getRealTime(self):
    pass
  def getRefCount(self):
    pass
  def get_average_frame_rate(self):
    pass
  def get_average_frame_rate_interval(self):
    pass
  def get_class_type():
    pass
  def get_degrade_factor(self):
    pass
  def get_dt(self):
    pass
  def get_frame_count(self):
    pass
  def get_frame_time(self):
    pass
  def get_global_clock():
    pass
  def get_long_time(self):
    pass
  def get_max_dt(self):
    pass
  def get_max_frame_duration(self):
    pass
  def get_mode(self):
    pass
  def get_net_frame_rate(self):
    pass
  def get_real_time(self):
    pass
  def get_ref_count(self):
    pass
  def ref(self):
    pass
  def reset(self):
    pass
  def setAverageFrameRateInterval(self):
    pass
  def setDegradeFactor(self):
    pass
  def setDt(self):
    pass
  def setFrameCount(self):
    pass
  def setFrameRate(self):
    pass
  def setFrameTime(self):
    pass
  def setMaxDt(self):
    pass
  def setMode(self):
    pass
  def setRealTime(self):
    pass
  def set_average_frame_rate_interval(self):
    pass
  def set_degrade_factor(self):
    pass
  def set_dt(self):
    pass
  def set_frame_count(self):
    pass
  def set_frame_rate(self):
    pass
  def set_frame_time(self):
    pass
  def set_max_dt(self):
    pass
  def set_mode(self):
    pass
  def set_real_time(self):
    pass
  def syncFrameTime(self):
    pass
  def sync_frame_time(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def tick(self):
    pass
  def unref(self):
    pass
class BitMask32:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class CollisionBox:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getNumPlanes(self):
    pass
  def getNumPoints(self):
    pass
  def getPlane(self):
    pass
  def getPoint(self):
    pass
  def getPointAabb(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_num_planes(self):
    pass
  def get_num_points(self):
    pass
  def get_plane(self):
    pass
  def get_point(self):
    pass
  def get_point_aabb(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setCenter(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setPlane(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_center(self):
    pass
  def set_effective_normal(self):
    pass
  def set_plane(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionEntry:
  def __init__(self):
    pass
  def collided(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getAll(self):
    pass
  def getAllContactInfo(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getContactNormal(self):
    pass
  def getContactPos(self):
    pass
  def getFrom(self):
    pass
  def getFromNode(self):
    pass
  def getFromNodePath(self):
    pass
  def getInteriorPoint(self):
    pass
  def getInto(self):
    pass
  def getIntoNode(self):
    pass
  def getIntoNodePath(self):
    pass
  def getRefCount(self):
    pass
  def getRespectPrevTransform(self):
    pass
  def getSurfaceNormal(self):
    pass
  def getSurfacePoint(self):
    pass
  def getT(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_all(self):
    pass
  def get_all_contact_info(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_contact_normal(self):
    pass
  def get_contact_pos(self):
    pass
  def get_from(self):
    pass
  def get_from_node(self):
    pass
  def get_from_node_path(self):
    pass
  def get_interior_point(self):
    pass
  def get_into(self):
    pass
  def get_into_node(self):
    pass
  def get_into_node_path(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_prev_transform(self):
    pass
  def get_surface_normal(self):
    pass
  def get_surface_point(self):
    pass
  def get_t(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasContactNormal(self):
    pass
  def hasContactPos(self):
    pass
  def hasInteriorPoint(self):
    pass
  def hasInto(self):
    pass
  def hasSurfaceNormal(self):
    pass
  def hasSurfacePoint(self):
    pass
  def has_contact_normal(self):
    pass
  def has_contact_pos(self):
    pass
  def has_interior_point(self):
    pass
  def has_into(self):
    pass
  def has_surface_normal(self):
    pass
  def has_surface_point(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def resetCollided(self):
    pass
  def reset_collided(self):
    pass
  def setContactNormal(self):
    pass
  def setContactPos(self):
    pass
  def setInteriorPoint(self):
    pass
  def setSurfaceNormal(self):
    pass
  def setSurfacePoint(self):
    pass
  def setT(self):
    pass
  def set_contact_normal(self):
    pass
  def set_contact_pos(self):
    pass
  def set_interior_point(self):
    pass
  def set_surface_normal(self):
    pass
  def set_surface_point(self):
    pass
  def set_t(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionFloorMesh:
  def __init__(self):
    pass
  def addTriangle(self):
    pass
  def addVertex(self):
    pass
  def add_triangle(self):
    pass
  def add_vertex(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getNumTriangles(self):
    pass
  def getNumVertices(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getTriangle(self):
    pass
  def getTriangles(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_num_triangles(self):
    pass
  def get_num_vertices(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_triangle(self):
    pass
  def get_triangles(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionHandler:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerEvent:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def get_class_type():
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_class_type():
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def setAgainPattern(self):
    pass
  def setInPattern(self):
    pass
  def setOutPattern(self):
    pass
  def set_again_pattern(self):
    pass
  def set_in_pattern(self):
    pass
  def set_out_pattern(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerFloor:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addCollider(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_collider(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearCenter(self):
    pass
  def clearColliders(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_center(self):
    pass
  def clear_colliders(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getMaxVelocity(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOffset(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getReach(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_max_velocity(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_offset(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_reach(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasCenter(self):
    pass
  def hasCollider(self):
    pass
  def hasContact(self):
    pass
  def has_center(self):
    pass
  def has_collider(self):
    pass
  def has_contact(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setAgainPattern(self):
    pass
  def setCenter(self):
    pass
  def setInPattern(self):
    pass
  def setMaxVelocity(self):
    pass
  def setOffset(self):
    pass
  def setOutPattern(self):
    pass
  def setReach(self):
    pass
  def set_again_pattern(self):
    pass
  def set_center(self):
    pass
  def set_in_pattern(self):
    pass
  def set_max_velocity(self):
    pass
  def set_offset(self):
    pass
  def set_out_pattern(self):
    pass
  def set_reach(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerFluidPusher:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addCollider(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_collider(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearCenter(self):
    pass
  def clearColliders(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_center(self):
    pass
  def clear_colliders(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getHorizontal(self):
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_horizontal(self):
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasCenter(self):
    pass
  def hasCollider(self):
    pass
  def hasContact(self):
    pass
  def has_center(self):
    pass
  def has_collider(self):
    pass
  def has_contact(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setAgainPattern(self):
    pass
  def setCenter(self):
    pass
  def setHorizontal(self):
    pass
  def setInPattern(self):
    pass
  def setOutPattern(self):
    pass
  def set_again_pattern(self):
    pass
  def set_center(self):
    pass
  def set_horizontal(self):
    pass
  def set_in_pattern(self):
    pass
  def set_out_pattern(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerGravity:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addCollider(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def addVelocity(self):
    pass
  def add_again_pattern(self):
    pass
  def add_collider(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def add_velocity(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearCenter(self):
    pass
  def clearColliders(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_center(self):
    pass
  def clear_colliders(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def getAirborneHeight(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getContactNormal(self):
    pass
  def getGravity(self):
    pass
  def getImpactVelocity(self):
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getLegacyMode(self):
    pass
  def getMaxVelocity(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOffset(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getReach(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVelocity(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_airborne_height(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_contact_normal(self):
    pass
  def get_gravity(self):
    pass
  def get_impact_velocity(self):
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_legacy_mode(self):
    pass
  def get_max_velocity(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_offset(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_reach(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_velocity(self):
    pass
  def hasCenter(self):
    pass
  def hasCollider(self):
    pass
  def hasContact(self):
    pass
  def has_center(self):
    pass
  def has_collider(self):
    pass
  def has_contact(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOnGround(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_on_ground(self):
    pass
  def ref(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setAgainPattern(self):
    pass
  def setCenter(self):
    pass
  def setGravity(self):
    pass
  def setInPattern(self):
    pass
  def setLegacyMode(self):
    pass
  def setMaxVelocity(self):
    pass
  def setOffset(self):
    pass
  def setOutPattern(self):
    pass
  def setReach(self):
    pass
  def setVelocity(self):
    pass
  def set_again_pattern(self):
    pass
  def set_center(self):
    pass
  def set_gravity(self):
    pass
  def set_in_pattern(self):
    pass
  def set_legacy_mode(self):
    pass
  def set_max_velocity(self):
    pass
  def set_offset(self):
    pass
  def set_out_pattern(self):
    pass
  def set_reach(self):
    pass
  def set_velocity(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerHighestEvent:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def get_class_type():
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_class_type():
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def setAgainPattern(self):
    pass
  def setInPattern(self):
    pass
  def setOutPattern(self):
    pass
  def set_again_pattern(self):
    pass
  def set_in_pattern(self):
    pass
  def set_out_pattern(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerPhysical:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addCollider(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_collider(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearCenter(self):
    pass
  def clearColliders(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_center(self):
    pass
  def clear_colliders(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasCenter(self):
    pass
  def hasCollider(self):
    pass
  def hasContact(self):
    pass
  def has_center(self):
    pass
  def has_collider(self):
    pass
  def has_contact(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setAgainPattern(self):
    pass
  def setCenter(self):
    pass
  def setInPattern(self):
    pass
  def setOutPattern(self):
    pass
  def set_again_pattern(self):
    pass
  def set_center(self):
    pass
  def set_in_pattern(self):
    pass
  def set_out_pattern(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerPusher:
  def __init__(self):
    pass
  def addAgainPattern(self):
    pass
  def addCollider(self):
    pass
  def addInPattern(self):
    pass
  def addOutPattern(self):
    pass
  def add_again_pattern(self):
    pass
  def add_collider(self):
    pass
  def add_in_pattern(self):
    pass
  def add_out_pattern(self):
    pass
  def clear(self):
    pass
  def clearAgainPatterns(self):
    pass
  def clearCenter(self):
    pass
  def clearColliders(self):
    pass
  def clearInPatterns(self):
    pass
  def clearOutPatterns(self):
    pass
  def clear_again_patterns(self):
    pass
  def clear_center(self):
    pass
  def clear_colliders(self):
    pass
  def clear_in_patterns(self):
    pass
  def clear_out_patterns(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAgainPattern(self):
    pass
  def getAgainPatterns(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getHorizontal(self):
    pass
  def getInPattern(self):
    pass
  def getInPatterns(self):
    pass
  def getNumAgainPatterns(self):
    pass
  def getNumInPatterns(self):
    pass
  def getNumOutPatterns(self):
    pass
  def getOutPattern(self):
    pass
  def getOutPatterns(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_again_pattern(self):
    pass
  def get_again_patterns(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_horizontal(self):
    pass
  def get_in_pattern(self):
    pass
  def get_in_patterns(self):
    pass
  def get_num_again_patterns(self):
    pass
  def get_num_in_patterns(self):
    pass
  def get_num_out_patterns(self):
    pass
  def get_out_pattern(self):
    pass
  def get_out_patterns(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasCenter(self):
    pass
  def hasCollider(self):
    pass
  def hasContact(self):
    pass
  def has_center(self):
    pass
  def has_collider(self):
    pass
  def has_contact(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setAgainPattern(self):
    pass
  def setCenter(self):
    pass
  def setHorizontal(self):
    pass
  def setInPattern(self):
    pass
  def setOutPattern(self):
    pass
  def set_again_pattern(self):
    pass
  def set_center(self):
    pass
  def set_horizontal(self):
    pass
  def set_in_pattern(self):
    pass
  def set_out_pattern(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CollisionHandlerQueue:
  def __init__(self):
    pass
  def clearEntries(self):
    pass
  def clear_entries(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getEntries(self):
    pass
  def getEntry(self):
    pass
  def getNumEntries(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_entries(self):
    pass
  def get_entry(self):
    pass
  def get_num_entries(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def sortEntries(self):
    pass
  def sort_entries(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
class CollisionInvSphere:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setCenter(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setRadius(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_center(self):
    pass
  def set_effective_normal(self):
    pass
  def set_radius(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionLine:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getDirection(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getOrigin(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_direction(self):
    pass
  def get_effective_normal(self):
    pass
  def get_origin(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setDirection(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setFromLens(self):
    pass
  def setOrigin(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_direction(self):
    pass
  def set_effective_normal(self):
    pass
  def set_from_lens(self):
    pass
  def set_origin(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addSolid(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_solid(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSolids(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_solids(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getColliderSort(self):
    pass
  def get_default_collide_mask():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getFromCollideMask(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumSolids(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getSolid(self):
    pass
  def getSolids(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_collider_sort(self):
    pass
  def get_default_collide_mask():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_from_collide_mask(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_solids(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_solid(self):
    pass
  def get_solids(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def modifySolid(self):
    pass
  def modify_solid(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeSolid(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_solid(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCollideMask(self):
    pass
  def setColliderSort(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFromCollideMask(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSolid(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_collide_mask(self):
    pass
  def set_collider_sort(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_from_collide_mask(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_solid(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionParabola:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getParabola(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getT1(self):
    pass
  def getT2(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_parabola(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_t1(self):
    pass
  def get_t2(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setParabola(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setT1(self):
    pass
  def setT2(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_parabola(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_t1(self):
    pass
  def set_t2(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionPlane:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def flip(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getNormal(self):
    pass
  def getPlane(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_normal(self):
    pass
  def get_plane(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setPlane(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_plane(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionPolygon:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def flip(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getNormal(self):
    pass
  def getNumPoints(self):
    pass
  def getPlane(self):
    pass
  def getPoint(self):
    pass
  def getPoints(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_normal(self):
    pass
  def get_num_points(self):
    pass
  def get_plane(self):
    pass
  def get_point(self):
    pass
  def get_points(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isConcave(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def isValid(self):
    pass
  def is_concave(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def is_valid(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setPlane(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_plane(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def verify_points():
    pass
  def verify_points():
    pass
  def write(self):
    pass
class CollisionRay:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getDirection(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getOrigin(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_direction(self):
    pass
  def get_effective_normal(self):
    pass
  def get_origin(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setDirection(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setFromLens(self):
    pass
  def setOrigin(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_direction(self):
    pass
  def set_effective_normal(self):
    pass
  def set_from_lens(self):
    pass
  def set_origin(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionRecorder:
  def __init__(self):
    pass
  def downcastToCollisionVisualizer(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_CollisionVisualizer(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
class CollisionSegment:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getPointA(self):
    pass
  def getPointB(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_point_a(self):
    pass
  def get_point_b(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setFromLens(self):
    pass
  def setPointA(self):
    pass
  def setPointB(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_from_lens(self):
    pass
  def set_point_a(self):
    pass
  def set_point_b(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionSolid:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionSphere:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def getCenter(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_center(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setCenter(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setRadius(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_center(self):
    pass
  def set_effective_normal(self):
    pass
  def set_radius(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionTraverser:
  def __init__(self):
    pass
  def addCollider(self):
    pass
  def add_collider(self):
    pass
  def assign(self):
    pass
  def clearColliders(self):
    pass
  def clearName(self):
    pass
  def clearRecorder(self):
    pass
  def clear_colliders(self):
    pass
  def clear_name(self):
    pass
  def clear_recorder(self):
    pass
  def get_class_type():
    pass
  def getCollider(self):
    pass
  def getColliders(self):
    pass
  def getHandler(self):
    pass
  def getName(self):
    pass
  def getNumColliders(self):
    pass
  def getRecorder(self):
    pass
  def getRespectPrevTransform(self):
    pass
  def get_class_type():
    pass
  def get_collider(self):
    pass
  def get_colliders(self):
    pass
  def get_handler(self):
    pass
  def get_name(self):
    pass
  def get_num_colliders(self):
    pass
  def get_recorder(self):
    pass
  def get_respect_prev_transform(self):
    pass
  def hasCollider(self):
    pass
  def hasName(self):
    pass
  def hasRecorder(self):
    pass
  def has_collider(self):
    pass
  def has_name(self):
    pass
  def has_recorder(self):
    pass
  def hideCollisions(self):
    pass
  def hide_collisions(self):
    pass
  def output(self):
    pass
  def removeCollider(self):
    pass
  def remove_collider(self):
    pass
  def setName(self):
    pass
  def setRecorder(self):
    pass
  def setRespectPrevTransform(self):
    pass
  def set_name(self):
    pass
  def set_recorder(self):
    pass
  def set_respect_prev_transform(self):
    pass
  def showCollisions(self):
    pass
  def show_collisions(self):
    pass
  def traverse(self):
    pass
  def write(self):
    pass
class CollisionTube:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearEffectiveNormal(self):
    pass
  def clear_effective_normal(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCollisionOrigin(self):
    pass
  def getEffectiveNormal(self):
    pass
  def getPointA(self):
    pass
  def getPointB(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getRespectEffectiveNormal(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_collision_origin(self):
    pass
  def get_effective_normal(self):
    pass
  def get_point_a(self):
    pass
  def get_point_b(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_respect_effective_normal(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasEffectiveNormal(self):
    pass
  def has_effective_normal(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTangible(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_tangible(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setBounds(self):
    pass
  def setEffectiveNormal(self):
    pass
  def setPointA(self):
    pass
  def setPointB(self):
    pass
  def setRadius(self):
    pass
  def setRespectEffectiveNormal(self):
    pass
  def setTangible(self):
    pass
  def set_bounds(self):
    pass
  def set_effective_normal(self):
    pass
  def set_point_a(self):
    pass
  def set_point_b(self):
    pass
  def set_radius(self):
    pass
  def set_respect_effective_normal(self):
    pass
  def set_tangible(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class CollisionVisualizer:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToCollisionVisualizer(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_CollisionVisualizer(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNormalScale(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPointScale(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_normal_scale(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point_scale(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNormalScale(self):
    pass
  def setOverallHidden(self):
    pass
  def setPointScale(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_normal_scale(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_point_scale(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToCollisionRecorder(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CollisionRecorder(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ColorAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  TFlat = int

  TOff = int

  TVertex = int

  T_flat = int

  T_off = int

  T_vertex = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getColorType(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_color_type(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make_default():
    pass
  def make_flat():
    pass
  def make_off():
    pass
  def make_vertex():
    pass
  def make_default():
    pass
  def make_flat():
    pass
  def make_off():
    pass
  def make_vertex():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ColorBlendAttrib:
  def __init__(self):
    pass
  MAdd = int

  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MInvSubtract = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MMax = int

  MMin = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MSubtract = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_add = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_inv_subtract = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_max = int

  M_min = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_subtract = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  OAlphaScale = int

  OColorScale = int

  OConstantAlpha = int

  OConstantColor = int

  OFbufferAlpha = int

  OFbufferColor = int

  OIncomingAlpha = int

  OIncomingColor = int

  OIncomingColorSaturate = int

  OOne = int

  OOneMinusAlphaScale = int

  OOneMinusColorScale = int

  OOneMinusConstantAlpha = int

  OOneMinusConstantColor = int

  OOneMinusFbufferAlpha = int

  OOneMinusFbufferColor = int

  OOneMinusIncomingAlpha = int

  OOneMinusIncomingColor = int

  OZero = int

  O_alpha_scale = int

  O_color_scale = int

  O_constant_alpha = int

  O_constant_color = int

  O_fbuffer_alpha = int

  O_fbuffer_color = int

  O_incoming_alpha = int

  O_incoming_color = int

  O_incoming_color_saturate = int

  O_one = int

  O_one_minus_alpha_scale = int

  O_one_minus_color_scale = int

  O_one_minus_constant_alpha = int

  O_one_minus_constant_color = int

  O_one_minus_fbuffer_alpha = int

  O_one_minus_fbuffer_color = int

  O_one_minus_incoming_alpha = int

  O_one_minus_incoming_color = int

  O_zero = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getOperandA(self):
    pass
  def getOperandB(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_operand_a(self):
    pass
  def get_operand_b(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def involvesColorScale(self):
    pass
  def involvesConstantColor(self):
    pass
  def involves_color_scale(self):
    pass
  def involves_constant_color(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ColorScaleAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasAlphaScale(self):
    pass
  def hasRgbScale(self):
    pass
  def hasScale(self):
    pass
  def has_alpha_scale(self):
    pass
  def has_rgb_scale(self):
    pass
  def has_scale(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_identity():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_identity():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setScale(self):
    pass
  def set_scale(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ColorWriteAttrib:
  def __init__(self):
    pass
  CAll = int

  CAlpha = int

  CBlue = int

  CGreen = int

  COff = int

  CRed = int

  CRgb = int

  C_all = int

  C_alpha = int

  C_blue = int

  C_green = int

  C_off = int

  C_red = int

  C_rgb = int

  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getChannels(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_channels(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class CompassEffect:
  def __init__(self):
    pass
  PAll = int

  PPos = int

  PRot = int

  PScale = int

  PSx = int

  PSy = int

  PSz = int

  PX = int

  PY = int

  PZ = int

  P_all = int

  P_pos = int

  P_rot = int

  P_scale = int

  P_sx = int

  P_sy = int

  P_sz = int

  P_x = int

  P_y = int

  P_z = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getProperties(self):
    pass
  def getRefCount(self):
    pass
  def getReference(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_properties(self):
    pass
  def get_ref_count(self):
    pass
  def get_reference(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class ConditionVar:
  def __init__(self):
    pass
  def getMutex(self):
    pass
  def get_mutex(self):
    pass
  def notify(self):
    pass
  def output(self):
    pass
  def wait(self):
    pass
class ConditionVarDirect:
  def __init__(self):
    pass
  def getMutex(self):
    pass
  def get_mutex(self):
    pass
  def notify(self):
    pass
  def output(self):
    pass
  def wait(self):
    pass
class ConditionVarFull:
  def __init__(self):
    pass
  def getMutex(self):
    pass
  def get_mutex(self):
    pass
  def notify(self):
    pass
  def notifyAll(self):
    pass
  def notify_all(self):
    pass
  def output(self):
    pass
  def wait(self):
    pass
class ConditionVarFullDirect:
  def __init__(self):
    pass
  def getMutex(self):
    pass
  def get_mutex(self):
    pass
  def notify(self):
    pass
  def notifyAll(self):
    pass
  def notify_all(self):
    pass
  def output(self):
    pass
  def wait(self):
    pass
class Connection:
  def __init__(self):
    pass
  def considerFlush(self):
    pass
  def consider_flush(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def getAddress(self):
    pass
  def get_class_type():
    pass
  def getCollectTcp(self):
    pass
  def getCollectTcpInterval(self):
    pass
  def getManager(self):
    pass
  def getRefCount(self):
    pass
  def getSocket(self):
    pass
  def get_address(self):
    pass
  def get_class_type():
    pass
  def get_collect_tcp(self):
    pass
  def get_collect_tcp_interval(self):
    pass
  def get_manager(self):
    pass
  def get_ref_count(self):
    pass
  def get_socket(self):
    pass
  def ref(self):
    pass
  def setCollectTcp(self):
    pass
  def setCollectTcpInterval(self):
    pass
  def setIpTimeToLive(self):
    pass
  def setIpTypeOfService(self):
    pass
  def setKeepAlive(self):
    pass
  def setLinger(self):
    pass
  def setMaxSegment(self):
    pass
  def setNoDelay(self):
    pass
  def setRecvBufferSize(self):
    pass
  def setReuseAddr(self):
    pass
  def setSendBufferSize(self):
    pass
  def set_collect_tcp(self):
    pass
  def set_collect_tcp_interval(self):
    pass
  def set_ip_time_to_live(self):
    pass
  def set_ip_type_of_service(self):
    pass
  def set_keep_alive(self):
    pass
  def set_linger(self):
    pass
  def set_max_segment(self):
    pass
  def set_no_delay(self):
    pass
  def set_recv_buffer_size(self):
    pass
  def set_reuse_addr(self):
    pass
  def set_send_buffer_size(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class ConnectionListener:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionListener(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionListener(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getManager(self):
    pass
  def getNumThreads(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_manager(self):
    pass
  def get_num_threads(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isConnectionOk(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_polling(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
class ConnectionManager:
  def __init__(self):
    pass
  def closeConnection(self):
    pass
  def close_connection(self):
    pass
  def downcastToQueuedConnectionManager(self):
    pass
  def downcast_to_QueuedConnectionManager(self):
    pass
  def get_host_name():
    pass
  def get_host_name():
    pass
  def openTCPClientConnection(self):
    pass
  def openTCPServerRendezvous(self):
    pass
  def openUDPConnection(self):
    pass
  def open_TCP_client_connection(self):
    pass
  def open_TCP_server_rendezvous(self):
    pass
  def open_UDP_connection(self):
    pass
  def waitForReaders(self):
    pass
  def wait_for_readers(self):
    pass
class ConnectionReader:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getManager(self):
    pass
  def getNumThreads(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_manager(self):
    pass
  def get_num_threads(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isConnectionOk(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_polling(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
class ConnectionWriter:
  def __init__(self):
    pass
  def downcastToDatagramSinkNet(self):
    pass
  def downcast_to_DatagramSinkNet(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getManager(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getNumThreads(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_manager(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_num_threads(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isImmediate(self):
    pass
  def isValidForUdp(self):
    pass
  def is_immediate(self):
    pass
  def is_valid_for_udp(self):
    pass
  def send(self):
    pass
  def setMaxQueueSize(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
class CopyOnWriteObject:
  def __init__(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class CubicCurveseg:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjustPoint(self):
    pass
  def adjustPt(self):
    pass
  def adjustTangent(self):
    pass
  def adjust_draw_mask(self):
    pass
  def adjust_point(self):
    pass
  def adjust_pt(self):
    pass
  def adjust_tangent(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcLength(self):
    pass
  def calc_length(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findLength(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_length(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurveType(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxT(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDimensions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPt(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTangent(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve_type(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_t(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_dimensions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_pt(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tangent(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurveType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNumDimensions(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_num_dimensions(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeEgg(self):
    pass
  def write_egg(self):
    pass
class CullBinAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBinName(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getDrawOrder(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bin_name(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_draw_order(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class CullBinEnums:
  def __init__(self):
    pass
  BTBackToFront = int

  BTFixed = int

  BTFrontToBack = int

  BTInvalid = int

  BTStateSorted = int

  BTUnsorted = int

  BT_back_to_front = int

  BT_fixed = int

  BT_front_to_back = int

  BT_invalid = int

  BT_state_sorted = int

  BT_unsorted = int

class CullBinManager:
  def __init__(self):
    pass
  BTBackToFront = int

  BTFixed = int

  BTFrontToBack = int

  BTInvalid = int

  BTStateSorted = int

  BTUnsorted = int

  BT_back_to_front = int

  BT_fixed = int

  BT_front_to_back = int

  BT_invalid = int

  BT_state_sorted = int

  BT_unsorted = int

  def addBin(self):
    pass
  def add_bin(self):
    pass
  def findBin(self):
    pass
  def find_bin(self):
    pass
  def getBin(self):
    pass
  def getBinActive(self):
    pass
  def getBinName(self):
    pass
  def getBinSort(self):
    pass
  def getBinType(self):
    pass
  def getBins(self):
    pass
  def get_global_ptr():
    pass
  def getNumBins(self):
    pass
  def get_bin(self):
    pass
  def get_bin_active(self):
    pass
  def get_bin_name(self):
    pass
  def get_bin_sort(self):
    pass
  def get_bin_type(self):
    pass
  def get_bins(self):
    pass
  def get_global_ptr():
    pass
  def get_num_bins(self):
    pass
  def removeBin(self):
    pass
  def remove_bin(self):
    pass
  def setBinActive(self):
    pass
  def setBinSort(self):
    pass
  def setBinType(self):
    pass
  def set_bin_active(self):
    pass
  def set_bin_sort(self):
    pass
  def set_bin_type(self):
    pass
  def write(self):
    pass
class CullFaceAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MCullClockwise = int

  MCullCounterClockwise = int

  MCullNone = int

  MCullUnchanged = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_cull_clockwise = int

  M_cull_counter_clockwise = int

  M_cull_none = int

  M_cull_unchanged = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getActualMode(self):
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getEffectiveMode(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getReverse(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_actual_mode(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_effective_mode(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_reverse(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_reverse():
    pass
  def make_default():
    pass
  def make_reverse():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class CullResult:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def draw(self):
    pass
  def finishCull(self):
    pass
  def finish_cull(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def makeNext(self):
    pass
  def makeResultGraph(self):
    pass
  def make_next(self):
    pass
  def make_result_graph(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class CullTraverser:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def drawBoundingVolume(self):
    pass
  def draw_bounding_volume(self):
    pass
  def endTraverse(self):
    pass
  def end_traverse(self):
    pass
  def flush_level():
    pass
  def flush_level():
    pass
  def getCameraMask(self):
    pass
  def getCameraTransform(self):
    pass
  def get_class_type():
    pass
  def getCurrentThread(self):
    pass
  def getDepthOffsetDecals(self):
    pass
  def getEffectiveIncompleteRender(self):
    pass
  def getGsg(self):
    pass
  def getInitialState(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getTagStateKey(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getViewFrustum(self):
    pass
  def getWorldTransform(self):
    pass
  def get_camera_mask(self):
    pass
  def get_camera_transform(self):
    pass
  def get_class_type():
    pass
  def get_current_thread(self):
    pass
  def get_depth_offset_decals(self):
    pass
  def get_effective_incomplete_render(self):
    pass
  def get_gsg(self):
    pass
  def get_initial_state(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_view_frustum(self):
    pass
  def get_world_transform(self):
    pass
  def hasTagStateKey(self):
    pass
  def has_tag_state_key(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def setCameraMask(self):
    pass
  def setScene(self):
    pass
  def setViewFrustum(self):
    pass
  def set_camera_mask(self):
    pass
  def set_scene(self):
    pass
  def set_view_frustum(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def traverse(self):
    pass
  def traverseBelow(self):
    pass
  def traverse_below(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class CullTraverserData:
  def __init__(self):
    pass
  def applyTransformAndState(self):
    pass
  def apply_transform_and_state(self):
    pass
  def getModelviewTransform(self):
    pass
  def getNetTransform(self):
    pass
  def get_modelview_transform(self):
    pass
  def get_net_transform(self):
    pass
  def isInView(self):
    pass
  def isThisNodeHidden(self):
    pass
  def is_in_view(self):
    pass
  def is_this_node_hidden(self):
    pass
  def node(self):
    pass
class CurveFitter:
  def __init__(self):
    pass
  def addHpr(self):
    pass
  def addXyz(self):
    pass
  def addXyzHpr(self):
    pass
  def add_hpr(self):
    pass
  def add_xyz(self):
    pass
  def add_xyz_hpr(self):
    pass
  def computeTangents(self):
    pass
  def compute_tangents(self):
    pass
  def desample(self):
    pass
  def get_class_type():
    pass
  def getNumSamples(self):
    pass
  def getSampleHpr(self):
    pass
  def getSampleT(self):
    pass
  def getSampleTangent(self):
    pass
  def getSampleXyz(self):
    pass
  def get_class_type():
    pass
  def get_num_samples(self):
    pass
  def get_sample_hpr(self):
    pass
  def get_sample_t(self):
    pass
  def get_sample_tangent(self):
    pass
  def get_sample_xyz(self):
    pass
  def makeHermite(self):
    pass
  def makeNurbs(self):
    pass
  def make_hermite(self):
    pass
  def make_nurbs(self):
    pass
  def output(self):
    pass
  def removeSamples(self):
    pass
  def remove_samples(self):
    pass
  def reset(self):
    pass
  def sample(self):
    pass
  def sortPoints(self):
    pass
  def sort_points(self):
    pass
  def wrapHpr(self):
    pass
  def wrap_hpr(self):
    pass
  def write(self):
    pass
class DataGraphTraverser:
  def __init__(self):
    pass
  def collectLeftovers(self):
    pass
  def collect_leftovers(self):
    pass
  def getCurrentThread(self):
    pass
  def get_current_thread(self):
    pass
  def traverse(self):
    pass
class DataNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class DatagramGeneratorNet:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getDatagram(self):
    pass
  def getFile(self):
    pass
  def getFilePos(self):
    pass
  def getFilename(self):
    pass
  def getManager(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getNumThreads(self):
    pass
  def getOverflowFlag(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def getVfile(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_datagram(self):
    pass
  def get_file(self):
    pass
  def get_file_pos(self):
    pass
  def get_filename(self):
    pass
  def get_manager(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_num_threads(self):
    pass
  def get_overflow_flag(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def get_vfile(self):
    pass
  def isConnectionOk(self):
    pass
  def isEof(self):
    pass
  def isError(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_eof(self):
    pass
  def is_error(self):
    pass
  def is_polling(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def saveDatagram(self):
    pass
  def save_datagram(self):
    pass
  def setMaxQueueSize(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
  def upcastToConnectionReader(self):
    pass
  def upcastToDatagramGenerator(self):
    pass
  def upcastToQueuedReturnDatagram(self):
    pass
  def upcast_to_ConnectionReader(self):
    pass
  def upcast_to_DatagramGenerator(self):
    pass
  def upcast_to_QueuedReturn_Datagram(self):
    pass
class DatagramInputFile:
  def __init__(self):
    pass
  def close(self):
    pass
  def getDatagram(self):
    pass
  def getFile(self):
    pass
  def getFilePos(self):
    pass
  def getFilename(self):
    pass
  def getStream(self):
    pass
  def getVfile(self):
    pass
  def get_datagram(self):
    pass
  def get_file(self):
    pass
  def get_file_pos(self):
    pass
  def get_filename(self):
    pass
  def get_stream(self):
    pass
  def get_vfile(self):
    pass
  def isEof(self):
    pass
  def isError(self):
    pass
  def is_eof(self):
    pass
  def is_error(self):
    pass
  def open(self):
    pass
  def readHeader(self):
    pass
  def read_header(self):
    pass
  def saveDatagram(self):
    pass
  def save_datagram(self):
    pass
class DatagramSinkNet:
  def __init__(self):
    pass
  def copyDatagram(self):
    pass
  def copy_datagram(self):
    pass
  def downcastToDatagramSinkNet(self):
    pass
  def downcast_to_DatagramSinkNet(self):
    pass
  def flush(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getFile(self):
    pass
  def getFilePos(self):
    pass
  def getFilename(self):
    pass
  def getManager(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getNumThreads(self):
    pass
  def getRawMode(self):
    pass
  def getTarget(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_file(self):
    pass
  def get_file_pos(self):
    pass
  def get_filename(self):
    pass
  def get_manager(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_num_threads(self):
    pass
  def get_raw_mode(self):
    pass
  def get_target(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isError(self):
    pass
  def isImmediate(self):
    pass
  def isValidForUdp(self):
    pass
  def is_error(self):
    pass
  def is_immediate(self):
    pass
  def is_valid_for_udp(self):
    pass
  def putDatagram(self):
    pass
  def put_datagram(self):
    pass
  def send(self):
    pass
  def setMaxQueueSize(self):
    pass
  def setRawMode(self):
    pass
  def setTarget(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def set_raw_mode(self):
    pass
  def set_target(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
  def upcastToConnectionWriter(self):
    pass
  def upcastToDatagramSink(self):
    pass
  def upcast_to_ConnectionWriter(self):
    pass
  def upcast_to_DatagramSink(self):
    pass
class DecalEffect:
  def __init__(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class DepthOffsetAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getOffset(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_offset(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class DepthTestAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class DepthWriteAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MOn = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_on = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class DialNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDials(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_dials(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isDialKnown(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_dial_known(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def readDial(self):
    pass
  def read_dial(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class DirectionalLight:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def cleanupAuxSceneData(self):
    pass
  def cleanup_aux_scene_data(self):
    pass
  def clearAttrib(self):
    pass
  def clearAuxSceneData(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTagState(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_aux_scene_data(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_tag_state(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getAuxSceneData(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCameraMask(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDirection(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInitialState(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getLodCenter(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getSpecularColor(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTagState(self):
    pass
  def getTagStateKey(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_aux_scene_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_camera_mask(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_direction(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_initial_state(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_lod_center(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_specular_color(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tag_state(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTagState(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tag_state(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isActive(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isShadowCaster(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_active(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_shadow_caster(self):
    pass
  def is_under_scene_root(self):
    pass
  def listAuxSceneData(self):
    pass
  def listTags(self):
    pass
  def list_aux_scene_data(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setAuxSceneData(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCameraMask(self):
    pass
  def setColor(self):
    pass
  def setCullBounds(self):
    pass
  def setCullCenter(self):
    pass
  def setDirection(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setInitialState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setLodCenter(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPoint(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setScene(self):
    pass
  def setShadowCaster(self):
    pass
  def setSpecularColor(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTagState(self):
    pass
  def setTagStateKey(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_aux_scene_data(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_camera_mask(self):
    pass
  def set_color(self):
    pass
  def set_cull_bounds(self):
    pass
  def set_cull_center(self):
    pass
  def set_direction(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_initial_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_lod_center(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_point(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_scene(self):
    pass
  def set_shadow_caster(self):
    pass
  def set_specular_color(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tag_state(self):
    pass
  def set_tag_state_key(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToCamera(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Camera(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class DisplayInformation:
  def __init__(self):
    pass
  DSCreateDeviceError = int

  DSCreateWindowError = int

  DSDirect3dCreateError = int

  DSSuccess = int

  DSUnknown = int

  DS_create_device_error = int

  DS_create_window_error = int

  DS_direct_3d_create_error = int

  DS_success = int

  DS_unknown = int

  def getAvailablePageFileSize(self):
    pass
  def getAvailablePhysicalMemory(self):
    pass
  def getAvailableProcessVirtualMemory(self):
    pass
  def getCpuBrandIndex(self):
    pass
  def getCpuBrandString(self):
    pass
  def getCpuFrequency(self):
    pass
  def getCpuIdData(self):
    pass
  def getCpuIdSize(self):
    pass
  def getCpuIdVersion(self):
    pass
  def getCpuTime(self):
    pass
  def getCpuVendorString(self):
    pass
  def getCpuVersionInformation(self):
    pass
  def getCurrentCpuFrequency(self):
    pass
  def getDeviceId(self):
    pass
  def getDisplayModeBitsPerPixel(self):
    pass
  def getDisplayModeFullscreenOnly(self):
    pass
  def getDisplayModeHeight(self):
    pass
  def getDisplayModeRefreshRate(self):
    pass
  def getDisplayModeWidth(self):
    pass
  def getDisplayState(self):
    pass
  def getDriverBuild(self):
    pass
  def getDriverDateDay(self):
    pass
  def getDriverDateMonth(self):
    pass
  def getDriverDateYear(self):
    pass
  def getDriverProduct(self):
    pass
  def getDriverSubVersion(self):
    pass
  def getDriverVersion(self):
    pass
  def getMaximumCpuFrequency(self):
    pass
  def getMaximumWindowHeight(self):
    pass
  def getMaximumWindowWidth(self):
    pass
  def getMemoryLoad(self):
    pass
  def getNumCpuCores(self):
    pass
  def getNumLogicalCpus(self):
    pass
  def getOsPlatformId(self):
    pass
  def getOsVersionBuild(self):
    pass
  def getOsVersionMajor(self):
    pass
  def getOsVersionMinor(self):
    pass
  def getPageFaultCount(self):
    pass
  def getPageFileSize(self):
    pass
  def getPageFileUsage(self):
    pass
  def getPeakPageFileUsage(self):
    pass
  def getPeakProcessMemory(self):
    pass
  def getPhysicalMemory(self):
    pass
  def getProcessMemory(self):
    pass
  def getProcessVirtualMemory(self):
    pass
  def getShaderModel(self):
    pass
  def getTextureMemory(self):
    pass
  def getTotalDisplayModes(self):
    pass
  def getVendorId(self):
    pass
  def getVideoMemory(self):
    pass
  def getWindowBitsPerPixel(self):
    pass
  def get_available_page_file_size(self):
    pass
  def get_available_physical_memory(self):
    pass
  def get_available_process_virtual_memory(self):
    pass
  def get_cpu_brand_index(self):
    pass
  def get_cpu_brand_string(self):
    pass
  def get_cpu_frequency(self):
    pass
  def get_cpu_id_data(self):
    pass
  def get_cpu_id_size(self):
    pass
  def get_cpu_id_version(self):
    pass
  def get_cpu_time(self):
    pass
  def get_cpu_vendor_string(self):
    pass
  def get_cpu_version_information(self):
    pass
  def get_current_cpu_frequency(self):
    pass
  def get_device_id(self):
    pass
  def get_display_mode_bits_per_pixel(self):
    pass
  def get_display_mode_fullscreen_only(self):
    pass
  def get_display_mode_height(self):
    pass
  def get_display_mode_refresh_rate(self):
    pass
  def get_display_mode_width(self):
    pass
  def get_display_state(self):
    pass
  def get_driver_build(self):
    pass
  def get_driver_date_day(self):
    pass
  def get_driver_date_month(self):
    pass
  def get_driver_date_year(self):
    pass
  def get_driver_product(self):
    pass
  def get_driver_sub_version(self):
    pass
  def get_driver_version(self):
    pass
  def get_maximum_cpu_frequency(self):
    pass
  def get_maximum_window_height(self):
    pass
  def get_maximum_window_width(self):
    pass
  def get_memory_load(self):
    pass
  def get_num_cpu_cores(self):
    pass
  def get_num_logical_cpus(self):
    pass
  def get_os_platform_id(self):
    pass
  def get_os_version_build(self):
    pass
  def get_os_version_major(self):
    pass
  def get_os_version_minor(self):
    pass
  def get_page_fault_count(self):
    pass
  def get_page_file_size(self):
    pass
  def get_page_file_usage(self):
    pass
  def get_peak_page_file_usage(self):
    pass
  def get_peak_process_memory(self):
    pass
  def get_physical_memory(self):
    pass
  def get_process_memory(self):
    pass
  def get_process_virtual_memory(self):
    pass
  def get_shader_model(self):
    pass
  def get_texture_memory(self):
    pass
  def get_total_display_modes(self):
    pass
  def get_vendor_id(self):
    pass
  def get_video_memory(self):
    pass
  def get_window_bits_per_pixel(self):
    pass
  def updateCpuFrequency(self):
    pass
  def updateMemoryInformation(self):
    pass
  def update_cpu_frequency(self):
    pass
  def update_memory_information(self):
    pass
class DisplayRegion:
  def __init__(self):
    pass
  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def clearCullCallback(self):
    pass
  def clearDrawCallback(self):
    pass
  def clear_cull_callback(self):
    pass
  def clear_draw_callback(self):
    pass
  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getBottom(self):
    pass
  def getCamera(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getCubeMapIndex(self):
    pass
  def getCullCallback(self):
    pass
  def getCullTraverser(self):
    pass
  def getDimensions(self):
    pass
  def getDrawCallback(self):
    pass
  def getIncompleteRender(self):
    pass
  def getLeft(self):
    pass
  def getLensIndex(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelHeight(self):
    pass
  def getPixelWidth(self):
    pass
  def getPixelZoom(self):
    pass
  def getRefCount(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRight(self):
    pass
  def getScreenshot(self):
    pass
  def getSort(self):
    pass
  def getStereoChannel(self):
    pass
  def getTexViewOffset(self):
    pass
  def getTextureReloadPriority(self):
    pass
  def getTop(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWindow(self):
    pass
  def get_bottom(self):
    pass
  def get_camera(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_cube_map_index(self):
    pass
  def get_cull_callback(self):
    pass
  def get_cull_traverser(self):
    pass
  def get_dimensions(self):
    pass
  def get_draw_callback(self):
    pass
  def get_incomplete_render(self):
    pass
  def get_left(self):
    pass
  def get_lens_index(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_height(self):
    pass
  def get_pixel_width(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_ref_count(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_right(self):
    pass
  def get_screenshot(self):
    pass
  def get_sort(self):
    pass
  def get_stereo_channel(self):
    pass
  def get_tex_view_offset(self):
    pass
  def get_texture_reload_priority(self):
    pass
  def get_top(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_window(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def makeCullResultGraph(self):
    pass
  def make_screenshot_filename():
    pass
  def make_cull_result_graph(self):
    pass
  def make_screenshot_filename():
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setCamera(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setCubeMapIndex(self):
    pass
  def setCullCallback(self):
    pass
  def setCullTraverser(self):
    pass
  def setDimensions(self):
    pass
  def setDrawCallback(self):
    pass
  def setIncompleteRender(self):
    pass
  def setLensIndex(self):
    pass
  def setPixelZoom(self):
    pass
  def setSort(self):
    pass
  def setStereoChannel(self):
    pass
  def setTexViewOffset(self):
    pass
  def setTextureReloadPriority(self):
    pass
  def set_active(self):
    pass
  def set_camera(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_cube_map_index(self):
    pass
  def set_cull_callback(self):
    pass
  def set_cull_traverser(self):
    pass
  def set_dimensions(self):
    pass
  def set_draw_callback(self):
    pass
  def set_incomplete_render(self):
    pass
  def set_lens_index(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_sort(self):
    pass
  def set_stereo_channel(self):
    pass
  def set_tex_view_offset(self):
    pass
  def set_texture_reload_priority(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToDisplayRegionBase(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_DisplayRegionBase(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class DisplayRegionBase:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class DisplayRegionCullCallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getSceneSetup(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_scene_setup(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def upcall(self):
    pass
class DisplayRegionDrawCallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getCullResult(self):
    pass
  def getSceneSetup(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_cull_result(self):
    pass
  def get_scene_setup(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def upcall(self):
    pass
class DisplaySearchParameters:
  def __init__(self):
    pass
  def setMaximumBitsPerPixel(self):
    pass
  def setMaximumHeight(self):
    pass
  def setMaximumWidth(self):
    pass
  def setMinimumBitsPerPixel(self):
    pass
  def setMinimumHeight(self):
    pass
  def setMinimumWidth(self):
    pass
  def set_maximum_bits_per_pixel(self):
    pass
  def set_maximum_height(self):
    pass
  def set_maximum_width(self):
    pass
  def set_minimum_bits_per_pixel(self):
    pass
  def set_minimum_height(self):
    pass
  def set_minimum_width(self):
    pass
class DoubleBitMaskNative:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class BitMask32:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class DrawableRegion:
  def __init__(self):
    pass
  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_renderbuffer_type():
    pass
  def isAnyClearActive(self):
    pass
  def is_any_clear_active(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setPixelZoom(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_pixel_zoom(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
class DriveInterface:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAllButtons(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearButton(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_all_buttons(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_button(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceDgraph(self):
    pass
  def force_dgraph(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getForceMouse(self):
    pass
  def getForwardSpeed(self):
    pass
  def getH(self):
    pass
  def getHorizontalDeadZone(self):
    pass
  def getHorizontalRampDownTime(self):
    pass
  def getHorizontalRampUpTime(self):
    pass
  def getHpr(self):
    pass
  def getIgnoreMouse(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMat(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getP(self):
    pass
  def getParent(self):
    pass
  def getPos(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getR(self):
    pass
  def getRefCount(self):
    pass
  def getReverseSpeed(self):
    pass
  def getRotSpeed(self):
    pass
  def getRotateSpeed(self):
    pass
  def getSpeed(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStopThisFrame(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVerticalDeadZone(self):
    pass
  def getVerticalRampDownTime(self):
    pass
  def getVerticalRampUpTime(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_force_mouse(self):
    pass
  def get_forward_speed(self):
    pass
  def get_h(self):
    pass
  def get_horizontal_dead_zone(self):
    pass
  def get_horizontal_ramp_down_time(self):
    pass
  def get_horizontal_ramp_up_time(self):
    pass
  def get_hpr(self):
    pass
  def get_ignore_mouse(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_mat(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_p(self):
    pass
  def get_parent(self):
    pass
  def get_pos(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_r(self):
    pass
  def get_ref_count(self):
    pass
  def get_reverse_speed(self):
    pass
  def get_rot_speed(self):
    pass
  def get_rotate_speed(self):
    pass
  def get_speed(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_stop_this_frame(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_vertical_dead_zone(self):
    pass
  def get_vertical_ramp_down_time(self):
    pass
  def get_vertical_ramp_up_time(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def requireButton(self):
    pass
  def require_button(self):
    pass
  def reset(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setForceMouse(self):
    pass
  def setForceRoll(self):
    pass
  def setForwardSpeed(self):
    pass
  def setH(self):
    pass
  def setHorizontalDeadZone(self):
    pass
  def setHorizontalRampDownTime(self):
    pass
  def setHorizontalRampUpTime(self):
    pass
  def setHpr(self):
    pass
  def setIgnoreMouse(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMat(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setP(self):
    pass
  def setPos(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setR(self):
    pass
  def setReverseSpeed(self):
    pass
  def setRotateSpeed(self):
    pass
  def setState(self):
    pass
  def setStopThisFrame(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVerticalDeadZone(self):
    pass
  def setVerticalRampDownTime(self):
    pass
  def setVerticalRampUpTime(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_force_mouse(self):
    pass
  def set_force_roll(self):
    pass
  def set_forward_speed(self):
    pass
  def set_h(self):
    pass
  def set_horizontal_dead_zone(self):
    pass
  def set_horizontal_ramp_down_time(self):
    pass
  def set_horizontal_ramp_up_time(self):
    pass
  def set_hpr(self):
    pass
  def set_ignore_mouse(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_mat(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_p(self):
    pass
  def set_pos(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_r(self):
    pass
  def set_reverse_speed(self):
    pass
  def set_rotate_speed(self):
    pass
  def set_state(self):
    pass
  def set_stop_this_frame(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_vertical_dead_zone(self):
    pass
  def set_vertical_ramp_down_time(self):
    pass
  def set_vertical_ramp_up_time(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
def Dtool_AddToDictionary():
  pass
def Dtool_BorrowThisReference():
  pass
Dtool_PyNativeInterface = int

class DynamicTextFont:
  def __init__(self):
    pass
  RMExtruded = int

  RMInvalid = int

  RMPolygon = int

  RMSolid = int

  RMTexture = int

  RMWireframe = int

  RM_extruded = int

  RM_invalid = int

  RM_polygon = int

  RM_solid = int

  RM_texture = int

  RM_wireframe = int

  WODefault = int

  WOInvalid = int

  WOLeft = int

  WORight = int

  WO_default = int

  WO_invalid = int

  WO_left = int

  WO_right = int

  def assign(self):
    pass
  def clear(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToDynamicTextFont(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_DynamicTextFont(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def garbageCollect(self):
    pass
  def garbage_collect(self):
    pass
  def getAnisotropicDegree(self):
    pass
  def getBg(self):
    pass
  def get_class_type():
    pass
  def getFg(self):
    pass
  def getFontPixelSize(self):
    pass
  def getLineHeight(self):
    pass
  def getMagfilter(self):
    pass
  def getMinfilter(self):
    pass
  def getName(self):
    pass
  def getNativeAntialias(self):
    pass
  def getNumPages(self):
    pass
  def getOutlineColor(self):
    pass
  def getOutlineFeather(self):
    pass
  def getOutlineWidth(self):
    pass
  def getPage(self):
    pass
  def getPageXSize(self):
    pass
  def getPageYSize(self):
    pass
  def getPages(self):
    pass
  def getPixelSize(self):
    pass
  def getPixelsPerUnit(self):
    pass
  def getPointSize(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def getPolyMargin(self):
    pass
  def getRefCount(self):
    pass
  def getRenderMode(self):
    pass
  def getScaleFactor(self):
    pass
  def getSpaceAdvance(self):
    pass
  def getTexFormat(self):
    pass
  def getTextureMargin(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWindingOrder(self):
    pass
  def get_anisotropic_degree(self):
    pass
  def get_bg(self):
    pass
  def get_class_type():
    pass
  def get_fg(self):
    pass
  def get_font_pixel_size(self):
    pass
  def get_line_height(self):
    pass
  def get_magfilter(self):
    pass
  def get_minfilter(self):
    pass
  def get_name(self):
    pass
  def get_native_antialias(self):
    pass
  def get_num_pages(self):
    pass
  def get_outline_color(self):
    pass
  def get_outline_feather(self):
    pass
  def get_outline_width(self):
    pass
  def get_page(self):
    pass
  def get_page_x_size(self):
    pass
  def get_page_y_size(self):
    pass
  def get_pages(self):
    pass
  def get_pixel_size(self):
    pass
  def get_pixels_per_unit(self):
    pass
  def get_point_size(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def get_poly_margin(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_mode(self):
    pass
  def get_scale_factor(self):
    pass
  def get_space_advance(self):
    pass
  def get_tex_format(self):
    pass
  def get_texture_margin(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_winding_order(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setAnisotropicDegree(self):
    pass
  def setBg(self):
    pass
  def setFg(self):
    pass
  def setLineHeight(self):
    pass
  def setMagfilter(self):
    pass
  def setMinfilter(self):
    pass
  def setName(self):
    pass
  def setNativeAntialias(self):
    pass
  def setOutline(self):
    pass
  def setPageSize(self):
    pass
  def setPixelSize(self):
    pass
  def setPixelsPerUnit(self):
    pass
  def setPointSize(self):
    pass
  def setPolyMargin(self):
    pass
  def setRenderMode(self):
    pass
  def setScaleFactor(self):
    pass
  def setSpaceAdvance(self):
    pass
  def setTextureMargin(self):
    pass
  def setWindingOrder(self):
    pass
  def set_anisotropic_degree(self):
    pass
  def set_bg(self):
    pass
  def set_fg(self):
    pass
  def set_line_height(self):
    pass
  def set_magfilter(self):
    pass
  def set_minfilter(self):
    pass
  def set_name(self):
    pass
  def set_native_antialias(self):
    pass
  def set_outline(self):
    pass
  def set_page_size(self):
    pass
  def set_pixel_size(self):
    pass
  def set_pixels_per_unit(self):
    pass
  def set_point_size(self):
    pass
  def set_poly_margin(self):
    pass
  def set_render_mode(self):
    pass
  def set_scale_factor(self):
    pass
  def set_space_advance(self):
    pass
  def set_texture_margin(self):
    pass
  def set_winding_order(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToFreetypeFont(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTextFont(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_FreetypeFont(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TextFont(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write(self):
    pass
class DynamicTextPage:
  def __init__(self):
    pass
  CMDefault = int

  CMDxt1 = int

  CMDxt2 = int

  CMDxt3 = int

  CMDxt4 = int

  CMDxt5 = int

  CMFxt1 = int

  CMOff = int

  CMOn = int

  CMPvr12bpp = int

  CMPvr14bpp = int

  CM_default = int

  CM_dxt1 = int

  CM_dxt2 = int

  CM_dxt3 = int

  CM_dxt4 = int

  CM_dxt5 = int

  CM_fxt1 = int

  CM_off = int

  CM_on = int

  CM_pvr1_2bpp = int

  CM_pvr1_4bpp = int

  FAlpha = int

  FBlue = int

  FColorIndex = int

  FDepthComponent = int

  FDepthComponent16 = int

  FDepthComponent24 = int

  FDepthComponent32 = int

  FDepthStencil = int

  FGreen = int

  FLuminance = int

  FLuminanceAlpha = int

  FLuminanceAlphamask = int

  FRed = int

  FRgb = int

  FRgb12 = int

  FRgb332 = int

  FRgb5 = int

  FRgb8 = int

  FRgba = int

  FRgba12 = int

  FRgba16 = int

  FRgba32 = int

  FRgba4 = int

  FRgba5 = int

  FRgba8 = int

  FRgbm = int

  FTDefault = int

  FTInvalid = int

  FTLinear = int

  FTLinearMipmapLinear = int

  FTLinearMipmapNearest = int

  FTNearest = int

  FTNearestMipmapLinear = int

  FTNearestMipmapNearest = int

  FTShadow = int

  FT_default = int

  FT_invalid = int

  FT_linear = int

  FT_linear_mipmap_linear = int

  FT_linear_mipmap_nearest = int

  FT_nearest = int

  FT_nearest_mipmap_linear = int

  FT_nearest_mipmap_nearest = int

  FT_shadow = int

  F_alpha = int

  F_blue = int

  F_color_index = int

  F_depth_component = int

  F_depth_component16 = int

  F_depth_component24 = int

  F_depth_component32 = int

  F_depth_stencil = int

  F_green = int

  F_luminance = int

  F_luminance_alpha = int

  F_luminance_alphamask = int

  F_red = int

  F_rgb = int

  F_rgb12 = int

  F_rgb332 = int

  F_rgb5 = int

  F_rgb8 = int

  F_rgba = int

  F_rgba12 = int

  F_rgba16 = int

  F_rgba32 = int

  F_rgba4 = int

  F_rgba5 = int

  F_rgba8 = int

  F_rgbm = int

  QLBest = int

  QLDefault = int

  QLFastest = int

  QLNormal = int

  QL_best = int

  QL_default = int

  QL_fastest = int

  QL_normal = int

  TFloat = int

  TT1dTexture = int

  TT2dTexture = int

  TT2dTextureArray = int

  TT3dTexture = int

  TTCubeMap = int

  TT_1d_texture = int

  TT_2d_texture = int

  TT_2d_texture_array = int

  TT_3d_texture = int

  TT_cube_map = int

  TUnsignedByte = int

  TUnsignedInt248 = int

  TUnsignedShort = int

  T_float = int

  T_unsigned_byte = int

  T_unsigned_int_24_8 = int

  T_unsigned_short = int

  WMBorderColor = int

  WMClamp = int

  WMInvalid = int

  WMMirror = int

  WMMirrorOnce = int

  WMRepeat = int

  WM_border_color = int

  WM_clamp = int

  WM_invalid = int

  WM_mirror = int

  WM_mirror_once = int

  WM_repeat = int

  def assign(self):
    pass
  def clear(self):
    pass
  def clearAlphaFilename(self):
    pass
  def clearAlphaFullpath(self):
    pass
  def clearAuxData(self):
    pass
  def clearFilename(self):
    pass
  def clearFullpath(self):
    pass
  def clearName(self):
    pass
  def clearRamImage(self):
    pass
  def clearRamMipmapImage(self):
    pass
  def clearRamMipmapImages(self):
    pass
  def clearSimpleRamImage(self):
    pass
  def clear_alpha_filename(self):
    pass
  def clear_alpha_fullpath(self):
    pass
  def clear_aux_data(self):
    pass
  def clear_filename(self):
    pass
  def clear_fullpath(self):
    pass
  def clear_name(self):
    pass
  def clear_ram_image(self):
    pass
  def clear_ram_mipmap_image(self):
    pass
  def clear_ram_mipmap_images(self):
    pass
  def clear_simple_ram_image(self):
    pass
  def compressRamImage(self):
    pass
  def compress_ram_image(self):
    pass
  def considerRescale(self):
    pass
  def consider_rescale(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def down_to_power_2():
    pass
  def down_to_power_2():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcastToVideoTexture(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def downcast_to_VideoTexture(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def estimateTextureMemory(self):
    pass
  def estimate_texture_memory(self):
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def generateAlphaScaleMap(self):
    pass
  def generateNormalizationCubeMap(self):
    pass
  def generateRamMipmapImages(self):
    pass
  def generateSimpleRamImage(self):
    pass
  def generate_alpha_scale_map(self):
    pass
  def generate_normalization_cube_map(self):
    pass
  def generate_ram_mipmap_images(self):
    pass
  def generate_simple_ram_image(self):
    pass
  def getActive(self):
    pass
  def getAlphaFilename(self):
    pass
  def getAlphaFullpath(self):
    pass
  def getAnisotropicDegree(self):
    pass
  def getAutoTextureScale(self):
    pass
  def getAuxData(self):
    pass
  def getBamModified(self):
    pass
  def getBorderColor(self):
    pass
  def get_class_type():
    pass
  def getComponentType(self):
    pass
  def getComponentWidth(self):
    pass
  def getCompression(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getEffectiveAnisotropicDegree(self):
    pass
  def getEffectiveMagfilter(self):
    pass
  def getEffectiveMinfilter(self):
    pass
  def getEffectiveQualityLevel(self):
    pass
  def getExpectedMipmapNumPages(self):
    pass
  def getExpectedMipmapXSize(self):
    pass
  def getExpectedMipmapYSize(self):
    pass
  def getExpectedMipmapZSize(self):
    pass
  def getExpectedNumMipmapLevels(self):
    pass
  def getExpectedRamImageSize(self):
    pass
  def getExpectedRamMipmapImageSize(self):
    pass
  def getExpectedRamMipmapPageSize(self):
    pass
  def getExpectedRamMipmapViewSize(self):
    pass
  def getExpectedRamPageSize(self):
    pass
  def getFilename(self):
    pass
  def getFormat(self):
    pass
  def getFullpath(self):
    pass
  def getImageModified(self):
    pass
  def getKeepRamImage(self):
    pass
  def getLoadedFromImage(self):
    pass
  def getLoadedFromTxo(self):
    pass
  def getMagfilter(self):
    pass
  def getMatchFramebufferFormat(self):
    pass
  def getMinfilter(self):
    pass
  def getName(self):
    pass
  def getNumComponents(self):
    pass
  def getNumLoadableRamMipmapImages(self):
    pass
  def getNumPages(self):
    pass
  def getNumRamMipmapImages(self):
    pass
  def getNumViews(self):
    pass
  def getOrigFileXSize(self):
    pass
  def getOrigFileYSize(self):
    pass
  def getOrigFileZSize(self):
    pass
  def getPadXSize(self):
    pass
  def getPadYSize(self):
    pass
  def getPadZSize(self):
    pass
  def getPostLoadStoreCache(self):
    pass
  def getPropertiesModified(self):
    pass
  def getQualityLevel(self):
    pass
  def getRamImage(self):
    pass
  def getRamImageAs(self):
    pass
  def getRamImageCompression(self):
    pass
  def getRamImageSize(self):
    pass
  def getRamMipmapImage(self):
    pass
  def getRamMipmapImageSize(self):
    pass
  def getRamMipmapPageSize(self):
    pass
  def getRamMipmapViewSize(self):
    pass
  def getRamPageSize(self):
    pass
  def getRamViewSize(self):
    pass
  def getRefCount(self):
    pass
  def getRenderToTexture(self):
    pass
  def getResident(self):
    pass
  def getSimpleImageModified(self):
    pass
  def getSimpleRamImage(self):
    pass
  def getSimpleRamImageSize(self):
    pass
  def getSimpleXSize(self):
    pass
  def getSimpleYSize(self):
    pass
  def getTexScale(self):
    pass
  def getTextureType(self):
    pass
  def get_textures_power_2():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUncompressedRamImage(self):
    pass
  def getWrapU(self):
    pass
  def getWrapV(self):
    pass
  def getWrapW(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZSize(self):
    pass
  def get_active(self):
    pass
  def get_alpha_filename(self):
    pass
  def get_alpha_fullpath(self):
    pass
  def get_anisotropic_degree(self):
    pass
  def get_auto_texture_scale(self):
    pass
  def get_aux_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_border_color(self):
    pass
  def get_class_type():
    pass
  def get_component_type(self):
    pass
  def get_component_width(self):
    pass
  def get_compression(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_effective_anisotropic_degree(self):
    pass
  def get_effective_magfilter(self):
    pass
  def get_effective_minfilter(self):
    pass
  def get_effective_quality_level(self):
    pass
  def get_expected_mipmap_num_pages(self):
    pass
  def get_expected_mipmap_x_size(self):
    pass
  def get_expected_mipmap_y_size(self):
    pass
  def get_expected_mipmap_z_size(self):
    pass
  def get_expected_num_mipmap_levels(self):
    pass
  def get_expected_ram_image_size(self):
    pass
  def get_expected_ram_mipmap_image_size(self):
    pass
  def get_expected_ram_mipmap_page_size(self):
    pass
  def get_expected_ram_mipmap_view_size(self):
    pass
  def get_expected_ram_page_size(self):
    pass
  def get_filename(self):
    pass
  def get_format(self):
    pass
  def get_fullpath(self):
    pass
  def get_image_modified(self):
    pass
  def get_keep_ram_image(self):
    pass
  def get_loaded_from_image(self):
    pass
  def get_loaded_from_txo(self):
    pass
  def get_magfilter(self):
    pass
  def get_match_framebuffer_format(self):
    pass
  def get_minfilter(self):
    pass
  def get_name(self):
    pass
  def get_num_components(self):
    pass
  def get_num_loadable_ram_mipmap_images(self):
    pass
  def get_num_pages(self):
    pass
  def get_num_ram_mipmap_images(self):
    pass
  def get_num_views(self):
    pass
  def get_orig_file_x_size(self):
    pass
  def get_orig_file_y_size(self):
    pass
  def get_orig_file_z_size(self):
    pass
  def get_pad_x_size(self):
    pass
  def get_pad_y_size(self):
    pass
  def get_pad_z_size(self):
    pass
  def get_post_load_store_cache(self):
    pass
  def get_properties_modified(self):
    pass
  def get_quality_level(self):
    pass
  def get_ram_image(self):
    pass
  def get_ram_image_as(self):
    pass
  def get_ram_image_compression(self):
    pass
  def get_ram_image_size(self):
    pass
  def get_ram_mipmap_image(self):
    pass
  def get_ram_mipmap_image_size(self):
    pass
  def get_ram_mipmap_page_size(self):
    pass
  def get_ram_mipmap_view_size(self):
    pass
  def get_ram_page_size(self):
    pass
  def get_ram_view_size(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_to_texture(self):
    pass
  def get_resident(self):
    pass
  def get_simple_image_modified(self):
    pass
  def get_simple_ram_image(self):
    pass
  def get_simple_ram_image_size(self):
    pass
  def get_simple_x_size(self):
    pass
  def get_simple_y_size(self):
    pass
  def get_tex_scale(self):
    pass
  def get_texture_type(self):
    pass
  def get_textures_power_2():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_uncompressed_ram_image(self):
    pass
  def get_wrap_u(self):
    pass
  def get_wrap_v(self):
    pass
  def get_wrap_w(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_z_size(self):
    pass
  def hasAllRamMipmapImages(self):
    pass
  def hasAlphaFilename(self):
    pass
  def hasAlphaFullpath(self):
    pass
  def hasAutoTextureScale(self):
    pass
  def hasCompression(self):
    pass
  def hasFilename(self):
    pass
  def hasFullpath(self):
    pass
  def hasName(self):
    pass
  def hasRamImage(self):
    pass
  def hasRamMipmapImage(self):
    pass
  def hasSimpleRamImage(self):
    pass
  def has_textures_power_2():
    pass
  def hasUncompressedRamImage(self):
    pass
  def has_all_ram_mipmap_images(self):
    pass
  def has_alpha_filename(self):
    pass
  def has_alpha_fullpath(self):
    pass
  def has_auto_texture_scale(self):
    pass
  def has_compression(self):
    pass
  def has_filename(self):
    pass
  def has_fullpath(self):
    pass
  def has_name(self):
    pass
  def has_ram_image(self):
    pass
  def has_ram_mipmap_image(self):
    pass
  def has_simple_ram_image(self):
    pass
  def has_textures_power_2():
    pass
  def has_uncompressed_ram_image(self):
    pass
  def isCacheable(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def is_mipmap():
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_cacheable(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_mipmap():
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def load(self):
    pass
  def loadRelated(self):
    pass
  def load_related(self):
    pass
  def makeCopy(self):
    pass
  def make_from_txo():
    pass
  def makeRamImage(self):
    pass
  def makeRamMipmapImage(self):
    pass
  def make_copy(self):
    pass
  def make_from_txo():
    pass
  def make_ram_image(self):
    pass
  def make_ram_mipmap_image(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mightHaveRamImage(self):
    pass
  def might_have_ram_image(self):
    pass
  def modifyRamImage(self):
    pass
  def modifyRamMipmapImage(self):
    pass
  def modifySimpleRamImage(self):
    pass
  def modify_ram_image(self):
    pass
  def modify_ram_mipmap_image(self):
    pass
  def modify_simple_ram_image(self):
    pass
  def newSimpleRamImage(self):
    pass
  def new_simple_ram_image(self):
    pass
  def output(self):
    pass
  def peek(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def read(self):
    pass
  def readDds(self):
    pass
  def readTxo(self):
    pass
  def read_dds(self):
    pass
  def read_txo(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def reload(self):
    pass
  def rescaleTexture(self):
    pass
  def rescale_texture(self):
    pass
  def setAlphaFilename(self):
    pass
  def setAlphaFullpath(self):
    pass
  def setAnisotropicDegree(self):
    pass
  def setAutoTextureScale(self):
    pass
  def setAuxData(self):
    pass
  def setBorderColor(self):
    pass
  def setComponentType(self):
    pass
  def setCompression(self):
    pass
  def setFilename(self):
    pass
  def setFormat(self):
    pass
  def setFullpath(self):
    pass
  def setKeepRamImage(self):
    pass
  def setLoadedFromImage(self):
    pass
  def setLoadedFromTxo(self):
    pass
  def setMagfilter(self):
    pass
  def setMatchFramebufferFormat(self):
    pass
  def setMinfilter(self):
    pass
  def setName(self):
    pass
  def setNumViews(self):
    pass
  def setOrigFileSize(self):
    pass
  def setPadSize(self):
    pass
  def setPostLoadStoreCache(self):
    pass
  def setQualityLevel(self):
    pass
  def setRamImage(self):
    pass
  def setRamImageAs(self):
    pass
  def setRamMipmapImage(self):
    pass
  def setRamMipmapPointerFromInt(self):
    pass
  def setRenderToTexture(self):
    pass
  def setSimpleRamImage(self):
    pass
  def setSizePadded(self):
    pass
  def set_textures_power_2():
    pass
  def setWrapU(self):
    pass
  def setWrapV(self):
    pass
  def setWrapW(self):
    pass
  def setXSize(self):
    pass
  def setYSize(self):
    pass
  def setZSize(self):
    pass
  def set_alpha_filename(self):
    pass
  def set_alpha_fullpath(self):
    pass
  def set_anisotropic_degree(self):
    pass
  def set_auto_texture_scale(self):
    pass
  def set_aux_data(self):
    pass
  def set_border_color(self):
    pass
  def set_component_type(self):
    pass
  def set_compression(self):
    pass
  def set_filename(self):
    pass
  def set_format(self):
    pass
  def set_fullpath(self):
    pass
  def set_keep_ram_image(self):
    pass
  def set_loaded_from_image(self):
    pass
  def set_loaded_from_txo(self):
    pass
  def set_magfilter(self):
    pass
  def set_match_framebuffer_format(self):
    pass
  def set_minfilter(self):
    pass
  def set_name(self):
    pass
  def set_num_views(self):
    pass
  def set_orig_file_size(self):
    pass
  def set_pad_size(self):
    pass
  def set_post_load_store_cache(self):
    pass
  def set_quality_level(self):
    pass
  def set_ram_image(self):
    pass
  def set_ram_image_as(self):
    pass
  def set_ram_mipmap_image(self):
    pass
  def set_ram_mipmap_pointer_from_int(self):
    pass
  def set_render_to_texture(self):
    pass
  def set_simple_ram_image(self):
    pass
  def set_size_padded(self):
    pass
  def set_textures_power_2():
    pass
  def set_wrap_u(self):
    pass
  def set_wrap_v(self):
    pass
  def set_wrap_w(self):
    pass
  def set_x_size(self):
    pass
  def set_y_size(self):
    pass
  def set_z_size(self):
    pass
  def setup1dTexture(self):
    pass
  def setup2dTexture(self):
    pass
  def setup2dTextureArray(self):
    pass
  def setup3dTexture(self):
    pass
  def setupCubeMap(self):
    pass
  def setupTexture(self):
    pass
  def setup_1d_texture(self):
    pass
  def setup_2d_texture(self):
    pass
  def setup_2d_texture_array(self):
    pass
  def setup_3d_texture(self):
    pass
  def setup_cube_map(self):
    pass
  def setup_texture(self):
    pass
  def store(self):
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncompressRamImage(self):
    pass
  def uncompress_ram_image(self):
    pass
  def unref(self):
    pass
  def up_to_power_2():
    pass
  def up_to_power_2():
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def usesMipmaps(self):
    pass
  def uses_mipmaps(self):
    pass
  def wasImageModified(self):
    pass
  def was_image_modified(self):
    pass
  def write(self):
    pass
  def writeTxo(self):
    pass
  def write_txo(self):
    pass
class Event:
  def __init__(self):
    pass
  def addParameter(self):
    pass
  def add_parameter(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clearReceiver(self):
    pass
  def clear_name(self):
    pass
  def clear_receiver(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getNumParameters(self):
    pass
  def getParameter(self):
    pass
  def getParameters(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_num_parameters(self):
    pass
  def get_parameter(self):
    pass
  def get_parameters(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def hasReceiver(self):
    pass
  def has_name(self):
    pass
  def has_receiver(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class EventHandler:
  def __init__(self):
    pass
  def dispatchEvent(self):
    pass
  def dispatch_event(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def get_global_event_handler():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_global_event_handler():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def processEvents(self):
    pass
  def process_events(self):
    pass
  def write(self):
    pass
class EventParameter:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getDoubleValue(self):
    pass
  def getIntValue(self):
    pass
  def getPtr(self):
    pass
  def getStringValue(self):
    pass
  def getTypedRefCountValue(self):
    pass
  def getWstringValue(self):
    pass
  def get_double_value(self):
    pass
  def get_int_value(self):
    pass
  def get_ptr(self):
    pass
  def get_string_value(self):
    pass
  def get_typed_ref_count_value(self):
    pass
  def get_wstring_value(self):
    pass
  def isDouble(self):
    pass
  def isEmpty(self):
    pass
  def isInt(self):
    pass
  def isString(self):
    pass
  def isTypedRefCount(self):
    pass
  def isWstring(self):
    pass
  def is_double(self):
    pass
  def is_empty(self):
    pass
  def is_int(self):
    pass
  def is_string(self):
    pass
  def is_typed_ref_count(self):
    pass
  def is_wstring(self):
    pass
  def output(self):
    pass
class EventQueue:
  def __init__(self):
    pass
  def clear(self):
    pass
  def dequeueEvent(self):
    pass
  def dequeue_event(self):
    pass
  def get_global_event_queue():
    pass
  def get_global_event_queue():
    pass
  def isQueueEmpty(self):
    pass
  def isQueueFull(self):
    pass
  def is_queue_empty(self):
    pass
  def is_queue_full(self):
    pass
  def queueEvent(self):
    pass
  def queue_event(self):
    pass
class EventStorePandaNode:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setValue(self):
    pass
  def set_value(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class EventStoreTypedRefCount:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setValue(self):
    pass
  def set_value(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class EventStoreValueBase:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class ExternalThread:
  def __init__(self):
    pass
  def assign(self):
    pass
  def bind_thread():
    pass
  def bind_thread():
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def consider_yield():
    pass
  def consider_yield():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def force_yield():
    pass
  def force_yield():
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def getCurrentTask(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def getName(self):
    pass
  def getPipelineStage(self):
    pass
  def getPstatsIndex(self):
    pass
  def getPythonData(self):
    pass
  def getRefCount(self):
    pass
  def getSyncName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUniqueId(self):
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def get_current_task(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def get_name(self):
    pass
  def get_pipeline_stage(self):
    pass
  def get_pstats_index(self):
    pass
  def get_python_data(self):
    pass
  def get_ref_count(self):
    pass
  def get_sync_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique_id(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isJoinable(self):
    pass
  def isOfType(self):
    pass
  def is_simple_threads():
    pass
  def isStarted(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def is_exact_type(self):
    pass
  def is_joinable(self):
    pass
  def is_of_type(self):
    pass
  def is_simple_threads():
    pass
  def is_started(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def join(self):
    pass
  def output(self):
    pass
  def outputBlocker(self):
    pass
  def output_blocker(self):
    pass
  def preempt(self):
    pass
  def prepare_for_exit():
    pass
  def prepare_for_exit():
    pass
  def ref(self):
    pass
  def setMinPipelineStage(self):
    pass
  def setName(self):
    pass
  def setPipelineStage(self):
    pass
  def setPythonData(self):
    pass
  def set_min_pipeline_stage(self):
    pass
  def set_name(self):
    pass
  def set_pipeline_stage(self):
    pass
  def set_python_data(self):
    pass
  def sleep():
    pass
  def start(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write_status():
    pass
  def write_status():
    pass
class FadeLODNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def addSwitch(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def add_switch(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearForceSwitch(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearSwitches(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_force_switch(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_switches(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceSwitch(self):
    pass
  def force_switch(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCenter(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFadeBinDrawOrder(self):
    pass
  def getFadeBinName(self):
    pass
  def getFadeStateOverride(self):
    pass
  def getFadeTime(self):
    pass
  def getFancyBits(self):
    pass
  def getHighestSwitch(self):
    pass
  def getIn(self):
    pass
  def getIns(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLodScale(self):
    pass
  def getLowestSwitch(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumSwitches(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOut(self):
    pass
  def getOuts(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_center(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fade_bin_draw_order(self):
    pass
  def get_fade_bin_name(self):
    pass
  def get_fade_state_override(self):
    pass
  def get_fade_time(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_highest_switch(self):
    pass
  def get_in(self):
    pass
  def get_ins(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lod_scale(self):
    pass
  def get_lowest_switch(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_switches(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_out(self):
    pass
  def get_outs(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def hideAllSwitches(self):
    pass
  def hideSwitch(self):
    pass
  def hide_all_switches(self):
    pass
  def hide_switch(self):
    pass
  def isAmbientLight(self):
    pass
  def isAnyShown(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_any_shown(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_default_lod():
    pass
  def make_copy(self):
    pass
  def make_default_lod():
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFadeBin(self):
    pass
  def setFadeStateOverride(self):
    pass
  def setFadeTime(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLodScale(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setSwitch(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_fade_bin(self):
    pass
  def set_fade_state_override(self):
    pass
  def set_fade_time(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lod_scale(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_switch(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showAllSwitches(self):
    pass
  def showSwitch(self):
    pass
  def show_all_switches(self):
    pass
  def show_switch(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def verifyChildBounds(self):
    pass
  def verify_child_bounds(self):
    pass
  def write(self):
    pass
class FfmpegAudio:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class FfmpegAudioCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def audioChannels(self):
    pass
  def audioRate(self):
    pass
  def audio_channels(self):
    pass
  def audio_rate(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def readSamples(self):
    pass
  def read_samples(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def seek(self):
    pass
  def skipSamples(self):
    pass
  def skip_samples(self):
    pass
  def tell(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class FfmpegVideo:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSubfileInfo(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_subfile_info(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class FfmpegVideoCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def applyToTexture(self):
    pass
  def applyToTextureAlpha(self):
    pass
  def applyToTextureRgb(self):
    pass
  def apply_to_texture(self):
    pass
  def apply_to_texture_alpha(self):
    pass
  def apply_to_texture_rgb(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def fetchBuffer(self):
    pass
  def fetch_buffer(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getMaxReadaheadFrames(self):
    pass
  def getNumComponents(self):
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getThreadPriority(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_max_readahead_frames(self):
    pass
  def get_num_components(self):
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_thread_priority(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isThreadStarted(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_thread_started(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def setMaxReadaheadFrames(self):
    pass
  def setThreadPriority(self):
    pass
  def setTime(self):
    pass
  def set_max_readahead_frames(self):
    pass
  def set_thread_priority(self):
    pass
  def set_time(self):
    pass
  def setupTexture(self):
    pass
  def setup_texture(self):
    pass
  def sizeX(self):
    pass
  def sizeY(self):
    pass
  def size_x(self):
    pass
  def size_y(self):
    pass
  def startThread(self):
    pass
  def start_thread(self):
    pass
  def stopThread(self):
    pass
  def stop_thread(self):
    pass
  def streaming(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class FilterProperties:
  def __init__(self):
    pass
  def addChorus(self):
    pass
  def addCompress(self):
    pass
  def addDistort(self):
    pass
  def addEcho(self):
    pass
  def addFlange(self):
    pass
  def addHighpass(self):
    pass
  def addLowpass(self):
    pass
  def addNormalize(self):
    pass
  def addParameq(self):
    pass
  def addPitchshift(self):
    pass
  def addReverb(self):
    pass
  def add_chorus(self):
    pass
  def add_compress(self):
    pass
  def add_distort(self):
    pass
  def add_echo(self):
    pass
  def add_flange(self):
    pass
  def add_highpass(self):
    pass
  def add_lowpass(self):
    pass
  def add_normalize(self):
    pass
  def add_parameq(self):
    pass
  def add_pitchshift(self):
    pass
  def add_reverb(self):
    pass
  def clear(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class FiniteBoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getMax(self):
    pass
  def getMin(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getVolume(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_max(self):
    pass
  def get_min(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_volume(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class FisheyeMaker:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def generate(self):
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def reset(self):
    pass
  def setFov(self):
    pass
  def setName(self):
    pass
  def setNumVertices(self):
    pass
  def setReflection(self):
    pass
  def setSquareInscribed(self):
    pass
  def set_fov(self):
    pass
  def set_name(self):
    pass
  def set_num_vertices(self):
    pass
  def set_reflection(self):
    pass
  def set_square_inscribed(self):
    pass
class Fog:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  MExponential = int

  MExponentialSquared = int

  MLinear = int

  M_exponential = int

  M_exponential_squared = int

  M_linear = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getExpDensity(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLinearOnsetPoint(self):
    pass
  def getLinearOpaquePoint(self):
    pass
  def getMode(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_exp_density(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_linear_onset_point(self):
    pass
  def get_linear_opaque_point(self):
    pass
  def get_mode(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setColor(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setExpDensity(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLinearFallback(self):
    pass
  def setLinearOnsetPoint(self):
    pass
  def setLinearOpaquePoint(self):
    pass
  def setLinearRange(self):
    pass
  def setMode(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_color(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_exp_density(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_linear_fallback(self):
    pass
  def set_linear_onset_point(self):
    pass
  def set_linear_opaque_point(self):
    pass
  def set_linear_range(self):
    pass
  def set_mode(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class FogAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getFog(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_fog(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class FontPool:
  def __init__(self):
    pass
  def add_font():
    pass
  def add_font():
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def has_font():
    pass
  def has_font():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def load_font():
    pass
  def load_font():
    pass
  def release_all_fonts():
    pass
  def release_font():
    pass
  def release_all_fonts():
    pass
  def release_font():
    pass
  def verify_font():
    pass
  def verify_font():
    pass
  def write():
    pass
class FrameBufferProperties:
  def __init__(self):
    pass
  def addProperties(self):
    pass
  def add_properties(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def eq(self):
    pass
  def getAccumBits(self):
    pass
  def getAlphaBits(self):
    pass
  def getAuxFloat(self):
    pass
  def getAuxHrgba(self):
    pass
  def getAuxMask(self):
    pass
  def getAuxRgba(self):
    pass
  def getBackBuffers(self):
    pass
  def getBufferMask(self):
    pass
  def getColorBits(self):
    pass
  def getCoverageSamples(self):
    pass
  def get_default():
    pass
  def getDepthBits(self):
    pass
  def getForceHardware(self):
    pass
  def getForceSoftware(self):
    pass
  def getIndexedColor(self):
    pass
  def getMultisamples(self):
    pass
  def getQuality(self):
    pass
  def getRgbColor(self):
    pass
  def getStencilBits(self):
    pass
  def getStereo(self):
    pass
  def get_accum_bits(self):
    pass
  def get_alpha_bits(self):
    pass
  def get_aux_float(self):
    pass
  def get_aux_hrgba(self):
    pass
  def get_aux_mask(self):
    pass
  def get_aux_rgba(self):
    pass
  def get_back_buffers(self):
    pass
  def get_buffer_mask(self):
    pass
  def get_color_bits(self):
    pass
  def get_coverage_samples(self):
    pass
  def get_default():
    pass
  def get_depth_bits(self):
    pass
  def get_force_hardware(self):
    pass
  def get_force_software(self):
    pass
  def get_indexed_color(self):
    pass
  def get_multisamples(self):
    pass
  def get_quality(self):
    pass
  def get_rgb_color(self):
    pass
  def get_stencil_bits(self):
    pass
  def get_stereo(self):
    pass
  def isAnySpecified(self):
    pass
  def isBasic(self):
    pass
  def isSingleBuffered(self):
    pass
  def isStereo(self):
    pass
  def is_any_specified(self):
    pass
  def is_basic(self):
    pass
  def is_single_buffered(self):
    pass
  def is_stereo(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def setAccumBits(self):
    pass
  def setAllSpecified(self):
    pass
  def setAlphaBits(self):
    pass
  def setAuxFloat(self):
    pass
  def setAuxHrgba(self):
    pass
  def setAuxRgba(self):
    pass
  def setBackBuffers(self):
    pass
  def setColorBits(self):
    pass
  def setCoverageSamples(self):
    pass
  def setDepthBits(self):
    pass
  def setForceHardware(self):
    pass
  def setForceSoftware(self):
    pass
  def setIndexedColor(self):
    pass
  def setMultisamples(self):
    pass
  def setOneBitPerChannel(self):
    pass
  def setRgbColor(self):
    pass
  def setStencilBits(self):
    pass
  def setStereo(self):
    pass
  def set_accum_bits(self):
    pass
  def set_all_specified(self):
    pass
  def set_alpha_bits(self):
    pass
  def set_aux_float(self):
    pass
  def set_aux_hrgba(self):
    pass
  def set_aux_rgba(self):
    pass
  def set_back_buffers(self):
    pass
  def set_color_bits(self):
    pass
  def set_coverage_samples(self):
    pass
  def set_depth_bits(self):
    pass
  def set_force_hardware(self):
    pass
  def set_force_software(self):
    pass
  def set_indexed_color(self):
    pass
  def set_multisamples(self):
    pass
  def set_one_bit_per_channel(self):
    pass
  def set_rgb_color(self):
    pass
  def set_stencil_bits(self):
    pass
  def set_stereo(self):
    pass
  def subsumes(self):
    pass
  def verifyHardwareSoftware(self):
    pass
  def verify_hardware_software(self):
    pass
class FrameRateMeter:
  def __init__(self):
    pass
  ABoxedCenter = int

  ABoxedLeft = int

  ABoxedRight = int

  ACenter = int

  ALeft = int

  ARight = int

  A_boxed_center = int

  A_boxed_left = int

  A_boxed_right = int

  A_center = int

  A_left = int

  A_right = int

  EIso8859 = int

  EUnicode = int

  EUtf8 = int

  E_iso8859 = int

  E_unicode = int

  E_utf8 = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  FFDynamicMerge = int

  FFLight = int

  FFMedium = int

  FFNone = int

  FFStrong = int

  FF_dynamic_merge = int

  FF_light = int

  FF_medium = int

  FF_none = int

  FF_strong = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addProperties(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_properties(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def appendText(self):
    pass
  def appendUnicodeChar(self):
    pass
  def appendWtext(self):
    pass
  def append_text(self):
    pass
  def append_unicode_char(self):
    pass
  def append_wtext(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcWidth(self):
    pass
  def calc_width(self):
    pass
  def clear(self):
    pass
  def clearAlign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBin(self):
    pass
  def clearBounds(self):
    pass
  def clearCard(self):
    pass
  def clearCardBorder(self):
    pass
  def clearCardTexture(self):
    pass
  def clearDrawOrder(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFont(self):
    pass
  def clearFrame(self):
    pass
  def clearGlyphScale(self):
    pass
  def clearGlyphShift(self):
    pass
  def clearIndent(self):
    pass
  def clearMaxRows(self):
    pass
  def clearName(self):
    pass
  def clearPreserveTrailingWhitespace(self):
    pass
  def clearPythonTag(self):
    pass
  def clearShadow(self):
    pass
  def clearShadowColor(self):
    pass
  def clearSlant(self):
    pass
  def clearSmallCaps(self):
    pass
  def clearSmallCapsScale(self):
    pass
  def clearState(self):
    pass
  def clearTabWidth(self):
    pass
  def clearTag(self):
    pass
  def clearText(self):
    pass
  def clearTextColor(self):
    pass
  def clearTextScale(self):
    pass
  def clearTransform(self):
    pass
  def clearUnderscore(self):
    pass
  def clearUnderscoreHeight(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clearWindow(self):
    pass
  def clearWordwrap(self):
    pass
  def clear_align(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bin(self):
    pass
  def clear_bounds(self):
    pass
  def clear_card(self):
    pass
  def clear_card_border(self):
    pass
  def clear_card_texture(self):
    pass
  def clear_draw_order(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_font(self):
    pass
  def clear_frame(self):
    pass
  def clear_glyph_scale(self):
    pass
  def clear_glyph_shift(self):
    pass
  def clear_indent(self):
    pass
  def clear_max_rows(self):
    pass
  def clear_name(self):
    pass
  def clear_preserve_trailing_whitespace(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_shadow(self):
    pass
  def clear_shadow_color(self):
    pass
  def clear_slant(self):
    pass
  def clear_small_caps(self):
    pass
  def clear_small_caps_scale(self):
    pass
  def clear_state(self):
    pass
  def clear_tab_width(self):
    pass
  def clear_tag(self):
    pass
  def clear_text(self):
    pass
  def clear_text_color(self):
    pass
  def clear_text_scale(self):
    pass
  def clear_transform(self):
    pass
  def clear_underscore(self):
    pass
  def clear_underscore_height(self):
    pass
  def clear_unexpected_change(self):
    pass
  def clear_window(self):
    pass
  def clear_wordwrap(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decodeText(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_text(self):
    pass
  def downcastToTextNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TextNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_wchar():
    pass
  def encodeWtext(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def encode_wchar():
    pass
  def encode_wtext(self):
    pass
  def eq(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def generate(self):
    pass
  def getAlign(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBin(self):
    pass
  def getBottom(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCardActual(self):
    pass
  def getCardAsSet(self):
    pass
  def getCardBorderSize(self):
    pass
  def getCardBorderUvPortion(self):
    pass
  def getCardColor(self):
    pass
  def getCardDecal(self):
    pass
  def getCardTexture(self):
    pass
  def getCardTransformed(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClockObject(self):
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def getDisplayRegion(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawOrder(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEncodedChar(self):
    pass
  def getEncoding(self):
    pass
  def getFancyBits(self):
    pass
  def getFlattenFlags(self):
    pass
  def getFont(self):
    pass
  def getFrameActual(self):
    pass
  def getFrameAsSet(self):
    pass
  def getFrameColor(self):
    pass
  def getFrameCorners(self):
    pass
  def getFrameLineWidth(self):
    pass
  def getGlyphScale(self):
    pass
  def getGlyphShift(self):
    pass
  def getHeight(self):
    pass
  def getIndent(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalGeom(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLeft(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLineHeight(self):
    pass
  def getLowerRight3d(self):
    pass
  def getMaxRows(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChars(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumRows(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserveTrailingWhitespace(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRight(self):
    pass
  def getShadow(self):
    pass
  def getShadowColor(self):
    pass
  def getSlant(self):
    pass
  def getSmallCaps(self):
    pass
  def getSmallCapsScale(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTabWidth(self):
    pass
  def getTag(self):
    pass
  def getText(self):
    pass
  def getTextAsAscii(self):
    pass
  def getTextColor(self):
    pass
  def getTextPattern(self):
    pass
  def getTextScale(self):
    pass
  def getTop(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnderscore(self):
    pass
  def getUnderscoreHeight(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getUnicodeChar(self):
    pass
  def getUpdateInterval(self):
    pass
  def getUpperLeft3d(self):
    pass
  def getUsageHint(self):
    pass
  def getWidth(self):
    pass
  def getWindow(self):
    pass
  def getWordwrap(self):
    pass
  def getWordwrappedText(self):
    pass
  def getWordwrappedWtext(self):
    pass
  def getWtext(self):
    pass
  def getWtextAsAscii(self):
    pass
  def get_align(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bin(self):
    pass
  def get_bottom(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_card_actual(self):
    pass
  def get_card_as_set(self):
    pass
  def get_card_border_size(self):
    pass
  def get_card_border_uv_portion(self):
    pass
  def get_card_color(self):
    pass
  def get_card_decal(self):
    pass
  def get_card_texture(self):
    pass
  def get_card_transformed(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clock_object(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def get_display_region(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_order(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_encoded_char(self):
    pass
  def get_encoding(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_flatten_flags(self):
    pass
  def get_font(self):
    pass
  def get_frame_actual(self):
    pass
  def get_frame_as_set(self):
    pass
  def get_frame_color(self):
    pass
  def get_frame_corners(self):
    pass
  def get_frame_line_width(self):
    pass
  def get_glyph_scale(self):
    pass
  def get_glyph_shift(self):
    pass
  def get_height(self):
    pass
  def get_indent(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_geom(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_left(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_line_height(self):
    pass
  def get_lower_right_3d(self):
    pass
  def get_max_rows(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_chars(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_rows(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserve_trailing_whitespace(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_right(self):
    pass
  def get_shadow(self):
    pass
  def get_shadow_color(self):
    pass
  def get_slant(self):
    pass
  def get_small_caps(self):
    pass
  def get_small_caps_scale(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tab_width(self):
    pass
  def get_tag(self):
    pass
  def get_text(self):
    pass
  def get_text_as_ascii(self):
    pass
  def get_text_color(self):
    pass
  def get_text_pattern(self):
    pass
  def get_text_scale(self):
    pass
  def get_top(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_underscore(self):
    pass
  def get_underscore_height(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_unicode_char(self):
    pass
  def get_update_interval(self):
    pass
  def get_upper_left_3d(self):
    pass
  def get_usage_hint(self):
    pass
  def get_width(self):
    pass
  def get_window(self):
    pass
  def get_wordwrap(self):
    pass
  def get_wordwrapped_text(self):
    pass
  def get_wordwrapped_wtext(self):
    pass
  def get_wtext(self):
    pass
  def get_wtext_as_ascii(self):
    pass
  def hasAlign(self):
    pass
  def hasAttrib(self):
    pass
  def hasBin(self):
    pass
  def hasCard(self):
    pass
  def hasCardBorder(self):
    pass
  def hasCardTexture(self):
    pass
  def hasCharacter(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasDrawOrder(self):
    pass
  def hasEffect(self):
    pass
  def hasExactCharacter(self):
    pass
  def hasFont(self):
    pass
  def hasFrame(self):
    pass
  def hasGlyphScale(self):
    pass
  def hasGlyphShift(self):
    pass
  def hasIndent(self):
    pass
  def hasMaxRows(self):
    pass
  def hasName(self):
    pass
  def hasOverflow(self):
    pass
  def hasPreserveTrailingWhitespace(self):
    pass
  def hasPythonTag(self):
    pass
  def hasShadow(self):
    pass
  def hasShadowColor(self):
    pass
  def hasSlant(self):
    pass
  def hasSmallCaps(self):
    pass
  def hasSmallCapsScale(self):
    pass
  def hasTabWidth(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasText(self):
    pass
  def hasTextColor(self):
    pass
  def hasTextScale(self):
    pass
  def hasUnderscore(self):
    pass
  def hasUnderscoreHeight(self):
    pass
  def hasWordwrap(self):
    pass
  def has_align(self):
    pass
  def has_attrib(self):
    pass
  def has_bin(self):
    pass
  def has_card(self):
    pass
  def has_card_border(self):
    pass
  def has_card_texture(self):
    pass
  def has_character(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_draw_order(self):
    pass
  def has_effect(self):
    pass
  def has_exact_character(self):
    pass
  def has_font(self):
    pass
  def has_frame(self):
    pass
  def has_glyph_scale(self):
    pass
  def has_glyph_shift(self):
    pass
  def has_indent(self):
    pass
  def has_max_rows(self):
    pass
  def has_name(self):
    pass
  def has_overflow(self):
    pass
  def has_preserve_trailing_whitespace(self):
    pass
  def has_python_tag(self):
    pass
  def has_shadow(self):
    pass
  def has_shadow_color(self):
    pass
  def has_slant(self):
    pass
  def has_small_caps(self):
    pass
  def has_small_caps_scale(self):
    pass
  def has_tab_width(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_text(self):
    pass
  def has_text_color(self):
    pass
  def has_text_scale(self):
    pass
  def has_underscore(self):
    pass
  def has_underscore_height(self):
    pass
  def has_wordwrap(self):
    pass
  def isAmbientLight(self):
    pass
  def isAnySpecified(self):
    pass
  def isBoundsStale(self):
    pass
  def isCardAsMargin(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isFrameAsMargin(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isWhitespace(self):
    pass
  def isWtext(self):
    pass
  def is_ambient_light(self):
    pass
  def is_any_specified(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_card_as_margin(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_frame_as_margin(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_whitespace(self):
    pass
  def is_wtext(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def lower():
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def makeLower(self):
    pass
  def makeUpper(self):
    pass
  def make_copy(self):
    pass
  def make_lower(self):
    pass
  def make_upper(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def reencode_text():
    pass
  def reencode_text():
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAlign(self):
    pass
  def setAttrib(self):
    pass
  def setBin(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCardActual(self):
    pass
  def setCardAsMargin(self):
    pass
  def setCardBorder(self):
    pass
  def setCardColor(self):
    pass
  def setCardDecal(self):
    pass
  def setCardTexture(self):
    pass
  def setClockObject(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def setDrawOrder(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setEncoding(self):
    pass
  def setFinal(self):
    pass
  def setFlattenFlags(self):
    pass
  def setFont(self):
    pass
  def setFrameActual(self):
    pass
  def setFrameAsMargin(self):
    pass
  def setFrameColor(self):
    pass
  def setFrameCorners(self):
    pass
  def setFrameLineWidth(self):
    pass
  def setGlyphScale(self):
    pass
  def setGlyphShift(self):
    pass
  def setIndent(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMaxRows(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserveTrailingWhitespace(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setShadow(self):
    pass
  def setShadowColor(self):
    pass
  def setSlant(self):
    pass
  def setSmallCaps(self):
    pass
  def setSmallCapsScale(self):
    pass
  def setState(self):
    pass
  def setTabWidth(self):
    pass
  def setTag(self):
    pass
  def setText(self):
    pass
  def setTextColor(self):
    pass
  def setTextPattern(self):
    pass
  def setTextScale(self):
    pass
  def setTransform(self):
    pass
  def setUnderscore(self):
    pass
  def setUnderscoreHeight(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setUnicodeChar(self):
    pass
  def setUpdateInterval(self):
    pass
  def setUsageHint(self):
    pass
  def setWordwrap(self):
    pass
  def setWtext(self):
    pass
  def set_align(self):
    pass
  def set_attrib(self):
    pass
  def set_bin(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_card_actual(self):
    pass
  def set_card_as_margin(self):
    pass
  def set_card_border(self):
    pass
  def set_card_color(self):
    pass
  def set_card_decal(self):
    pass
  def set_card_texture(self):
    pass
  def set_clock_object(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def set_draw_order(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_encoding(self):
    pass
  def set_final(self):
    pass
  def set_flatten_flags(self):
    pass
  def set_font(self):
    pass
  def set_frame_actual(self):
    pass
  def set_frame_as_margin(self):
    pass
  def set_frame_color(self):
    pass
  def set_frame_corners(self):
    pass
  def set_frame_line_width(self):
    pass
  def set_glyph_scale(self):
    pass
  def set_glyph_shift(self):
    pass
  def set_indent(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_max_rows(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserve_trailing_whitespace(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_shadow(self):
    pass
  def set_shadow_color(self):
    pass
  def set_slant(self):
    pass
  def set_small_caps(self):
    pass
  def set_small_caps_scale(self):
    pass
  def set_state(self):
    pass
  def set_tab_width(self):
    pass
  def set_tag(self):
    pass
  def set_text(self):
    pass
  def set_text_color(self):
    pass
  def set_text_pattern(self):
    pass
  def set_text_scale(self):
    pass
  def set_transform(self):
    pass
  def set_underscore(self):
    pass
  def set_underscore_height(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_unicode_char(self):
    pass
  def set_update_interval(self):
    pass
  def set_usage_hint(self):
    pass
  def set_wordwrap(self):
    pass
  def set_wtext(self):
    pass
  def setupWindow(self):
    pass
  def setup_window(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTextEncoder(self):
    pass
  def upcastToTextProperties(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TextEncoder(self):
    pass
  def upcast_to_TextProperties(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def update(self):
    pass
  def upper():
    pass
  def write(self):
    pass
class FreetypeFont:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def get_class_type():
    pass
  def getFontPixelSize(self):
    pass
  def getLineHeight(self):
    pass
  def getName(self):
    pass
  def getNativeAntialias(self):
    pass
  def getPixelSize(self):
    pass
  def getPixelsPerUnit(self):
    pass
  def getPointSize(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def getScaleFactor(self):
    pass
  def getSpaceAdvance(self):
    pass
  def get_class_type():
    pass
  def get_font_pixel_size(self):
    pass
  def get_line_height(self):
    pass
  def get_name(self):
    pass
  def get_native_antialias(self):
    pass
  def get_pixel_size(self):
    pass
  def get_pixels_per_unit(self):
    pass
  def get_point_size(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def get_scale_factor(self):
    pass
  def get_space_advance(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def setName(self):
    pass
  def setNativeAntialias(self):
    pass
  def setPixelSize(self):
    pass
  def setPixelsPerUnit(self):
    pass
  def setPointSize(self):
    pass
  def setScaleFactor(self):
    pass
  def set_name(self):
    pass
  def set_native_antialias(self):
    pass
  def set_pixel_size(self):
    pass
  def set_pixels_per_unit(self):
    pass
  def set_point_size(self):
    pass
  def set_scale_factor(self):
    pass
class LFrustumf:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class LFrustumd:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class LFrustumf:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class GeoMipTerrain:
  def __init__(self):
    pass
  AFMLight = int

  AFMMedium = int

  AFMOff = int

  AFMStrong = int

  AFM_light = int

  AFM_medium = int

  AFM_off = int

  AFM_strong = int

  def calcAmbientOcclusion(self):
    pass
  def calc_ambient_occlusion(self):
    pass
  def clearColorMap(self):
    pass
  def clear_color_map(self):
    pass
  def colorMap(self):
    pass
  def color_map(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def generate(self):
    pass
  def getBlockFromPos(self):
    pass
  def getBlockNodePath(self):
    pass
  def getBlockSize(self):
    pass
  def getBorderStitching(self):
    pass
  def getBruteforce(self):
    pass
  def get_class_type():
    pass
  def getElevation(self):
    pass
  def getFar(self):
    pass
  def getFlattenMode(self):
    pass
  def getFocalPoint(self):
    pass
  def getMaxLevel(self):
    pass
  def getMinLevel(self):
    pass
  def getNear(self):
    pass
  def getNormal(self):
    pass
  def getRoot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_block_from_pos(self):
    pass
  def get_block_node_path(self):
    pass
  def get_block_size(self):
    pass
  def get_border_stitching(self):
    pass
  def get_bruteforce(self):
    pass
  def get_class_type():
    pass
  def get_elevation(self):
    pass
  def get_far(self):
    pass
  def get_flatten_mode(self):
    pass
  def get_focal_point(self):
    pass
  def get_max_level(self):
    pass
  def get_min_level(self):
    pass
  def get_near(self):
    pass
  def get_normal(self):
    pass
  def get_root(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasColorMap(self):
    pass
  def has_color_map(self):
    pass
  def heightfield(self):
    pass
  def isDirty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_dirty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeSlopeImage(self):
    pass
  def make_slope_image(self):
    pass
  def setAutoFlatten(self):
    pass
  def setBlockSize(self):
    pass
  def setBorderStitching(self):
    pass
  def setBruteforce(self):
    pass
  def setColorMap(self):
    pass
  def setFactor(self):
    pass
  def setFar(self):
    pass
  def setFocalPoint(self):
    pass
  def setHeightfield(self):
    pass
  def setMinLevel(self):
    pass
  def setNear(self):
    pass
  def setNearFar(self):
    pass
  def set_auto_flatten(self):
    pass
  def set_block_size(self):
    pass
  def set_border_stitching(self):
    pass
  def set_bruteforce(self):
    pass
  def set_color_map(self):
    pass
  def set_factor(self):
    pass
  def set_far(self):
    pass
  def set_focal_point(self):
    pass
  def set_heightfield(self):
    pass
  def set_min_level(self):
    pass
  def set_near(self):
    pass
  def set_near_far(self):
    pass
  def update(self):
    pass
class Geom:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addPrimitive(self):
    pass
  def add_primitive(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearBounds(self):
    pass
  def clearCache(self):
    pass
  def clearCacheStage(self):
    pass
  def clearPrimitives(self):
    pass
  def clear_bounds(self):
    pass
  def clear_cache(self):
    pass
  def clear_cache_stage(self):
    pass
  def clear_primitives(self):
    pass
  def copyPrimitivesFrom(self):
    pass
  def copy_primitives_from(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def decomposeInPlace(self):
    pass
  def decompose_in_place(self):
    pass
  def doubleside(self):
    pass
  def doublesideInPlace(self):
    pass
  def doubleside_in_place(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getGeomRendering(self):
    pass
  def getModified(self):
    pass
  def getNestedVertices(self):
    pass
  def getNumBytes(self):
    pass
  def getNumPrimitives(self):
    pass
  def getPrimitive(self):
    pass
  def getPrimitiveType(self):
    pass
  def getPrimitives(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertexData(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_geom_rendering(self):
    pass
  def get_modified(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_primitives(self):
    pass
  def get_primitive(self):
    pass
  def get_primitive_type(self):
    pass
  def get_primitives(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex_data(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def makeCopy(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def makePointsInPlace(self):
    pass
  def make_copy(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def make_points_in_place(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def modifyPrimitive(self):
    pass
  def modifyVertexData(self):
    pass
  def modify_primitive(self):
    pass
  def modify_vertex_data(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def removePrimitive(self):
    pass
  def remove_primitive(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reverse(self):
    pass
  def reverseInPlace(self):
    pass
  def reverse_in_place(self):
    pass
  def rotate(self):
    pass
  def rotateInPlace(self):
    pass
  def rotate_in_place(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setPrimitive(self):
    pass
  def setUsageHint(self):
    pass
  def setVertexData(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_primitive(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertex_data(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def transformVertices(self):
    pass
  def transform_vertices(self):
    pass
  def unify(self):
    pass
  def unifyInPlace(self):
    pass
  def unify_in_place(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomCacheManager:
  def __init__(self):
    pass
  def flush(self):
    pass
  def get_global_ptr():
    pass
  def getMaxSize(self):
    pass
  def getTotalSize(self):
    pass
  def get_global_ptr():
    pass
  def get_max_size(self):
    pass
  def get_total_size(self):
    pass
  def setMaxSize(self):
    pass
  def set_max_size(self):
    pass
class GeomContext:
  def __init__(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getGeom(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_geom(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class GeomDrawCallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getForce(self):
    pass
  def getGsg(self):
    pass
  def getLostState(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_force(self):
    pass
  def get_gsg(self):
    pass
  def get_lost_state(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def setLostState(self):
    pass
  def set_lost_state(self):
    pass
  def upcall(self):
    pass
class GeomEnums:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
class GeomLines:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomLinestrips:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addGeom(self):
    pass
  def addGeomsFrom(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_geom(self):
    pass
  def add_geoms_from(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def get_default_collide_mask():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getGeom(self):
    pass
  def getGeomState(self):
    pass
  def getGeomStates(self):
    pass
  def getGeoms(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumGeoms(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserved(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_default_collide_mask():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_geom(self):
    pass
  def get_geom_state(self):
    pass
  def get_geom_states(self):
    pass
  def get_geoms(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_geoms(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserved(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def modifyGeom(self):
    pass
  def modify_geom(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeAllGeoms(self):
    pass
  def removeChild(self):
    pass
  def removeGeom(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_all_geoms(self):
    pass
  def remove_child(self):
    pass
  def remove_geom(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setGeom(self):
    pass
  def setGeomState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserved(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_geom(self):
    pass
  def set_geom_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserved(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unify(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeGeoms(self):
    pass
  def writeVerbose(self):
    pass
  def write_geoms(self):
    pass
  def write_verbose(self):
    pass
class GeomPoints:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomPrimitive:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomTextGlyph:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addPrimitive(self):
    pass
  def add_primitive(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearBounds(self):
    pass
  def clearCache(self):
    pass
  def clearCacheStage(self):
    pass
  def clearPrimitives(self):
    pass
  def clear_bounds(self):
    pass
  def clear_cache(self):
    pass
  def clear_cache_stage(self):
    pass
  def clear_primitives(self):
    pass
  def copyPrimitivesFrom(self):
    pass
  def copy_primitives_from(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def decomposeInPlace(self):
    pass
  def decompose_in_place(self):
    pass
  def doubleside(self):
    pass
  def doublesideInPlace(self):
    pass
  def doubleside_in_place(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getGeomRendering(self):
    pass
  def getModified(self):
    pass
  def getNestedVertices(self):
    pass
  def getNumBytes(self):
    pass
  def getNumPrimitives(self):
    pass
  def getPrimitive(self):
    pass
  def getPrimitiveType(self):
    pass
  def getPrimitives(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertexData(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_geom_rendering(self):
    pass
  def get_modified(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_primitives(self):
    pass
  def get_primitive(self):
    pass
  def get_primitive_type(self):
    pass
  def get_primitives(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex_data(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def makeCopy(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def makePointsInPlace(self):
    pass
  def make_copy(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def make_points_in_place(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def modifyPrimitive(self):
    pass
  def modifyVertexData(self):
    pass
  def modify_primitive(self):
    pass
  def modify_vertex_data(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def removePrimitive(self):
    pass
  def remove_primitive(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reverse(self):
    pass
  def reverseInPlace(self):
    pass
  def reverse_in_place(self):
    pass
  def rotate(self):
    pass
  def rotateInPlace(self):
    pass
  def rotate_in_place(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setPrimitive(self):
    pass
  def setUsageHint(self):
    pass
  def setVertexData(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_primitive(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertex_data(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def transformVertices(self):
    pass
  def transform_vertices(self):
    pass
  def unify(self):
    pass
  def unifyInPlace(self):
    pass
  def unify_in_place(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomTriangles:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomTrifans:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomTristrips:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addConsecutiveVertices(self):
    pass
  def addNextVertices(self):
    pass
  def addVertex(self):
    pass
  def addVertices(self):
    pass
  def add_consecutive_vertices(self):
    pass
  def add_next_vertices(self):
    pass
  def add_vertex(self):
    pass
  def add_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def checkValid(self):
    pass
  def check_valid(self):
    pass
  def clearMinmax(self):
    pass
  def clearVertices(self):
    pass
  def clear_minmax(self):
    pass
  def clear_vertices(self):
    pass
  def closePrimitive(self):
    pass
  def close_primitive(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def decompose(self):
    pass
  def doubleside(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getEnds(self):
    pass
  def getFirstVertex(self):
    pass
  def getGeomRendering(self):
    pass
  def getIndexStride(self):
    pass
  def getIndexType(self):
    pass
  def getMaxVertex(self):
    pass
  def getMaxs(self):
    pass
  def getMinNumVerticesPerPrimitive(self):
    pass
  def getMinVertex(self):
    pass
  def getMins(self):
    pass
  def getModified(self):
    pass
  def getNumBytes(self):
    pass
  def getNumFaces(self):
    pass
  def getNumPrimitives(self):
    pass
  def getNumUnusedVerticesPerPrimitive(self):
    pass
  def getNumVertices(self):
    pass
  def getNumVerticesPerPrimitive(self):
    pass
  def getPrimitiveEnd(self):
    pass
  def getPrimitiveMaxVertex(self):
    pass
  def getPrimitiveMinVertex(self):
    pass
  def getPrimitiveNumFaces(self):
    pass
  def getPrimitiveNumVertices(self):
    pass
  def getPrimitiveStart(self):
    pass
  def getPrimitiveType(self):
    pass
  def getRefCount(self):
    pass
  def getShadeModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_ends(self):
    pass
  def get_first_vertex(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_index_stride(self):
    pass
  def get_index_type(self):
    pass
  def get_max_vertex(self):
    pass
  def get_maxs(self):
    pass
  def get_min_num_vertices_per_primitive(self):
    pass
  def get_min_vertex(self):
    pass
  def get_mins(self):
    pass
  def get_modified(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_faces(self):
    pass
  def get_num_primitives(self):
    pass
  def get_num_unused_vertices_per_primitive(self):
    pass
  def get_num_vertices(self):
    pass
  def get_num_vertices_per_primitive(self):
    pass
  def get_primitive_end(self):
    pass
  def get_primitive_max_vertex(self):
    pass
  def get_primitive_min_vertex(self):
    pass
  def get_primitive_num_faces(self):
    pass
  def get_primitive_num_vertices(self):
    pass
  def get_primitive_start(self):
    pass
  def get_primitive_type(self):
    pass
  def get_ref_count(self):
    pass
  def get_shade_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isComposite(self):
    pass
  def isExactType(self):
    pass
  def isIndexed(self):
    pass
  def isOfType(self):
    pass
  def is_composite(self):
    pass
  def is_exact_type(self):
    pass
  def is_indexed(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def makeIndexed(self):
    pass
  def makeNonindexed(self):
    pass
  def makePoints(self):
    pass
  def make_copy(self):
    pass
  def make_indexed(self):
    pass
  def make_nonindexed(self):
    pass
  def make_points(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchShadeModel(self):
    pass
  def match_shade_model(self):
    pass
  def modifyEnds(self):
    pass
  def modifyVertices(self):
    pass
  def modify_ends(self):
    pass
  def modify_vertices(self):
    pass
  def offsetVertices(self):
    pass
  def offset_vertices(self):
    pass
  def output(self):
    pass
  def packVertices(self):
    pass
  def pack_vertices(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumVertices(self):
    pass
  def reserve_num_vertices(self):
    pass
  def reverse(self):
    pass
  def rotate(self):
    pass
  def setEnds(self):
    pass
  def setIndexType(self):
    pass
  def setMinmax(self):
    pass
  def setNonindexedVertices(self):
    pass
  def setShadeModel(self):
    pass
  def setUsageHint(self):
    pass
  def setVertices(self):
    pass
  def set_ends(self):
    pass
  def set_index_type(self):
    pass
  def set_minmax(self):
    pass
  def set_nonindexed_vertices(self):
    pass
  def set_shade_model(self):
    pass
  def set_usage_hint(self):
    pass
  def set_vertices(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomVertexAnimationSpec:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def assign(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def getAnimationType(self):
    pass
  def getIndexedTransforms(self):
    pass
  def getNumTransforms(self):
    pass
  def get_animation_type(self):
    pass
  def get_indexed_transforms(self):
    pass
  def get_num_transforms(self):
    pass
  def output(self):
    pass
  def setHardware(self):
    pass
  def setNone(self):
    pass
  def setPanda(self):
    pass
  def set_hardware(self):
    pass
  def set_none(self):
    pass
  def set_panda(self):
    pass
class GeomVertexArrayData:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearRows(self):
    pass
  def clear_rows(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcastToVertexDataPage(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def downcast_to_VertexDataPage(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getArrayFormat(self):
    pass
  def getBamModified(self):
    pass
  def get_book():
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getHandle(self):
    pass
  def get_independent_lru():
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getModified(self):
    pass
  def getNumRows(self):
    pass
  def getRefCount(self):
    pass
  def get_small_lru():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def get_array_format(self):
    pass
  def get_bam_modified(self):
    pass
  def get_book():
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_handle(self):
    pass
  def get_independent_lru():
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_modified(self):
    pass
  def get_num_rows(self):
    pass
  def get_ref_count(self):
    pass
  def get_small_lru():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def lru_epoch():
    pass
  def lru_epoch():
    pass
  def markBamModified(self):
    pass
  def markUsedLru(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_used_lru(self):
    pass
  def modifyHandle(self):
    pass
  def modify_handle(self):
    pass
  def output(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumRows(self):
    pass
  def reserve_num_rows(self):
    pass
  def setLruSize(self):
    pass
  def setNumRows(self):
    pass
  def setUsageHint(self):
    pass
  def set_lru_size(self):
    pass
  def set_num_rows(self):
    pass
  def set_usage_hint(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncleanSetNumRows(self):
    pass
  def unclean_set_num_rows(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToSimpleLruPage(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_SimpleLruPage(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomVertexArrayDataHandle:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def clearRows(self):
    pass
  def clear_rows(self):
    pass
  def copyDataFrom(self):
    pass
  def copySubdataFrom(self):
    pass
  def copy_data_from(self):
    pass
  def copy_subdata_from(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getArrayFormat(self):
    pass
  def get_class_type():
    pass
  def getData(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getModified(self):
    pass
  def getNumRows(self):
    pass
  def getObject(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def getUsageHint(self):
    pass
  def get_array_format(self):
    pass
  def get_class_type():
    pass
  def get_data(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_modified(self):
    pass
  def get_num_rows(self):
    pass
  def get_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def get_usage_hint(self):
    pass
  def markUsed(self):
    pass
  def mark_used(self):
    pass
  def ref(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumRows(self):
    pass
  def reserve_num_rows(self):
    pass
  def setData(self):
    pass
  def setNumRows(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_num_rows(self):
    pass
  def set_subdata(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncleanSetNumRows(self):
    pass
  def unclean_set_num_rows(self):
    pass
  def unref(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
class GeomVertexArrayFormat:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addColumn(self):
    pass
  def add_column(self):
    pass
  def alignColumnsForAnimation(self):
    pass
  def align_columns_for_animation(self):
    pass
  def assign(self):
    pass
  def clearColumns(self):
    pass
  def clear_columns(self):
    pass
  def countUnusedSpace(self):
    pass
  def count_unused_space(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getColumn(self):
    pass
  def getColumns(self):
    pass
  def getNumColumns(self):
    pass
  def getPadTo(self):
    pass
  def getRefCount(self):
    pass
  def getStride(self):
    pass
  def getTotalBytes(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_column(self):
    pass
  def get_columns(self):
    pass
  def get_num_columns(self):
    pass
  def get_pad_to(self):
    pass
  def get_ref_count(self):
    pass
  def get_stride(self):
    pass
  def get_total_bytes(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isDataSubsetOf(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isRegistered(self):
    pass
  def is_data_subset_of(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_registered(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def packColumns(self):
    pass
  def pack_columns(self):
    pass
  def ref(self):
    pass
  def register_format():
    pass
  def register_format():
    pass
  def removeColumn(self):
    pass
  def remove_column(self):
    pass
  def setPadTo(self):
    pass
  def setStride(self):
    pass
  def set_pad_to(self):
    pass
  def set_stride(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithData(self):
    pass
  def write_with_data(self):
    pass
class GeomVertexColumn:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def assign(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def getColumnAlignment(self):
    pass
  def getComponentBytes(self):
    pass
  def getContents(self):
    pass
  def getName(self):
    pass
  def getNumComponents(self):
    pass
  def getNumValues(self):
    pass
  def getNumericType(self):
    pass
  def getStart(self):
    pass
  def getTotalBytes(self):
    pass
  def get_column_alignment(self):
    pass
  def get_component_bytes(self):
    pass
  def get_contents(self):
    pass
  def get_name(self):
    pass
  def get_num_components(self):
    pass
  def get_num_values(self):
    pass
  def get_numeric_type(self):
    pass
  def get_start(self):
    pass
  def get_total_bytes(self):
    pass
  def hasHomogeneousCoord(self):
    pass
  def has_homogeneous_coord(self):
    pass
  def isBytewiseEquivalent(self):
    pass
  def is_bytewise_equivalent(self):
    pass
  def output(self):
    pass
  def overlapsWith(self):
    pass
  def overlaps_with(self):
    pass
class GeomVertexData:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def animateVertices(self):
    pass
  def animate_vertices(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clearAnimatedVertices(self):
    pass
  def clearCache(self):
    pass
  def clearCacheStage(self):
    pass
  def clearRows(self):
    pass
  def clearSliderTable(self):
    pass
  def clearTransformBlendTable(self):
    pass
  def clearTransformTable(self):
    pass
  def clear_animated_vertices(self):
    pass
  def clear_cache(self):
    pass
  def clear_cache_stage(self):
    pass
  def clear_rows(self):
    pass
  def clear_slider_table(self):
    pass
  def clear_transform_blend_table(self):
    pass
  def clear_transform_table(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convertTo(self):
    pass
  def convert_to(self):
    pass
  def copyFrom(self):
    pass
  def copyRowFrom(self):
    pass
  def copy_from(self):
    pass
  def copy_row_from(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def describeVertex(self):
    pass
  def describe_vertex(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getArray(self):
    pass
  def getArrays(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getFormat(self):
    pass
  def getModified(self):
    pass
  def getName(self):
    pass
  def getNumArrays(self):
    pass
  def getNumBytes(self):
    pass
  def getNumRows(self):
    pass
  def getRefCount(self):
    pass
  def getSliderTable(self):
    pass
  def getTransformBlendTable(self):
    pass
  def getTransformTable(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUsageHint(self):
    pass
  def get_array(self):
    pass
  def get_arrays(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_format(self):
    pass
  def get_modified(self):
    pass
  def get_name(self):
    pass
  def get_num_arrays(self):
    pass
  def get_num_bytes(self):
    pass
  def get_num_rows(self):
    pass
  def get_ref_count(self):
    pass
  def get_slider_table(self):
    pass
  def get_transform_blend_table(self):
    pass
  def get_transform_table(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_usage_hint(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def modifyArray(self):
    pass
  def modifyTransformBlendTable(self):
    pass
  def modify_array(self):
    pass
  def modify_transform_blend_table(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def replaceColumn(self):
    pass
  def replace_column(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def reserveNumRows(self):
    pass
  def reserve_num_rows(self):
    pass
  def reverseNormals(self):
    pass
  def reverse_normals(self):
    pass
  def scaleColor(self):
    pass
  def scale_color(self):
    pass
  def setArray(self):
    pass
  def setColor(self):
    pass
  def setFormat(self):
    pass
  def setName(self):
    pass
  def setNumRows(self):
    pass
  def setSliderTable(self):
    pass
  def setTransformBlendTable(self):
    pass
  def setTransformTable(self):
    pass
  def setUsageHint(self):
    pass
  def set_array(self):
    pass
  def set_color(self):
    pass
  def set_format(self):
    pass
  def set_name(self):
    pass
  def set_num_rows(self):
    pass
  def set_slider_table(self):
    pass
  def set_transform_blend_table(self):
    pass
  def set_transform_table(self):
    pass
  def set_usage_hint(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def transformVertices(self):
    pass
  def transform_vertices(self):
    pass
  def uncleanSetNumRows(self):
    pass
  def unclean_set_num_rows(self):
    pass
  def unref(self):
    pass
  def upcastToCopyOnWriteObject(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_CopyOnWriteObject(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class GeomVertexFormat:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addArray(self):
    pass
  def add_array(self):
    pass
  def alignColumnsForAnimation(self):
    pass
  def align_columns_for_animation(self):
    pass
  def assign(self):
    pass
  def clearArrays(self):
    pass
  def clear_arrays(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getAnimation(self):
    pass
  def getArray(self):
    pass
  def getArrayWith(self):
    pass
  def getArrays(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getColumn(self):
    pass
  def getColumns(self):
    pass
  def getMorphBase(self):
    pass
  def getMorphBases(self):
    pass
  def getMorphDelta(self):
    pass
  def getMorphDeltas(self):
    pass
  def getMorphSlider(self):
    pass
  def getMorphSliders(self):
    pass
  def getNumArrays(self):
    pass
  def getNumColumns(self):
    pass
  def getNumMorphs(self):
    pass
  def getNumPoints(self):
    pass
  def getNumTexcoords(self):
    pass
  def getNumVectors(self):
    pass
  def getPoint(self):
    pass
  def getPoints(self):
    pass
  def getPostAnimatedFormat(self):
    pass
  def getRefCount(self):
    pass
  def getTexcoord(self):
    pass
  def getTexcoords(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnionFormat(self):
    pass
  def get_v3():
    pass
  def get_v3c4():
    pass
  def get_v3c4t2():
    pass
  def get_v3cp():
    pass
  def get_v3cpt2():
    pass
  def get_v3n3():
    pass
  def get_v3n3c4():
    pass
  def get_v3n3c4t2():
    pass
  def get_v3n3cp():
    pass
  def get_v3n3cpt2():
    pass
  def get_v3n3t2():
    pass
  def get_v3t2():
    pass
  def getVector(self):
    pass
  def getVectors(self):
    pass
  def get_animation(self):
    pass
  def get_array(self):
    pass
  def get_array_with(self):
    pass
  def get_arrays(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_column(self):
    pass
  def get_columns(self):
    pass
  def get_morph_base(self):
    pass
  def get_morph_bases(self):
    pass
  def get_morph_delta(self):
    pass
  def get_morph_deltas(self):
    pass
  def get_morph_slider(self):
    pass
  def get_morph_sliders(self):
    pass
  def get_num_arrays(self):
    pass
  def get_num_columns(self):
    pass
  def get_num_morphs(self):
    pass
  def get_num_points(self):
    pass
  def get_num_texcoords(self):
    pass
  def get_num_vectors(self):
    pass
  def get_point(self):
    pass
  def get_points(self):
    pass
  def get_post_animated_format(self):
    pass
  def get_ref_count(self):
    pass
  def get_texcoord(self):
    pass
  def get_texcoords(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_union_format(self):
    pass
  def get_v3():
    pass
  def get_v3c4():
    pass
  def get_v3c4t2():
    pass
  def get_v3cp():
    pass
  def get_v3cpt2():
    pass
  def get_v3n3():
    pass
  def get_v3n3c4():
    pass
  def get_v3n3c4t2():
    pass
  def get_v3n3cp():
    pass
  def get_v3n3cpt2():
    pass
  def get_v3n3t2():
    pass
  def get_v3t2():
    pass
  def get_vector(self):
    pass
  def get_vectors(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def insertArray(self):
    pass
  def insert_array(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isRegistered(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_registered(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def maybeAlignColumnsForAnimation(self):
    pass
  def maybe_align_columns_for_animation(self):
    pass
  def modifyArray(self):
    pass
  def modify_array(self):
    pass
  def output(self):
    pass
  def packColumns(self):
    pass
  def pack_columns(self):
    pass
  def ref(self):
    pass
  def register_format():
    pass
  def register_format():
    pass
  def removeArray(self):
    pass
  def removeColumn(self):
    pass
  def remove_array(self):
    pass
  def remove_column(self):
    pass
  def setAnimation(self):
    pass
  def setArray(self):
    pass
  def set_animation(self):
    pass
  def set_array(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToGeomEnums(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_GeomEnums(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithData(self):
    pass
  def write_with_data(self):
    pass
class GeomVertexReader:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def assign(self):
    pass
  def clear(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToGeomVertexRewriter(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_GeomVertexRewriter(self):
    pass
  def getArray(self):
    pass
  def getArrayData(self):
    pass
  def getArrayHandle(self):
    pass
  def getColumn(self):
    pass
  def getCurrentThread(self):
    pass
  def getData1(self):
    pass
  def getData1d(self):
    pass
  def getData1f(self):
    pass
  def getData1i(self):
    pass
  def getData2(self):
    pass
  def getData2d(self):
    pass
  def getData2f(self):
    pass
  def getData3(self):
    pass
  def getData3d(self):
    pass
  def getData3f(self):
    pass
  def getData4(self):
    pass
  def getData4d(self):
    pass
  def getData4f(self):
    pass
  def getForce(self):
    pass
  def getReadRow(self):
    pass
  def getStartRow(self):
    pass
  def getStride(self):
    pass
  def getVertexData(self):
    pass
  def get_array(self):
    pass
  def get_array_data(self):
    pass
  def get_array_handle(self):
    pass
  def get_column(self):
    pass
  def get_current_thread(self):
    pass
  def get_data1(self):
    pass
  def get_data1d(self):
    pass
  def get_data1f(self):
    pass
  def get_data1i(self):
    pass
  def get_data2(self):
    pass
  def get_data2d(self):
    pass
  def get_data2f(self):
    pass
  def get_data3(self):
    pass
  def get_data3d(self):
    pass
  def get_data3f(self):
    pass
  def get_data4(self):
    pass
  def get_data4d(self):
    pass
  def get_data4f(self):
    pass
  def get_force(self):
    pass
  def get_read_row(self):
    pass
  def get_start_row(self):
    pass
  def get_stride(self):
    pass
  def get_vertex_data(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isAtEnd(self):
    pass
  def is_at_end(self):
    pass
  def output(self):
    pass
  def setColumn(self):
    pass
  def setForce(self):
    pass
  def setRow(self):
    pass
  def setRowUnsafe(self):
    pass
  def set_column(self):
    pass
  def set_force(self):
    pass
  def set_row(self):
    pass
  def set_row_unsafe(self):
    pass
class GeomVertexRewriter:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addData1(self):
    pass
  def addData1d(self):
    pass
  def addData1f(self):
    pass
  def addData1i(self):
    pass
  def addData2(self):
    pass
  def addData2d(self):
    pass
  def addData2f(self):
    pass
  def addData2i(self):
    pass
  def addData3(self):
    pass
  def addData3d(self):
    pass
  def addData3f(self):
    pass
  def addData3i(self):
    pass
  def addData4(self):
    pass
  def addData4d(self):
    pass
  def addData4f(self):
    pass
  def addData4i(self):
    pass
  def add_data1(self):
    pass
  def add_data1d(self):
    pass
  def add_data1f(self):
    pass
  def add_data1i(self):
    pass
  def add_data2(self):
    pass
  def add_data2d(self):
    pass
  def add_data2f(self):
    pass
  def add_data2i(self):
    pass
  def add_data3(self):
    pass
  def add_data3d(self):
    pass
  def add_data3f(self):
    pass
  def add_data3i(self):
    pass
  def add_data4(self):
    pass
  def add_data4d(self):
    pass
  def add_data4f(self):
    pass
  def add_data4i(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToGeomVertexRewriter(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_GeomVertexRewriter(self):
    pass
  def getArray(self):
    pass
  def getArrayData(self):
    pass
  def getArrayHandle(self):
    pass
  def getColumn(self):
    pass
  def getCurrentThread(self):
    pass
  def getData1(self):
    pass
  def getData1d(self):
    pass
  def getData1f(self):
    pass
  def getData1i(self):
    pass
  def getData2(self):
    pass
  def getData2d(self):
    pass
  def getData2f(self):
    pass
  def getData3(self):
    pass
  def getData3d(self):
    pass
  def getData3f(self):
    pass
  def getData4(self):
    pass
  def getData4d(self):
    pass
  def getData4f(self):
    pass
  def getForce(self):
    pass
  def getReadRow(self):
    pass
  def getStartRow(self):
    pass
  def getStride(self):
    pass
  def getVertexData(self):
    pass
  def getWriteRow(self):
    pass
  def get_array(self):
    pass
  def get_array_data(self):
    pass
  def get_array_handle(self):
    pass
  def get_column(self):
    pass
  def get_current_thread(self):
    pass
  def get_data1(self):
    pass
  def get_data1d(self):
    pass
  def get_data1f(self):
    pass
  def get_data1i(self):
    pass
  def get_data2(self):
    pass
  def get_data2d(self):
    pass
  def get_data2f(self):
    pass
  def get_data3(self):
    pass
  def get_data3d(self):
    pass
  def get_data3f(self):
    pass
  def get_data4(self):
    pass
  def get_data4d(self):
    pass
  def get_data4f(self):
    pass
  def get_force(self):
    pass
  def get_read_row(self):
    pass
  def get_start_row(self):
    pass
  def get_stride(self):
    pass
  def get_vertex_data(self):
    pass
  def get_write_row(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isAtEnd(self):
    pass
  def is_at_end(self):
    pass
  def output(self):
    pass
  def reserveNumRows(self):
    pass
  def reserve_num_rows(self):
    pass
  def setColumn(self):
    pass
  def setData1(self):
    pass
  def setData1d(self):
    pass
  def setData1f(self):
    pass
  def setData1i(self):
    pass
  def setData2(self):
    pass
  def setData2d(self):
    pass
  def setData2f(self):
    pass
  def setData2i(self):
    pass
  def setData3(self):
    pass
  def setData3d(self):
    pass
  def setData3f(self):
    pass
  def setData3i(self):
    pass
  def setData4(self):
    pass
  def setData4d(self):
    pass
  def setData4f(self):
    pass
  def setData4i(self):
    pass
  def setForce(self):
    pass
  def setRow(self):
    pass
  def setRowUnsafe(self):
    pass
  def set_column(self):
    pass
  def set_data1(self):
    pass
  def set_data1d(self):
    pass
  def set_data1f(self):
    pass
  def set_data1i(self):
    pass
  def set_data2(self):
    pass
  def set_data2d(self):
    pass
  def set_data2f(self):
    pass
  def set_data2i(self):
    pass
  def set_data3(self):
    pass
  def set_data3d(self):
    pass
  def set_data3f(self):
    pass
  def set_data3i(self):
    pass
  def set_data4(self):
    pass
  def set_data4d(self):
    pass
  def set_data4f(self):
    pass
  def set_data4i(self):
    pass
  def set_force(self):
    pass
  def set_row(self):
    pass
  def set_row_unsafe(self):
    pass
  def upcastToGeomVertexReader(self):
    pass
  def upcastToGeomVertexWriter(self):
    pass
  def upcast_to_GeomVertexReader(self):
    pass
  def upcast_to_GeomVertexWriter(self):
    pass
class GeomVertexWriter:
  def __init__(self):
    pass
  ATHardware = int

  ATNone = int

  ATPanda = int

  AT_hardware = int

  AT_none = int

  AT_panda = int

  CClipPoint = int

  CColor = int

  CIndex = int

  CMorphDelta = int

  COther = int

  CPoint = int

  CTexcoord = int

  CVector = int

  C_clip_point = int

  C_color = int

  C_index = int

  C_morph_delta = int

  C_other = int

  C_point = int

  C_texcoord = int

  C_vector = int

  GRCompositeBits = int

  GRFlatFirstVertex = int

  GRFlatLastVertex = int

  GRIndexedBits = int

  GRIndexedOther = int

  GRIndexedPoint = int

  GRLineStrip = int

  GRPerPointSize = int

  GRPoint = int

  GRPointAspectRatio = int

  GRPointBits = int

  GRPointPerspective = int

  GRPointRotate = int

  GRPointScale = int

  GRPointSprite = int

  GRPointSpriteTexMatrix = int

  GRPointUniformSize = int

  GRShadeModelBits = int

  GRTexcoordLightVector = int

  GRTriangleFan = int

  GRTriangleStrip = int

  GR_composite_bits = int

  GR_flat_first_vertex = int

  GR_flat_last_vertex = int

  GR_indexed_bits = int

  GR_indexed_other = int

  GR_indexed_point = int

  GR_line_strip = int

  GR_per_point_size = int

  GR_point = int

  GR_point_aspect_ratio = int

  GR_point_bits = int

  GR_point_perspective = int

  GR_point_rotate = int

  GR_point_scale = int

  GR_point_sprite = int

  GR_point_sprite_tex_matrix = int

  GR_point_uniform_size = int

  GR_shade_model_bits = int

  GR_texcoord_light_vector = int

  GR_triangle_fan = int

  GR_triangle_strip = int

  NTFloat32 = int

  NTFloat64 = int

  NTPackedDabc = int

  NTPackedDcba = int

  NTStdfloat = int

  NTUint16 = int

  NTUint32 = int

  NTUint8 = int

  NT_float32 = int

  NT_float64 = int

  NT_packed_dabc = int

  NT_packed_dcba = int

  NT_stdfloat = int

  NT_uint16 = int

  NT_uint32 = int

  NT_uint8 = int

  PTLines = int

  PTNone = int

  PTPoints = int

  PTPolygons = int

  PT_lines = int

  PT_none = int

  PT_points = int

  PT_polygons = int

  SMFlatFirstVertex = int

  SMFlatLastVertex = int

  SMSmooth = int

  SMUniform = int

  SM_flat_first_vertex = int

  SM_flat_last_vertex = int

  SM_smooth = int

  SM_uniform = int

  UHClient = int

  UHDynamic = int

  UHStatic = int

  UHStream = int

  UHUnspecified = int

  UH_client = int

  UH_dynamic = int

  UH_static = int

  UH_stream = int

  UH_unspecified = int

  def addData1(self):
    pass
  def addData1d(self):
    pass
  def addData1f(self):
    pass
  def addData1i(self):
    pass
  def addData2(self):
    pass
  def addData2d(self):
    pass
  def addData2f(self):
    pass
  def addData2i(self):
    pass
  def addData3(self):
    pass
  def addData3d(self):
    pass
  def addData3f(self):
    pass
  def addData3i(self):
    pass
  def addData4(self):
    pass
  def addData4d(self):
    pass
  def addData4f(self):
    pass
  def addData4i(self):
    pass
  def add_data1(self):
    pass
  def add_data1d(self):
    pass
  def add_data1f(self):
    pass
  def add_data1i(self):
    pass
  def add_data2(self):
    pass
  def add_data2d(self):
    pass
  def add_data2f(self):
    pass
  def add_data2i(self):
    pass
  def add_data3(self):
    pass
  def add_data3d(self):
    pass
  def add_data3f(self):
    pass
  def add_data3i(self):
    pass
  def add_data4(self):
    pass
  def add_data4d(self):
    pass
  def add_data4f(self):
    pass
  def add_data4i(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def downcastToGeom(self):
    pass
  def downcastToGeomPrimitive(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToGeomVertexArrayDataHandle(self):
    pass
  def downcastToGeomVertexArrayFormat(self):
    pass
  def downcastToGeomVertexData(self):
    pass
  def downcastToGeomVertexFormat(self):
    pass
  def downcastToGeomVertexRewriter(self):
    pass
  def downcast_to_Geom(self):
    pass
  def downcast_to_GeomPrimitive(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_GeomVertexArrayDataHandle(self):
    pass
  def downcast_to_GeomVertexArrayFormat(self):
    pass
  def downcast_to_GeomVertexData(self):
    pass
  def downcast_to_GeomVertexFormat(self):
    pass
  def downcast_to_GeomVertexRewriter(self):
    pass
  def getArray(self):
    pass
  def getArrayData(self):
    pass
  def getArrayHandle(self):
    pass
  def getColumn(self):
    pass
  def getCurrentThread(self):
    pass
  def getStartRow(self):
    pass
  def getStride(self):
    pass
  def getVertexData(self):
    pass
  def getWriteRow(self):
    pass
  def get_array(self):
    pass
  def get_array_data(self):
    pass
  def get_array_handle(self):
    pass
  def get_column(self):
    pass
  def get_current_thread(self):
    pass
  def get_start_row(self):
    pass
  def get_stride(self):
    pass
  def get_vertex_data(self):
    pass
  def get_write_row(self):
    pass
  def hasColumn(self):
    pass
  def has_column(self):
    pass
  def isAtEnd(self):
    pass
  def is_at_end(self):
    pass
  def output(self):
    pass
  def reserveNumRows(self):
    pass
  def reserve_num_rows(self):
    pass
  def setColumn(self):
    pass
  def setData1(self):
    pass
  def setData1d(self):
    pass
  def setData1f(self):
    pass
  def setData1i(self):
    pass
  def setData2(self):
    pass
  def setData2d(self):
    pass
  def setData2f(self):
    pass
  def setData2i(self):
    pass
  def setData3(self):
    pass
  def setData3d(self):
    pass
  def setData3f(self):
    pass
  def setData3i(self):
    pass
  def setData4(self):
    pass
  def setData4d(self):
    pass
  def setData4f(self):
    pass
  def setData4i(self):
    pass
  def setRow(self):
    pass
  def setRowUnsafe(self):
    pass
  def set_column(self):
    pass
  def set_data1(self):
    pass
  def set_data1d(self):
    pass
  def set_data1f(self):
    pass
  def set_data1i(self):
    pass
  def set_data2(self):
    pass
  def set_data2d(self):
    pass
  def set_data2f(self):
    pass
  def set_data2i(self):
    pass
  def set_data3(self):
    pass
  def set_data3d(self):
    pass
  def set_data3f(self):
    pass
  def set_data3i(self):
    pass
  def set_data4(self):
    pass
  def set_data4d(self):
    pass
  def set_data4f(self):
    pass
  def set_data4i(self):
    pass
  def set_row(self):
    pass
  def set_row_unsafe(self):
    pass
class GeometricBoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class GraphicsBuffer:
  def __init__(self):
    pass
  FMParasite = int

  FMRefresh = int

  FMRender = int

  FM_parasite = int

  FM_refresh = int

  FM_render = int

  RTMBindOrCopy = int

  RTMCopyRam = int

  RTMCopyTexture = int

  RTMNone = int

  RTMTriggeredCopyRam = int

  RTMTriggeredCopyTexture = int

  RTM_bind_or_copy = int

  RTM_copy_ram = int

  RTM_copy_texture = int

  RTM_none = int

  RTM_triggered_copy_ram = int

  RTM_triggered_copy_texture = int

  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def addRenderTexture(self):
    pass
  def add_render_texture(self):
    pass
  def clearChildSort(self):
    pass
  def clearDeleteFlag(self):
    pass
  def clearRenderTextures(self):
    pass
  def clear_child_sort(self):
    pass
  def clear_delete_flag(self):
    pass
  def clear_render_textures(self):
    pass
  def countTextures(self):
    pass
  def count_textures(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActiveDisplayRegion(self):
    pass
  def getActiveDisplayRegions(self):
    pass
  def getBamModified(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getDeleteFlag(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getEngine(self):
    pass
  def getFbProperties(self):
    pass
  def getFbXSize(self):
    pass
  def getFbYSize(self):
    pass
  def getGsg(self):
    pass
  def getInverted(self):
    pass
  def getLeftEyeColorMask(self):
    pass
  def getName(self):
    pass
  def getNumActiveDisplayRegions(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getOneShot(self):
    pass
  def getOverlayDisplayRegion(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def getRedBlueStereo(self):
    pass
  def getRefCount(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRightEyeColorMask(self):
    pass
  def getRtmMode(self):
    pass
  def getSbsLeftDimensions(self):
    pass
  def getSbsLeftXSize(self):
    pass
  def getSbsLeftYSize(self):
    pass
  def getSbsRightDimensions(self):
    pass
  def getSbsRightXSize(self):
    pass
  def getSbsRightYSize(self):
    pass
  def getScreenshot(self):
    pass
  def getSideBySideStereo(self):
    pass
  def getSort(self):
    pass
  def getSupportsRenderTexture(self):
    pass
  def getSwapEyes(self):
    pass
  def getTexture(self):
    pass
  def getTextureCard(self):
    pass
  def getTexturePlane(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_active_display_region(self):
    pass
  def get_active_display_regions(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_delete_flag(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_engine(self):
    pass
  def get_fb_properties(self):
    pass
  def get_fb_x_size(self):
    pass
  def get_fb_y_size(self):
    pass
  def get_gsg(self):
    pass
  def get_inverted(self):
    pass
  def get_left_eye_color_mask(self):
    pass
  def get_name(self):
    pass
  def get_num_active_display_regions(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_one_shot(self):
    pass
  def get_overlay_display_region(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_red_blue_stereo(self):
    pass
  def get_ref_count(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_right_eye_color_mask(self):
    pass
  def get_rtm_mode(self):
    pass
  def get_sbs_left_dimensions(self):
    pass
  def get_sbs_left_x_size(self):
    pass
  def get_sbs_left_y_size(self):
    pass
  def get_sbs_right_dimensions(self):
    pass
  def get_sbs_right_x_size(self):
    pass
  def get_sbs_right_y_size(self):
    pass
  def get_screenshot(self):
    pass
  def get_side_by_side_stereo(self):
    pass
  def get_sort(self):
    pass
  def get_supports_render_texture(self):
    pass
  def get_swap_eyes(self):
    pass
  def get_texture(self):
    pass
  def get_texture_card(self):
    pass
  def get_texture_plane(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasSize(self):
    pass
  def hasTexture(self):
    pass
  def has_size(self):
    pass
  def has_texture(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isExactType(self):
    pass
  def isNonzeroSize(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_nonzero_size(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def is_valid(self):
    pass
  def makeCubeMap(self):
    pass
  def makeDisplayRegion(self):
    pass
  def makeMonoDisplayRegion(self):
    pass
  def make_screenshot_filename():
    pass
  def makeStereoDisplayRegion(self):
    pass
  def makeTextureBuffer(self):
    pass
  def make_cube_map(self):
    pass
  def make_display_region(self):
    pass
  def make_mono_display_region(self):
    pass
  def make_screenshot_filename():
    pass
  def make_stereo_display_region(self):
    pass
  def make_texture_buffer(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def removeAllDisplayRegions(self):
    pass
  def removeDisplayRegion(self):
    pass
  def remove_all_display_regions(self):
    pass
  def remove_display_region(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setChildSort(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setInverted(self):
    pass
  def setOneShot(self):
    pass
  def setOverlayDisplayRegion(self):
    pass
  def setPixelZoom(self):
    pass
  def setRedBlueStereo(self):
    pass
  def setSideBySideStereo(self):
    pass
  def setSize(self):
    pass
  def setSort(self):
    pass
  def setSwapEyes(self):
    pass
  def set_active(self):
    pass
  def set_child_sort(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_inverted(self):
    pass
  def set_one_shot(self):
    pass
  def set_overlay_display_region(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_red_blue_stereo(self):
    pass
  def set_side_by_side_stereo(self):
    pass
  def set_size(self):
    pass
  def set_sort(self):
    pass
  def set_swap_eyes(self):
    pass
  def setupRenderTexture(self):
    pass
  def setup_render_texture(self):
    pass
  def shareDepthBuffer(self):
    pass
  def share_depth_buffer(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def triggerCopy(self):
    pass
  def trigger_copy(self):
    pass
  def unref(self):
    pass
  def unshareDepthBuffer(self):
    pass
  def unshare_depth_buffer(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToGraphicsOutputBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_GraphicsOutputBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsDevice:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getPipe(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_pipe(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class GraphicsEngine:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extractTextureData(self):
    pass
  def extract_texture_data(self):
    pass
  def flipFrame(self):
    pass
  def flip_frame(self):
    pass
  def getAutoFlip(self):
    pass
  def get_class_type():
    pass
  def getDefaultLoader(self):
    pass
  def get_global_ptr():
    pass
  def getNumWindows(self):
    pass
  def getPortalCull(self):
    pass
  def getRefCount(self):
    pass
  def getRenderLock(self):
    pass
  def getThreadingModel(self):
    pass
  def getWindow(self):
    pass
  def getWindows(self):
    pass
  def get_auto_flip(self):
    pass
  def get_class_type():
    pass
  def get_default_loader(self):
    pass
  def get_global_ptr():
    pass
  def get_num_windows(self):
    pass
  def get_portal_cull(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_lock(self):
    pass
  def get_threading_model(self):
    pass
  def get_window(self):
    pass
  def get_windows(self):
    pass
  def isEmpty(self):
    pass
  def is_empty(self):
    pass
  def makeBuffer(self):
    pass
  def makeOutput(self):
    pass
  def makeParasite(self):
    pass
  def make_buffer(self):
    pass
  def make_output(self):
    pass
  def make_parasite(self):
    pass
  def openWindows(self):
    pass
  def open_windows(self):
    pass
  def readyFlip(self):
    pass
  def ready_flip(self):
    pass
  def ref(self):
    pass
  def removeAllWindows(self):
    pass
  def removeWindow(self):
    pass
  def remove_all_windows(self):
    pass
  def remove_window(self):
    pass
  def renderFrame(self):
    pass
  def render_frame(self):
    pass
  def resetAllWindows(self):
    pass
  def reset_all_windows(self):
    pass
  def setAutoFlip(self):
    pass
  def setDefaultLoader(self):
    pass
  def setPortalCull(self):
    pass
  def setThreadingModel(self):
    pass
  def set_auto_flip(self):
    pass
  def set_default_loader(self):
    pass
  def set_portal_cull(self):
    pass
  def set_threading_model(self):
    pass
  def syncFrame(self):
    pass
  def sync_frame(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class GraphicsOutput:
  def __init__(self):
    pass
  FMParasite = int

  FMRefresh = int

  FMRender = int

  FM_parasite = int

  FM_refresh = int

  FM_render = int

  RTMBindOrCopy = int

  RTMCopyRam = int

  RTMCopyTexture = int

  RTMNone = int

  RTMTriggeredCopyRam = int

  RTMTriggeredCopyTexture = int

  RTM_bind_or_copy = int

  RTM_copy_ram = int

  RTM_copy_texture = int

  RTM_none = int

  RTM_triggered_copy_ram = int

  RTM_triggered_copy_texture = int

  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def addRenderTexture(self):
    pass
  def add_render_texture(self):
    pass
  def clearChildSort(self):
    pass
  def clearDeleteFlag(self):
    pass
  def clearRenderTextures(self):
    pass
  def clear_child_sort(self):
    pass
  def clear_delete_flag(self):
    pass
  def clear_render_textures(self):
    pass
  def countTextures(self):
    pass
  def count_textures(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActiveDisplayRegion(self):
    pass
  def getActiveDisplayRegions(self):
    pass
  def getBamModified(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getDeleteFlag(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getEngine(self):
    pass
  def getFbProperties(self):
    pass
  def getFbXSize(self):
    pass
  def getFbYSize(self):
    pass
  def getGsg(self):
    pass
  def getInverted(self):
    pass
  def getLeftEyeColorMask(self):
    pass
  def getName(self):
    pass
  def getNumActiveDisplayRegions(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getOneShot(self):
    pass
  def getOverlayDisplayRegion(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def getRedBlueStereo(self):
    pass
  def getRefCount(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRightEyeColorMask(self):
    pass
  def getRtmMode(self):
    pass
  def getSbsLeftDimensions(self):
    pass
  def getSbsLeftXSize(self):
    pass
  def getSbsLeftYSize(self):
    pass
  def getSbsRightDimensions(self):
    pass
  def getSbsRightXSize(self):
    pass
  def getSbsRightYSize(self):
    pass
  def getScreenshot(self):
    pass
  def getSideBySideStereo(self):
    pass
  def getSort(self):
    pass
  def getSupportsRenderTexture(self):
    pass
  def getSwapEyes(self):
    pass
  def getTexture(self):
    pass
  def getTextureCard(self):
    pass
  def getTexturePlane(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_active_display_region(self):
    pass
  def get_active_display_regions(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_delete_flag(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_engine(self):
    pass
  def get_fb_properties(self):
    pass
  def get_fb_x_size(self):
    pass
  def get_fb_y_size(self):
    pass
  def get_gsg(self):
    pass
  def get_inverted(self):
    pass
  def get_left_eye_color_mask(self):
    pass
  def get_name(self):
    pass
  def get_num_active_display_regions(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_one_shot(self):
    pass
  def get_overlay_display_region(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_red_blue_stereo(self):
    pass
  def get_ref_count(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_right_eye_color_mask(self):
    pass
  def get_rtm_mode(self):
    pass
  def get_sbs_left_dimensions(self):
    pass
  def get_sbs_left_x_size(self):
    pass
  def get_sbs_left_y_size(self):
    pass
  def get_sbs_right_dimensions(self):
    pass
  def get_sbs_right_x_size(self):
    pass
  def get_sbs_right_y_size(self):
    pass
  def get_screenshot(self):
    pass
  def get_side_by_side_stereo(self):
    pass
  def get_sort(self):
    pass
  def get_supports_render_texture(self):
    pass
  def get_swap_eyes(self):
    pass
  def get_texture(self):
    pass
  def get_texture_card(self):
    pass
  def get_texture_plane(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasSize(self):
    pass
  def hasTexture(self):
    pass
  def has_size(self):
    pass
  def has_texture(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isExactType(self):
    pass
  def isNonzeroSize(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_nonzero_size(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def is_valid(self):
    pass
  def makeCubeMap(self):
    pass
  def makeDisplayRegion(self):
    pass
  def makeMonoDisplayRegion(self):
    pass
  def make_screenshot_filename():
    pass
  def makeStereoDisplayRegion(self):
    pass
  def makeTextureBuffer(self):
    pass
  def make_cube_map(self):
    pass
  def make_display_region(self):
    pass
  def make_mono_display_region(self):
    pass
  def make_screenshot_filename():
    pass
  def make_stereo_display_region(self):
    pass
  def make_texture_buffer(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def removeAllDisplayRegions(self):
    pass
  def removeDisplayRegion(self):
    pass
  def remove_all_display_regions(self):
    pass
  def remove_display_region(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setChildSort(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setInverted(self):
    pass
  def setOneShot(self):
    pass
  def setOverlayDisplayRegion(self):
    pass
  def setPixelZoom(self):
    pass
  def setRedBlueStereo(self):
    pass
  def setSideBySideStereo(self):
    pass
  def setSort(self):
    pass
  def setSwapEyes(self):
    pass
  def set_active(self):
    pass
  def set_child_sort(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_inverted(self):
    pass
  def set_one_shot(self):
    pass
  def set_overlay_display_region(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_red_blue_stereo(self):
    pass
  def set_side_by_side_stereo(self):
    pass
  def set_sort(self):
    pass
  def set_swap_eyes(self):
    pass
  def setupRenderTexture(self):
    pass
  def setup_render_texture(self):
    pass
  def shareDepthBuffer(self):
    pass
  def share_depth_buffer(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def triggerCopy(self):
    pass
  def trigger_copy(self):
    pass
  def unref(self):
    pass
  def unshareDepthBuffer(self):
    pass
  def unshare_depth_buffer(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToGraphicsOutputBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_GraphicsOutputBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsOutputBase:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def setSort(self):
    pass
  def set_sort(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsPipe:
  def __init__(self):
    pass
  BFCanBindColor = int

  BFCanBindEvery = int

  BFFbPropsOptional = int

  BFRefuseParasite = int

  BFRefuseWindow = int

  BFRequireCallbackWindow = int

  BFRequireParasite = int

  BFRequireWindow = int

  BFResizeable = int

  BFRttCumulative = int

  BFSizePower2 = int

  BFSizeSquare = int

  BFSizeTrackHost = int

  BF_can_bind_color = int

  BF_can_bind_every = int

  BF_fb_props_optional = int

  BF_refuse_parasite = int

  BF_refuse_window = int

  BF_require_callback_window = int

  BF_require_parasite = int

  BF_require_window = int

  BF_resizeable = int

  BF_rtt_cumulative = int

  BF_size_power_2 = int

  BF_size_square = int

  BF_size_track_host = int

  OTBuffer = int

  OTFullscreenWindow = int

  OTTextureBuffer = int

  OTWindow = int

  OT_buffer = int

  OT_fullscreen_window = int

  OT_texture_buffer = int

  OT_window = int

  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getDisplayHeight(self):
    pass
  def getDisplayInformation(self):
    pass
  def getDisplayWidth(self):
    pass
  def getInterfaceName(self):
    pass
  def getRefCount(self):
    pass
  def getSupportedTypes(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_display_height(self):
    pass
  def get_display_information(self):
    pass
  def get_display_width(self):
    pass
  def get_interface_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_supported_types(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def lookupCpuData(self):
    pass
  def lookup_cpu_data(self):
    pass
  def ref(self):
    pass
  def supportsType(self):
    pass
  def supports_type(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class GraphicsPipeSelection:
  def __init__(self):
    pass
  def get_global_ptr():
    pass
  def getNumAuxModules(self):
    pass
  def getNumPipeTypes(self):
    pass
  def getPipeType(self):
    pass
  def getPipeTypes(self):
    pass
  def get_global_ptr():
    pass
  def get_num_aux_modules(self):
    pass
  def get_num_pipe_types(self):
    pass
  def get_pipe_type(self):
    pass
  def get_pipe_types(self):
    pass
  def loadAuxModules(self):
    pass
  def load_aux_modules(self):
    pass
  def makeDefaultPipe(self):
    pass
  def makeModulePipe(self):
    pass
  def makePipe(self):
    pass
  def make_default_pipe(self):
    pass
  def make_module_pipe(self):
    pass
  def make_pipe(self):
    pass
  def printPipeTypes(self):
    pass
  def print_pipe_types(self):
    pass
class GraphicsStateGuardian:
  def __init__(self):
    pass
  SM00 = int

  SM11 = int

  SM20 = int

  SM2X = int

  SM30 = int

  SM40 = int

  SM_00 = int

  SM_11 = int

  SM_20 = int

  SM_2X = int

  SM_30 = int

  SM_40 = int

  def beginScene(self):
    pass
  def begin_scene(self):
    pass
  def clearFlashTexture(self):
    pass
  def clear_flash_texture(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def endScene(self):
    pass
  def end_scene(self):
    pass
  def get_alpha_scale_texture_stage():
    pass
  def getAlphaScaleViaTexture(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getColorScaleViaLighting(self):
    pass
  def getCoordinateSystem(self):
    pass
  def getCopyTextureInverted(self):
    pass
  def get_default_gsg():
    pass
  def getDriverRenderer(self):
    pass
  def getDriverShaderVersionMajor(self):
    pass
  def getDriverShaderVersionMinor(self):
    pass
  def getDriverVendor(self):
    pass
  def getDriverVersion(self):
    pass
  def getDriverVersionMajor(self):
    pass
  def getDriverVersionMinor(self):
    pass
  def getEffectiveIncompleteRender(self):
    pass
  def getEngine(self):
    pass
  def getFlashTexture(self):
    pass
  def getGamma(self):
    pass
  def get_gsg():
    pass
  def getGsgs():
    pass
  def getIncompleteRender(self):
    pass
  def getInternalCoordinateSystem(self):
    pass
  def getLoader(self):
    pass
  def getMax2dTextureArrayLayers(self):
    pass
  def getMax3dTextureDimension(self):
    pass
  def getMaxClipPlanes(self):
    pass
  def getMaxCubeMapDimension(self):
    pass
  def getMaxLights(self):
    pass
  def getMaxTextureDimension(self):
    pass
  def getMaxTextureStages(self):
    pass
  def getMaxVertexTransformIndices(self):
    pass
  def getMaxVertexTransforms(self):
    pass
  def getMaxVerticesPerArray(self):
    pass
  def getMaxVerticesPerPrimitive(self):
    pass
  def getMaximumSimultaneousRenderTargets(self):
    pass
  def get_num_gsgs():
    pass
  def getPipe(self):
    pass
  def getPreparedObjects(self):
    pass
  def getPreparedTextures(self):
    pass
  def getRefCount(self):
    pass
  def getRuntimeColorScale(self):
    pass
  def getScene(self):
    pass
  def getShaderModel(self):
    pass
  def getSupportedGeomRendering(self):
    pass
  def getSupports2dTextureArray(self):
    pass
  def getSupports3dTexture(self):
    pass
  def getSupportsBasicShaders(self):
    pass
  def getSupportsCgProfile(self):
    pass
  def getSupportsCompressedTexture(self):
    pass
  def getSupportsCompressedTextureFormat(self):
    pass
  def getSupportsCubeMap(self):
    pass
  def getSupportsDepthStencil(self):
    pass
  def getSupportsDepthTexture(self):
    pass
  def getSupportsGenerateMipmap(self):
    pass
  def getSupportsGeometryInstancing(self):
    pass
  def getSupportsGlsl(self):
    pass
  def getSupportsMultisample(self):
    pass
  def getSupportsOcclusionQuery(self):
    pass
  def getSupportsShadowFilter(self):
    pass
  def getSupportsStencil(self):
    pass
  def getSupportsTexNonPow2(self):
    pass
  def getSupportsTextureCombine(self):
    pass
  def getSupportsTextureDot3(self):
    pass
  def getSupportsTextureSavedResult(self):
    pass
  def getSupportsTwoSidedStencil(self):
    pass
  def getTextureQualityOverride(self):
    pass
  def getThreadingModel(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_alpha_scale_texture_stage():
    pass
  def get_alpha_scale_via_texture(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_color_scale_via_lighting(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_copy_texture_inverted(self):
    pass
  def get_default_gsg():
    pass
  def get_driver_renderer(self):
    pass
  def get_driver_shader_version_major(self):
    pass
  def get_driver_shader_version_minor(self):
    pass
  def get_driver_vendor(self):
    pass
  def get_driver_version(self):
    pass
  def get_driver_version_major(self):
    pass
  def get_driver_version_minor(self):
    pass
  def get_effective_incomplete_render(self):
    pass
  def get_engine(self):
    pass
  def get_flash_texture(self):
    pass
  def get_gamma(self):
    pass
  def get_gsg():
    pass
  def get_gsgs():
    pass
  def get_incomplete_render(self):
    pass
  def get_internal_coordinate_system(self):
    pass
  def get_loader(self):
    pass
  def get_max_2d_texture_array_layers(self):
    pass
  def get_max_3d_texture_dimension(self):
    pass
  def get_max_clip_planes(self):
    pass
  def get_max_cube_map_dimension(self):
    pass
  def get_max_lights(self):
    pass
  def get_max_texture_dimension(self):
    pass
  def get_max_texture_stages(self):
    pass
  def get_max_vertex_transform_indices(self):
    pass
  def get_max_vertex_transforms(self):
    pass
  def get_max_vertices_per_array(self):
    pass
  def get_max_vertices_per_primitive(self):
    pass
  def get_maximum_simultaneous_render_targets(self):
    pass
  def get_num_gsgs():
    pass
  def get_pipe(self):
    pass
  def get_prepared_objects(self):
    pass
  def get_prepared_textures(self):
    pass
  def get_ref_count(self):
    pass
  def get_runtime_color_scale(self):
    pass
  def get_scene(self):
    pass
  def get_shader_model(self):
    pass
  def get_supported_geom_rendering(self):
    pass
  def get_supports_2d_texture_array(self):
    pass
  def get_supports_3d_texture(self):
    pass
  def get_supports_basic_shaders(self):
    pass
  def get_supports_cg_profile(self):
    pass
  def get_supports_compressed_texture(self):
    pass
  def get_supports_compressed_texture_format(self):
    pass
  def get_supports_cube_map(self):
    pass
  def get_supports_depth_stencil(self):
    pass
  def get_supports_depth_texture(self):
    pass
  def get_supports_generate_mipmap(self):
    pass
  def get_supports_geometry_instancing(self):
    pass
  def get_supports_glsl(self):
    pass
  def get_supports_multisample(self):
    pass
  def get_supports_occlusion_query(self):
    pass
  def get_supports_shadow_filter(self):
    pass
  def get_supports_stencil(self):
    pass
  def get_supports_tex_non_pow2(self):
    pass
  def get_supports_texture_combine(self):
    pass
  def get_supports_texture_dot3(self):
    pass
  def get_supports_texture_saved_result(self):
    pass
  def get_supports_two_sided_stencil(self):
    pass
  def get_texture_quality_override(self):
    pass
  def get_threading_model(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isActive(self):
    pass
  def isExactType(self):
    pass
  def isHardware(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_hardware(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def needsReset(self):
    pass
  def needs_reset(self):
    pass
  def prefersTriangleStrips(self):
    pass
  def prefers_triangle_strips(self):
    pass
  def ref(self):
    pass
  def releaseAll(self):
    pass
  def releaseAllGeoms(self):
    pass
  def releaseAllIndexBuffers(self):
    pass
  def releaseAllTextures(self):
    pass
  def releaseAllVertexBuffers(self):
    pass
  def release_all(self):
    pass
  def release_all_geoms(self):
    pass
  def release_all_index_buffers(self):
    pass
  def release_all_textures(self):
    pass
  def release_all_vertex_buffers(self):
    pass
  def restoreGamma(self):
    pass
  def restore_gamma(self):
    pass
  def setActive(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_default_gsg():
    pass
  def setFlashTexture(self):
    pass
  def setGamma(self):
    pass
  def setIncompleteRender(self):
    pass
  def setLoader(self):
    pass
  def setScene(self):
    pass
  def setShaderModel(self):
    pass
  def setTextureQualityOverride(self):
    pass
  def set_active(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_default_gsg():
    pass
  def set_flash_texture(self):
    pass
  def set_gamma(self):
    pass
  def set_incomplete_render(self):
    pass
  def set_loader(self):
    pass
  def set_scene(self):
    pass
  def set_shader_model(self):
    pass
  def set_texture_quality_override(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsStateGuardianBase:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_default_gsg():
    pass
  def getEffectiveIncompleteRender(self):
    pass
  def get_gsg():
    pass
  def getGsgs():
    pass
  def getIncompleteRender(self):
    pass
  def getMaxTextureDimension(self):
    pass
  def getMaxVerticesPerArray(self):
    pass
  def getMaxVerticesPerPrimitive(self):
    pass
  def get_num_gsgs():
    pass
  def getRefCount(self):
    pass
  def getSupportedGeomRendering(self):
    pass
  def getSupportsCompressedTextureFormat(self):
    pass
  def getSupportsMultisample(self):
    pass
  def getSupportsOcclusionQuery(self):
    pass
  def getSupportsShadowFilter(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_default_gsg():
    pass
  def get_effective_incomplete_render(self):
    pass
  def get_gsg():
    pass
  def get_gsgs():
    pass
  def get_incomplete_render(self):
    pass
  def get_max_texture_dimension(self):
    pass
  def get_max_vertices_per_array(self):
    pass
  def get_max_vertices_per_primitive(self):
    pass
  def get_num_gsgs():
    pass
  def get_ref_count(self):
    pass
  def get_supported_geom_rendering(self):
    pass
  def get_supports_compressed_texture_format(self):
    pass
  def get_supports_multisample(self):
    pass
  def get_supports_occlusion_query(self):
    pass
  def get_supports_shadow_filter(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def prefersTriangleStrips(self):
    pass
  def prefers_triangle_strips(self):
    pass
  def ref(self):
    pass
  def set_default_gsg():
    pass
  def set_default_gsg():
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsThreadingModel:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getCullName(self):
    pass
  def getCullSorting(self):
    pass
  def getCullStage(self):
    pass
  def getDrawName(self):
    pass
  def getDrawStage(self):
    pass
  def getModel(self):
    pass
  def get_cull_name(self):
    pass
  def get_cull_sorting(self):
    pass
  def get_cull_stage(self):
    pass
  def get_draw_name(self):
    pass
  def get_draw_stage(self):
    pass
  def get_model(self):
    pass
  def isDefault(self):
    pass
  def isSingleThreaded(self):
    pass
  def is_default(self):
    pass
  def is_single_threaded(self):
    pass
  def output(self):
    pass
  def setCullName(self):
    pass
  def setCullSorting(self):
    pass
  def setDrawName(self):
    pass
  def set_cull_name(self):
    pass
  def set_cull_sorting(self):
    pass
  def set_draw_name(self):
    pass
class GraphicsWindow:
  def __init__(self):
    pass
  FMParasite = int

  FMRefresh = int

  FMRender = int

  FM_parasite = int

  FM_refresh = int

  FM_render = int

  RTMBindOrCopy = int

  RTMCopyRam = int

  RTMCopyTexture = int

  RTMNone = int

  RTMTriggeredCopyRam = int

  RTMTriggeredCopyTexture = int

  RTM_bind_or_copy = int

  RTM_copy_ram = int

  RTM_copy_texture = int

  RTM_none = int

  RTM_triggered_copy_ram = int

  RTM_triggered_copy_texture = int

  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def addPythonEventHandler(self):
    pass
  def addRenderTexture(self):
    pass
  def add_python_event_handler(self):
    pass
  def add_render_texture(self):
    pass
  def clearChildSort(self):
    pass
  def clearDeleteFlag(self):
    pass
  def clearRejectedProperties(self):
    pass
  def clearRenderTextures(self):
    pass
  def clear_child_sort(self):
    pass
  def clear_delete_flag(self):
    pass
  def clear_rejected_properties(self):
    pass
  def clear_render_textures(self):
    pass
  def closeIme(self):
    pass
  def close_ime(self):
    pass
  def countTextures(self):
    pass
  def count_textures(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disableClears(self):
    pass
  def disablePointerEvents(self):
    pass
  def disablePointerMode(self):
    pass
  def disable_clears(self):
    pass
  def disable_pointer_events(self):
    pass
  def disable_pointer_mode(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def enablePointerEvents(self):
    pass
  def enablePointerMode(self):
    pass
  def enable_pointer_events(self):
    pass
  def enable_pointer_mode(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActiveDisplayRegion(self):
    pass
  def getActiveDisplayRegions(self):
    pass
  def getBamModified(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getCloseRequestEvent(self):
    pass
  def getDeleteFlag(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getEngine(self):
    pass
  def getFbProperties(self):
    pass
  def getFbXSize(self):
    pass
  def getFbYSize(self):
    pass
  def getGsg(self):
    pass
  def getInputDeviceName(self):
    pass
  def getInputDeviceNames(self):
    pass
  def getInverted(self):
    pass
  def getLeftEyeColorMask(self):
    pass
  def getName(self):
    pass
  def getNumActiveDisplayRegions(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumInputDevices(self):
    pass
  def getOneShot(self):
    pass
  def getOverlayDisplayRegion(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def getPointer(self):
    pass
  def getProperties(self):
    pass
  def getRedBlueStereo(self):
    pass
  def getRefCount(self):
    pass
  def getRejectedProperties(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRequestedProperties(self):
    pass
  def getRightEyeColorMask(self):
    pass
  def getRtmMode(self):
    pass
  def getSbsLeftDimensions(self):
    pass
  def getSbsLeftXSize(self):
    pass
  def getSbsLeftYSize(self):
    pass
  def getSbsRightDimensions(self):
    pass
  def getSbsRightXSize(self):
    pass
  def getSbsRightYSize(self):
    pass
  def getScreenshot(self):
    pass
  def getSideBySideStereo(self):
    pass
  def getSort(self):
    pass
  def getSupportsRenderTexture(self):
    pass
  def getSwapEyes(self):
    pass
  def getTexture(self):
    pass
  def getTextureCard(self):
    pass
  def getTexturePlane(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexposedDraw(self):
    pass
  def getWindowEvent(self):
    pass
  def getWindowHandle(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_active_display_region(self):
    pass
  def get_active_display_regions(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_close_request_event(self):
    pass
  def get_delete_flag(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_engine(self):
    pass
  def get_fb_properties(self):
    pass
  def get_fb_x_size(self):
    pass
  def get_fb_y_size(self):
    pass
  def get_gsg(self):
    pass
  def get_input_device_name(self):
    pass
  def get_input_device_names(self):
    pass
  def get_inverted(self):
    pass
  def get_left_eye_color_mask(self):
    pass
  def get_name(self):
    pass
  def get_num_active_display_regions(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_input_devices(self):
    pass
  def get_one_shot(self):
    pass
  def get_overlay_display_region(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_pointer(self):
    pass
  def get_properties(self):
    pass
  def get_red_blue_stereo(self):
    pass
  def get_ref_count(self):
    pass
  def get_rejected_properties(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_requested_properties(self):
    pass
  def get_right_eye_color_mask(self):
    pass
  def get_rtm_mode(self):
    pass
  def get_sbs_left_dimensions(self):
    pass
  def get_sbs_left_x_size(self):
    pass
  def get_sbs_left_y_size(self):
    pass
  def get_sbs_right_dimensions(self):
    pass
  def get_sbs_right_x_size(self):
    pass
  def get_sbs_right_y_size(self):
    pass
  def get_screenshot(self):
    pass
  def get_side_by_side_stereo(self):
    pass
  def get_sort(self):
    pass
  def get_supports_render_texture(self):
    pass
  def get_swap_eyes(self):
    pass
  def get_texture(self):
    pass
  def get_texture_card(self):
    pass
  def get_texture_plane(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexposed_draw(self):
    pass
  def get_window_event(self):
    pass
  def get_window_handle(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasKeyboard(self):
    pass
  def hasPointer(self):
    pass
  def hasSize(self):
    pass
  def hasTexture(self):
    pass
  def has_keyboard(self):
    pass
  def has_pointer(self):
    pass
  def has_size(self):
    pass
  def has_texture(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isClosed(self):
    pass
  def isExactType(self):
    pass
  def isFullscreen(self):
    pass
  def isNonzeroSize(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_closed(self):
    pass
  def is_exact_type(self):
    pass
  def is_fullscreen(self):
    pass
  def is_nonzero_size(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def is_valid(self):
    pass
  def makeCubeMap(self):
    pass
  def makeDisplayRegion(self):
    pass
  def makeMonoDisplayRegion(self):
    pass
  def make_screenshot_filename():
    pass
  def makeStereoDisplayRegion(self):
    pass
  def makeTextureBuffer(self):
    pass
  def make_cube_map(self):
    pass
  def make_display_region(self):
    pass
  def make_mono_display_region(self):
    pass
  def make_screenshot_filename():
    pass
  def make_stereo_display_region(self):
    pass
  def make_texture_buffer(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def movePointer(self):
    pass
  def move_pointer(self):
    pass
  def ref(self):
    pass
  def removeAllDisplayRegions(self):
    pass
  def removeDisplayRegion(self):
    pass
  def removePythonEventHandler(self):
    pass
  def remove_all_display_regions(self):
    pass
  def remove_display_region(self):
    pass
  def remove_python_event_handler(self):
    pass
  def requestProperties(self):
    pass
  def request_properties(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setChildSort(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setCloseRequestEvent(self):
    pass
  def setInverted(self):
    pass
  def setOneShot(self):
    pass
  def setOverlayDisplayRegion(self):
    pass
  def setPixelZoom(self):
    pass
  def setRedBlueStereo(self):
    pass
  def setSideBySideStereo(self):
    pass
  def setSort(self):
    pass
  def setSwapEyes(self):
    pass
  def setUnexposedDraw(self):
    pass
  def setWindowEvent(self):
    pass
  def set_active(self):
    pass
  def set_child_sort(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_close_request_event(self):
    pass
  def set_inverted(self):
    pass
  def set_one_shot(self):
    pass
  def set_overlay_display_region(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_red_blue_stereo(self):
    pass
  def set_side_by_side_stereo(self):
    pass
  def set_sort(self):
    pass
  def set_swap_eyes(self):
    pass
  def set_unexposed_draw(self):
    pass
  def set_window_event(self):
    pass
  def setupRenderTexture(self):
    pass
  def setup_render_texture(self):
    pass
  def shareDepthBuffer(self):
    pass
  def share_depth_buffer(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def triggerCopy(self):
    pass
  def trigger_copy(self):
    pass
  def unref(self):
    pass
  def unshareDepthBuffer(self):
    pass
  def unshare_depth_buffer(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToGraphicsOutputBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_GraphicsOutputBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class GraphicsWindowInputDevice:
  def __init__(self):
    pass
  def buttonDown(self):
    pass
  def buttonResumeDown(self):
    pass
  def buttonUp(self):
    pass
  def button_down(self):
    pass
  def button_resume_down(self):
    pass
  def button_up(self):
    pass
  def candidate(self):
    pass
  def focusLost(self):
    pass
  def focus_lost(self):
    pass
  def keystroke(self):
    pass
  def setPointer(self):
    pass
  def setPointerInWindow(self):
    pass
  def setPointerOutOfWindow(self):
    pass
  def set_pointer(self):
    pass
  def set_pointer_in_window(self):
    pass
  def set_pointer_out_of_window(self):
    pass
class GraphicsWindowProcCallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getHwnd(self):
    pass
  def getLparam(self):
    pass
  def getMsg(self):
    pass
  def getNumTouches(self):
    pass
  def getTouchInfo(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWparam(self):
    pass
  def get_class_type():
    pass
  def get_hwnd(self):
    pass
  def get_lparam(self):
    pass
  def get_msg(self):
    pass
  def get_num_touches(self):
    pass
  def get_touch_info(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wparam(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isTouchEvent(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_touch_event(self):
    pass
  def output(self):
    pass
  def upcall(self):
    pass
HCCUT = int

HCFREE = int

HCG1 = int

HCSMOOTH = int

HC_CUT = int

HC_FREE = int

HC_G1 = int

HC_SMOOTH = int

class HeightfieldTesselator:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def generate(self):
    pass
  def get_class_type():
    pass
  def getElevation(self):
    pass
  def getName(self):
    pass
  def get_class_type():
    pass
  def get_elevation(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def heightfield(self):
    pass
  def output(self):
    pass
  def setFocalPoint(self):
    pass
  def setHeightfield(self):
    pass
  def setHorizontalScale(self):
    pass
  def setMaxTriangles(self):
    pass
  def setName(self):
    pass
  def setPolyCount(self):
    pass
  def setVerticalScale(self):
    pass
  def setVisibilityRadius(self):
    pass
  def set_focal_point(self):
    pass
  def set_heightfield(self):
    pass
  def set_horizontal_scale(self):
    pass
  def set_max_triangles(self):
    pass
  def set_name(self):
    pass
  def set_poly_count(self):
    pass
  def set_vertical_scale(self):
    pass
  def set_visibility_radius(self):
    pass
class HermiteCurve:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjustPoint(self):
    pass
  def adjustPt(self):
    pass
  def adjustTangent(self):
    pass
  def adjust_draw_mask(self):
    pass
  def adjust_point(self):
    pass
  def adjust_pt(self):
    pass
  def adjust_tangent(self):
    pass
  def appendCv(self):
    pass
  def append_cv(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcLength(self):
    pass
  def calc_length(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToNurbsCurve(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_NurbsCurve(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findLength(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_length(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurveType(self):
    pass
  def getCvIn(self):
    pass
  def getCvName(self):
    pass
  def getCvOut(self):
    pass
  def getCvPoint(self):
    pass
  def getCvTstart(self):
    pass
  def getCvType(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxT(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumCvs(self):
    pass
  def getNumDimensions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPt(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTangent(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve_type(self):
    pass
  def get_cv_in(self):
    pass
  def get_cv_name(self):
    pass
  def get_cv_out(self):
    pass
  def get_cv_point(self):
    pass
  def get_cv_tstart(self):
    pass
  def get_cv_type(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_t(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_cvs(self):
    pass
  def get_num_dimensions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_pt(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tangent(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def insertCv(self):
    pass
  def insert_cv(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeAllCvs(self):
    pass
  def removeChild(self):
    pass
  def removeCv(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_all_cvs(self):
    pass
  def remove_child(self):
    pass
  def remove_cv(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurveType(self):
    pass
  def setCvIn(self):
    pass
  def setCvName(self):
    pass
  def setCvOut(self):
    pass
  def setCvPoint(self):
    pass
  def setCvTstart(self):
    pass
  def setCvType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNumDimensions(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve_type(self):
    pass
  def set_cv_in(self):
    pass
  def set_cv_name(self):
    pass
  def set_cv_out(self):
    pass
  def set_cv_point(self):
    pass
  def set_cv_tstart(self):
    pass
  def set_cv_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_num_dimensions(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeCv(self):
    pass
  def writeEgg(self):
    pass
  def write_cv(self):
    pass
  def write_egg(self):
    pass
class IndexBufferContext:
  def __init__(self):
    pass
  def assign(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToIndexBufferContext(self):
    pass
  def downcastToTextureContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToVertexBufferContext(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_IndexBufferContext(self):
    pass
  def downcast_to_TextureContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_VertexBufferContext(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getActive(self):
    pass
  def get_class_type():
    pass
  def getData(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getModified(self):
    pass
  def getNumFrames(self):
    pass
  def getNumInactiveFrames(self):
    pass
  def getResident(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active(self):
    pass
  def get_class_type():
    pass
  def get_data(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_modified(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_inactive_frames(self):
    pass
  def get_resident(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def setLruSize(self):
    pass
  def set_lru_size(self):
    pass
  def upcastToAdaptiveLruPage(self):
    pass
  def upcastToBufferContext(self):
    pass
  def upcastToSavedContext(self):
    pass
  def upcast_to_AdaptiveLruPage(self):
    pass
  def upcast_to_BufferContext(self):
    pass
  def upcast_to_SavedContext(self):
    pass
  def write(self):
    pass
class InkblotVideo:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSubfileInfo(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_subfile_info(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class InkblotVideoCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def applyToTexture(self):
    pass
  def applyToTextureAlpha(self):
    pass
  def applyToTextureRgb(self):
    pass
  def apply_to_texture(self):
    pass
  def apply_to_texture_alpha(self):
    pass
  def apply_to_texture_rgb(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def fetchBuffer(self):
    pass
  def fetch_buffer(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def setTime(self):
    pass
  def set_time(self):
    pass
  def setupTexture(self):
    pass
  def setup_texture(self):
    pass
  def sizeX(self):
    pass
  def sizeY(self):
    pass
  def size_x(self):
    pass
  def size_y(self):
    pass
  def streaming(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class InternalName:
  def __init__(self):
    pass
  def append(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findAncestor(self):
    pass
  def find_ancestor(self):
    pass
  def getAncestor(self):
    pass
  def get_aspect_ratio():
    pass
  def getBamModified(self):
    pass
  def getBasename(self):
    pass
  def get_binormal():
    pass
  def get_binormal_name():
    pass
  def get_camera():
    pass
  def get_class_type():
    pass
  def get_color():
    pass
  def get_error():
    pass
  def get_index():
    pass
  def get_model():
    pass
  def get_morph():
    pass
  def getName(self):
    pass
  def getNetBasename(self):
    pass
  def get_normal():
    pass
  def getParent(self):
    pass
  def getRefCount(self):
    pass
  def get_root():
    pass
  def get_rotate():
    pass
  def get_size():
    pass
  def get_tangent():
    pass
  def get_tangent_name():
    pass
  def get_texcoord():
    pass
  def get_texcoord_name():
    pass
  def getTop(self):
    pass
  def get_transform_blend():
    pass
  def get_transform_index():
    pass
  def get_transform_weight():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_vertex():
    pass
  def get_view():
    pass
  def get_world():
    pass
  def get_ancestor(self):
    pass
  def get_aspect_ratio():
    pass
  def get_bam_modified(self):
    pass
  def get_basename(self):
    pass
  def get_binormal():
    pass
  def get_binormal_name():
    pass
  def get_camera():
    pass
  def get_class_type():
    pass
  def get_color():
    pass
  def get_error():
    pass
  def get_index():
    pass
  def get_model():
    pass
  def get_morph():
    pass
  def get_name(self):
    pass
  def get_net_basename(self):
    pass
  def get_normal():
    pass
  def get_parent(self):
    pass
  def get_ref_count(self):
    pass
  def get_root():
    pass
  def get_rotate():
    pass
  def get_size():
    pass
  def get_tangent():
    pass
  def get_tangent_name():
    pass
  def get_texcoord():
    pass
  def get_texcoord_name():
    pass
  def get_top(self):
    pass
  def get_transform_blend():
    pass
  def get_transform_index():
    pass
  def get_transform_weight():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_vertex():
    pass
  def get_view():
    pass
  def get_world():
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class InternalNameCollection:
  def __init__(self):
    pass
  def addName(self):
    pass
  def addNamesFrom(self):
    pass
  def add_name(self):
    pass
  def add_names_from(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def getName(self):
    pass
  def getNames(self):
    pass
  def getNumNames(self):
    pass
  def get_name(self):
    pass
  def get_names(self):
    pass
  def get_num_names(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def removeDuplicateNames(self):
    pass
  def removeName(self):
    pass
  def removeNamesFrom(self):
    pass
  def remove_duplicate_names(self):
    pass
  def remove_name(self):
    pass
  def remove_names_from(self):
    pass
  def size(self):
    pass
  def write(self):
    pass
class IntersectionBoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def addComponent(self):
    pass
  def add_component(self):
    pass
  def around(self):
    pass
  def clearComponents(self):
    pass
  def clear_components(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getComponent(self):
    pass
  def getComponents(self):
    pass
  def getNumComponents(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_component(self):
    pass
  def get_components(self):
    pass
  def get_num_components(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class JointVertexTransform:
  def __init__(self):
    pass
  def accumulateMatrix(self):
    pass
  def accumulate_matrix(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def getJoint(self):
    pass
  def getMatrix(self):
    pass
  def getModified(self):
    pass
  def get_next_modified():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def get_joint(self):
    pass
  def get_matrix(self):
    pass
  def get_modified(self):
    pass
  def get_next_modified():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def multMatrix(self):
    pass
  def mult_matrix(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class KeyboardButton:
  def __init__(self):
    pass
  def _del():
    pass
  def alt():
    pass
  def ascii_key():
    pass
  def ascii_key():
    pass
  def backspace():
    pass
  def caps_lock():
    pass
  def caps_lock():
    pass
  def control():
    pass
  def down():
    pass
  def end():
    pass
  def enter():
    pass
  def escape():
    pass
  def f1():
    pass
  def f10():
    pass
  def f11():
    pass
  def f12():
    pass
  def f13():
    pass
  def f14():
    pass
  def f15():
    pass
  def f16():
    pass
  def f2():
    pass
  def f3():
    pass
  def f4():
    pass
  def f5():
    pass
  def f6():
    pass
  def f7():
    pass
  def f8():
    pass
  def f9():
    pass
  def help():
    pass
  def home():
    pass
  def insert():
    pass
  def lalt():
    pass
  def lcontrol():
    pass
  def left():
    pass
  def lshift():
    pass
  def meta():
    pass
  def num_lock():
    pass
  def num_lock():
    pass
  def page_down():
    pass
  def page_up():
    pass
  def page_down():
    pass
  def page_up():
    pass
  def pause():
    pass
  def print_screen():
    pass
  def print_screen():
    pass
  def ralt():
    pass
  def rcontrol():
    pass
  def right():
    pass
  def rshift():
    pass
  def scroll_lock():
    pass
  def scroll_lock():
    pass
  def shift():
    pass
  def shift_lock():
    pass
  def shift_lock():
    pass
  def space():
    pass
  def tab():
    pass
  def up():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LFrustumf:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class LFrustumd:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class LFrustumf:
  def __init__(self):
    pass
  def makeOrtho(self):
    pass
  def makeOrtho2D(self):
    pass
  def makePerspective(self):
    pass
  def makePerspectiveHfov(self):
    pass
  def makePerspectiveVfov(self):
    pass
  def make_ortho(self):
    pass
  def make_ortho_2D(self):
    pass
  def make_perspective(self):
    pass
  def make_perspective_hfov(self):
    pass
  def make_perspective_vfov(self):
    pass
class LMatrix3f:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix3d:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix3f:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix4f:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
class LMatrix4d:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
class LMatrix4f:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
LNTFade = int

LNTPop = int

LNT_fade = int

LNT_pop = int

class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LODNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def addSwitch(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def add_switch(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearForceSwitch(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearSwitches(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_force_switch(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_switches(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceSwitch(self):
    pass
  def force_switch(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCenter(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getHighestSwitch(self):
    pass
  def getIn(self):
    pass
  def getIns(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLodScale(self):
    pass
  def getLowestSwitch(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumSwitches(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOut(self):
    pass
  def getOuts(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_center(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_highest_switch(self):
    pass
  def get_in(self):
    pass
  def get_ins(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lod_scale(self):
    pass
  def get_lowest_switch(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_switches(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_out(self):
    pass
  def get_outs(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def hideAllSwitches(self):
    pass
  def hideSwitch(self):
    pass
  def hide_all_switches(self):
    pass
  def hide_switch(self):
    pass
  def isAmbientLight(self):
    pass
  def isAnyShown(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_any_shown(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_default_lod():
    pass
  def make_copy(self):
    pass
  def make_default_lod():
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLodScale(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setSwitch(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lod_scale(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_switch(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showAllSwitches(self):
    pass
  def showSwitch(self):
    pass
  def show_all_switches(self):
    pass
  def show_switch(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def verifyChildBounds(self):
    pass
  def verify_child_bounds(self):
    pass
  def write(self):
    pass
class LOrientationf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LOrientationd:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LOrientationf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LParabolaf:
  def __init__(self):
    pass
  def assign(self):
    pass
  def calcPoint(self):
    pass
  def calc_point(self):
    pass
  def getA(self):
    pass
  def getB(self):
    pass
  def getC(self):
    pass
  def get_a(self):
    pass
  def get_b(self):
    pass
  def get_c(self):
    pass
  def output(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
class LParabolad:
  def __init__(self):
    pass
  def assign(self):
    pass
  def calcPoint(self):
    pass
  def calc_point(self):
    pass
  def getA(self):
    pass
  def getB(self):
    pass
  def getC(self):
    pass
  def get_a(self):
    pass
  def get_b(self):
    pass
  def get_c(self):
    pass
  def output(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
class LParabolaf:
  def __init__(self):
    pass
  def assign(self):
    pass
  def calcPoint(self):
    pass
  def calc_point(self):
    pass
  def getA(self):
    pass
  def getB(self):
    pass
  def getC(self):
    pass
  def get_a(self):
    pass
  def get_b(self):
    pass
  def get_c(self):
    pass
  def output(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
class LPlanef:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPlaned:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPlanef:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LQuaternionf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LQuaterniond:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LQuaternionf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LRotationf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LRotationd:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LRotationf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class Lens:
  def __init__(self):
    pass
  FCAspectRatio = int

  FCCameraPlane = int

  FCKeystone = int

  FCOffAxis = int

  FCRoll = int

  FCShear = int

  FC_aspect_ratio = int

  FC_camera_plane = int

  FC_keystone = int

  FC_off_axis = int

  FC_roll = int

  FC_shear = int

  SCLeft = int

  SCMono = int

  SCRight = int

  SCStereo = int

  SC_left = int

  SC_mono = int

  SC_right = int

  SC_stereo = int

  def clear(self):
    pass
  def clearKeystone(self):
    pass
  def clearViewMat(self):
    pass
  def clear_keystone(self):
    pass
  def clear_view_mat(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def extrude(self):
    pass
  def extrudeVec(self):
    pass
  def extrude_vec(self):
    pass
  def getAspectRatio(self):
    pass
  def getBamModified(self):
    pass
  def getChangeEvent(self):
    pass
  def get_class_type():
    pass
  def getConvergenceDistance(self):
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def getFar(self):
    pass
  def getFilmMat(self):
    pass
  def getFilmMatInv(self):
    pass
  def getFilmOffset(self):
    pass
  def getFilmSize(self):
    pass
  def getFocalLength(self):
    pass
  def getFov(self):
    pass
  def getHfov(self):
    pass
  def getInterocularDistance(self):
    pass
  def getKeystone(self):
    pass
  def getLastChange(self):
    pass
  def getLensMat(self):
    pass
  def getLensMatInv(self):
    pass
  def getMinFov(self):
    pass
  def getNear(self):
    pass
  def getNodalPoint(self):
    pass
  def getProjectionMat(self):
    pass
  def getProjectionMatInv(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUpVector(self):
    pass
  def getVfov(self):
    pass
  def getViewHpr(self):
    pass
  def getViewMat(self):
    pass
  def getViewVector(self):
    pass
  def get_aspect_ratio(self):
    pass
  def get_bam_modified(self):
    pass
  def get_change_event(self):
    pass
  def get_class_type():
    pass
  def get_convergence_distance(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def get_far(self):
    pass
  def get_film_mat(self):
    pass
  def get_film_mat_inv(self):
    pass
  def get_film_offset(self):
    pass
  def get_film_size(self):
    pass
  def get_focal_length(self):
    pass
  def get_fov(self):
    pass
  def get_hfov(self):
    pass
  def get_interocular_distance(self):
    pass
  def get_keystone(self):
    pass
  def get_last_change(self):
    pass
  def get_lens_mat(self):
    pass
  def get_lens_mat_inv(self):
    pass
  def get_min_fov(self):
    pass
  def get_near(self):
    pass
  def get_nodal_point(self):
    pass
  def get_projection_mat(self):
    pass
  def get_projection_mat_inv(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_up_vector(self):
    pass
  def get_vfov(self):
    pass
  def get_view_hpr(self):
    pass
  def get_view_mat(self):
    pass
  def get_view_vector(self):
    pass
  def isExactType(self):
    pass
  def isLinear(self):
    pass
  def isOfType(self):
    pass
  def isOrthographic(self):
    pass
  def isPerspective(self):
    pass
  def is_exact_type(self):
    pass
  def is_linear(self):
    pass
  def is_of_type(self):
    pass
  def is_orthographic(self):
    pass
  def is_perspective(self):
    pass
  def makeBounds(self):
    pass
  def makeCopy(self):
    pass
  def makeGeometry(self):
    pass
  def make_bounds(self):
    pass
  def make_copy(self):
    pass
  def make_geometry(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def recomputeAll(self):
    pass
  def recompute_all(self):
    pass
  def ref(self):
    pass
  def setAspectRatio(self):
    pass
  def setChangeEvent(self):
    pass
  def setConvergenceDistance(self):
    pass
  def setCoordinateSystem(self):
    pass
  def setFar(self):
    pass
  def setFilmOffset(self):
    pass
  def setFilmSize(self):
    pass
  def setFocalLength(self):
    pass
  def setFov(self):
    pass
  def setFrustumFromCorners(self):
    pass
  def setInterocularDistance(self):
    pass
  def setKeystone(self):
    pass
  def setMinFov(self):
    pass
  def setNear(self):
    pass
  def setNearFar(self):
    pass
  def setViewHpr(self):
    pass
  def setViewMat(self):
    pass
  def setViewVector(self):
    pass
  def set_aspect_ratio(self):
    pass
  def set_change_event(self):
    pass
  def set_convergence_distance(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_far(self):
    pass
  def set_film_offset(self):
    pass
  def set_film_size(self):
    pass
  def set_focal_length(self):
    pass
  def set_fov(self):
    pass
  def set_frustum_from_corners(self):
    pass
  def set_interocular_distance(self):
    pass
  def set_keystone(self):
    pass
  def set_min_fov(self):
    pass
  def set_near(self):
    pass
  def set_near_far(self):
    pass
  def set_view_hpr(self):
    pass
  def set_view_mat(self):
    pass
  def set_view_vector(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class LensNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class Light:
  def __init__(self):
    pass
  def asNode(self):
    pass
  def as_node(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getPriority(self):
    pass
  def getRefCount(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_priority(self):
    pass
  def get_ref_count(self):
    pass
  def isAmbientLight(self):
    pass
  def is_ambient_light(self):
    pass
  def ref(self):
    pass
  def setColor(self):
    pass
  def setPriority(self):
    pass
  def set_color(self):
    pass
  def set_priority(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
class LightAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  OAdd = int

  ORemove = int

  OSet = int

  O_add = int

  O_remove = int

  O_set = int

  def addLight(self):
    pass
  def addOffLight(self):
    pass
  def addOnLight(self):
    pass
  def add_light(self):
    pass
  def add_off_light(self):
    pass
  def add_on_light(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def filterToMax(self):
    pass
  def filter_to_max(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getLight(self):
    pass
  def getMostImportantLight(self):
    pass
  def get_num_attribs():
    pass
  def getNumLights(self):
    pass
  def getNumOffLights(self):
    pass
  def getNumOnLights(self):
    pass
  def getOffLight(self):
    pass
  def getOffLights(self):
    pass
  def getOnLight(self):
    pass
  def getOnLights(self):
    pass
  def getOperation(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_light(self):
    pass
  def get_most_important_light(self):
    pass
  def get_num_attribs():
    pass
  def get_num_lights(self):
    pass
  def get_num_off_lights(self):
    pass
  def get_num_on_lights(self):
    pass
  def get_off_light(self):
    pass
  def get_off_lights(self):
    pass
  def get_on_light(self):
    pass
  def get_on_lights(self):
    pass
  def get_operation(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasAllOff(self):
    pass
  def hasLight(self):
    pass
  def hasOffLight(self):
    pass
  def hasOnLight(self):
    pass
  def has_all_off(self):
    pass
  def has_light(self):
    pass
  def has_off_light(self):
    pass
  def has_on_light(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeLight(self):
    pass
  def removeOffLight(self):
    pass
  def removeOnLight(self):
    pass
  def remove_light(self):
    pass
  def remove_off_light(self):
    pass
  def remove_on_light(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class LightLensNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def cleanupAuxSceneData(self):
    pass
  def cleanup_aux_scene_data(self):
    pass
  def clearAttrib(self):
    pass
  def clearAuxSceneData(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTagState(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_aux_scene_data(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_tag_state(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getAuxSceneData(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCameraMask(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInitialState(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getLodCenter(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTagState(self):
    pass
  def getTagStateKey(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_aux_scene_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_camera_mask(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_initial_state(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_lod_center(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tag_state(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTagState(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tag_state(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isActive(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isShadowCaster(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_active(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_shadow_caster(self):
    pass
  def is_under_scene_root(self):
    pass
  def listAuxSceneData(self):
    pass
  def listTags(self):
    pass
  def list_aux_scene_data(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setAuxSceneData(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCameraMask(self):
    pass
  def setColor(self):
    pass
  def setCullBounds(self):
    pass
  def setCullCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setInitialState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setLodCenter(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setScene(self):
    pass
  def setShadowCaster(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTagState(self):
    pass
  def setTagStateKey(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_aux_scene_data(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_camera_mask(self):
    pass
  def set_color(self):
    pass
  def set_cull_bounds(self):
    pass
  def set_cull_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_initial_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_lod_center(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_scene(self):
    pass
  def set_shadow_caster(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tag_state(self):
    pass
  def set_tag_state_key(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToCamera(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Camera(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class LightMutex:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
class LightMutexDirect:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
class LightNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setColor(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_color(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class LightRampAttrib:
  def __init__(self):
    pass
  LRTDefault = int

  LRTDoubleThreshold = int

  LRTHdr0 = int

  LRTHdr1 = int

  LRTHdr2 = int

  LRTIdentity = int

  LRTSingleThreshold = int

  LRT_default = int

  LRT_double_threshold = int

  LRT_hdr0 = int

  LRT_hdr1 = int

  LRT_hdr2 = int

  LRT_identity = int

  LRT_single_threshold = int

  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getLevel(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getThreshold(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_level(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_threshold(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make_default():
    pass
  def make_double_threshold():
    pass
  def make_hdr0():
    pass
  def make_hdr1():
    pass
  def make_hdr2():
    pass
  def make_identity():
    pass
  def make_single_threshold():
    pass
  def make_default():
    pass
  def make_double_threshold():
    pass
  def make_hdr0():
    pass
  def make_hdr1():
    pass
  def make_hdr2():
    pass
  def make_identity():
    pass
  def make_single_threshold():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class LightReMutex:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def elevateLock(self):
    pass
  def elevate_lock(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
class LightReMutexDirect:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def elevateLock(self):
    pass
  def elevate_lock(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
class LineSegs:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def create(self):
    pass
  def drawTo(self):
    pass
  def draw_to(self):
    pass
  def get_class_type():
    pass
  def getCurrentPosition(self):
    pass
  def getName(self):
    pass
  def getNumVertices(self):
    pass
  def getVertex(self):
    pass
  def getVertexColor(self):
    pass
  def getVertexColors(self):
    pass
  def getVertices(self):
    pass
  def get_class_type():
    pass
  def get_current_position(self):
    pass
  def get_name(self):
    pass
  def get_num_vertices(self):
    pass
  def get_vertex(self):
    pass
  def get_vertex_color(self):
    pass
  def get_vertex_colors(self):
    pass
  def get_vertices(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isEmpty(self):
    pass
  def is_empty(self):
    pass
  def moveTo(self):
    pass
  def move_to(self):
    pass
  def output(self):
    pass
  def reset(self):
    pass
  def setColor(self):
    pass
  def setName(self):
    pass
  def setThickness(self):
    pass
  def setVertex(self):
    pass
  def setVertexColor(self):
    pass
  def set_color(self):
    pass
  def set_name(self):
    pass
  def set_thickness(self):
    pass
  def set_vertex(self):
    pass
  def set_vertex_color(self):
    pass
class LineStream:
  def __init__(self):
    pass
  Beg = int

  Cur = int

  End = int

  def bad(self):
    pass
  beg = int

  def clear(self):
    pass
  cur = int

  def downcastToIostream(self):
    pass
  def downcast_to_iostream(self):
    pass
  end = int

  def eof(self):
    pass
  def fail(self):
    pass
  def flush(self):
    pass
  def getLine(self):
    pass
  def get_line(self):
    pass
  def good(self):
    pass
  def hasNewline(self):
    pass
  def has_newline(self):
    pass
  def isTextAvailable(self):
    pass
  def is_text_available(self):
    pass
  def put(self):
    pass
  def seekp(self):
    pass
  def tellp(self):
    pass
  def upcastToIos(self):
    pass
  def upcast_to_ios(self):
    pass
class Loader:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def get_global_ptr():
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskManager(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_global_ptr():
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_manager(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def loadAsync(self):
    pass
  def loadBamStream(self):
    pass
  def loadSync(self):
    pass
  def load_async(self):
    pass
  def load_bam_stream(self):
    pass
  def load_sync(self):
    pass
  def makeAsyncRequest(self):
    pass
  def make_async_request(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setName(self):
    pass
  def setTaskChain(self):
    pass
  def setTaskManager(self):
    pass
  def set_name(self):
    pass
  def set_task_chain(self):
    pass
  def set_task_manager(self):
    pass
  def stopThreads(self):
    pass
  def stop_threads(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class LoaderFileType:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAdditionalExtensions(self):
    pass
  def getAllowDiskCache(self):
    pass
  def getAllowRamCache(self):
    pass
  def get_class_type():
    pass
  def getExtension(self):
    pass
  def getName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_additional_extensions(self):
    pass
  def get_allow_disk_cache(self):
    pass
  def get_allow_ram_cache(self):
    pass
  def get_class_type():
    pass
  def get_extension(self):
    pass
  def get_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def supportsCompressed(self):
    pass
  def supports_compressed(self):
    pass
class LoaderFileTypeRegistry:
  def __init__(self):
    pass
  def get_global_ptr():
    pass
  def getNumTypes(self):
    pass
  def getType(self):
    pass
  def getTypeFromExtension(self):
    pass
  def getTypes(self):
    pass
  def get_global_ptr():
    pass
  def get_num_types(self):
    pass
  def get_type(self):
    pass
  def get_type_from_extension(self):
    pass
  def get_types(self):
    pass
  def write(self):
    pass
class LoaderOptions:
  def __init__(self):
    pass
  LFAllowInstance = int

  LFCacheOnly = int

  LFConvertAnim = int

  LFConvertChannels = int

  LFConvertSkeleton = int

  LFNoCache = int

  LFNoDiskCache = int

  LFNoRamCache = int

  LFReportErrors = int

  LFSearch = int

  LF_allow_instance = int

  LF_cache_only = int

  LF_convert_anim = int

  LF_convert_channels = int

  LF_convert_skeleton = int

  LF_no_cache = int

  LF_no_disk_cache = int

  LF_no_ram_cache = int

  LF_report_errors = int

  LF_search = int

  TFAllow1d = int

  TFGenerateMipmaps = int

  TFMultiview = int

  TFPreload = int

  TFPreloadSimple = int

  TF_allow_1d = int

  TF_generate_mipmaps = int

  TF_multiview = int

  TF_preload = int

  TF_preload_simple = int

  def assign(self):
    pass
  def getAutoTextureScale(self):
    pass
  def getFlags(self):
    pass
  def getTextureFlags(self):
    pass
  def getTextureNumViews(self):
    pass
  def get_auto_texture_scale(self):
    pass
  def get_flags(self):
    pass
  def get_texture_flags(self):
    pass
  def get_texture_num_views(self):
    pass
  def output(self):
    pass
  def setAutoTextureScale(self):
    pass
  def setFlags(self):
    pass
  def setTextureFlags(self):
    pass
  def setTextureNumViews(self):
    pass
  def set_auto_texture_scale(self):
    pass
  def set_flags(self):
    pass
  def set_texture_flags(self):
    pass
  def set_texture_num_views(self):
    pass
class MainThread:
  def __init__(self):
    pass
  def assign(self):
    pass
  def bind_thread():
    pass
  def bind_thread():
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def consider_yield():
    pass
  def consider_yield():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def force_yield():
    pass
  def force_yield():
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def getCurrentTask(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def getName(self):
    pass
  def getPipelineStage(self):
    pass
  def getPstatsIndex(self):
    pass
  def getPythonData(self):
    pass
  def getRefCount(self):
    pass
  def getSyncName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUniqueId(self):
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def get_current_task(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def get_name(self):
    pass
  def get_pipeline_stage(self):
    pass
  def get_pstats_index(self):
    pass
  def get_python_data(self):
    pass
  def get_ref_count(self):
    pass
  def get_sync_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique_id(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isJoinable(self):
    pass
  def isOfType(self):
    pass
  def is_simple_threads():
    pass
  def isStarted(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def is_exact_type(self):
    pass
  def is_joinable(self):
    pass
  def is_of_type(self):
    pass
  def is_simple_threads():
    pass
  def is_started(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def join(self):
    pass
  def output(self):
    pass
  def outputBlocker(self):
    pass
  def output_blocker(self):
    pass
  def preempt(self):
    pass
  def prepare_for_exit():
    pass
  def prepare_for_exit():
    pass
  def ref(self):
    pass
  def setMinPipelineStage(self):
    pass
  def setName(self):
    pass
  def setPipelineStage(self):
    pass
  def setPythonData(self):
    pass
  def set_min_pipeline_stage(self):
    pass
  def set_name(self):
    pass
  def set_pipeline_stage(self):
    pass
  def set_python_data(self):
    pass
  def sleep():
    pass
  def start(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write_status():
    pass
  def write_status():
    pass
class LMatrix3f:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix3d:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix3f:
  def __init__(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def determinant(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol2(self):
    pass
  def getCol2s(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow2(self):
    pass
  def getRow2s(self):
    pass
  def getRows(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col2(self):
    pass
  def get_col2s(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row2(self):
    pass
  def get_row2s(self):
    pass
  def get_rows(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invertTransposeFrom(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def invert_transpose_from(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
class LMatrix4f:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
class LMatrix4d:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
class LMatrix4f:
  def __init__(self):
    pass
  def accumulate(self):
    pass
  def addHash(self):
    pass
  def add_hash(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def convert_mat():
    pass
  def convert_mat():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getCol(self):
    pass
  def getCol3(self):
    pass
  def getCols(self):
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getRow(self):
    pass
  def getRow3(self):
    pass
  def getRow3s(self):
    pass
  def getRows(self):
    pass
  def getUpper3(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_col(self):
    pass
  def get_col3(self):
    pass
  def get_cols(self):
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_row(self):
    pass
  def get_row3(self):
    pass
  def get_row3s(self):
    pass
  def get_rows(self):
    pass
  def get_upper_3(self):
    pass
  def ident_mat():
    pass
  def ident_mat():
    pass
  def invertAffineFrom(self):
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_affine_from(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def ones_mat():
    pass
  def ones_mat():
    pass
  def output(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def rotate_mat():
    pass
  def rotate_mat_normaxis():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def scale_mat():
    pass
  def scale_shear_mat():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setCol(self):
    pass
  def setRotateMat(self):
    pass
  def setRotateMatNormaxis(self):
    pass
  def setRow(self):
    pass
  def setScaleMat(self):
    pass
  def setScaleShearMat(self):
    pass
  def setShearMat(self):
    pass
  def setTranslateMat(self):
    pass
  def setUpper3(self):
    pass
  def set_cell(self):
    pass
  def set_col(self):
    pass
  def set_rotate_mat(self):
    pass
  def set_rotate_mat_normaxis(self):
    pass
  def set_row(self):
    pass
  def set_scale_mat(self):
    pass
  def set_scale_shear_mat(self):
    pass
  def set_shear_mat(self):
    pass
  def set_translate_mat(self):
    pass
  def set_upper_3(self):
    pass
  def shear_mat():
    pass
  def shear_mat():
    pass
  def size():
    pass
  def translate_mat():
    pass
  def translate_mat():
    pass
  def transposeFrom(self):
    pass
  def transposeInPlace(self):
    pass
  def transpose_from(self):
    pass
  def transpose_in_place(self):
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def xformInPlace(self):
    pass
  def xformPoint(self):
    pass
  def xformPointInPlace(self):
    pass
  def xformVec(self):
    pass
  def xformVecGeneral(self):
    pass
  def xformVecGeneralInPlace(self):
    pass
  def xformVecInPlace(self):
    pass
  def xform_in_place(self):
    pass
  def xform_point(self):
    pass
  def xform_point_in_place(self):
    pass
  def xform_vec(self):
    pass
  def xform_vec_general(self):
    pass
  def xform_vec_general_in_place(self):
    pass
  def xform_vec_in_place(self):
    pass
  def y_to_z_up_mat():
    pass
  def y_to_z_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def z_to_y_up_mat():
    pass
  def zeros_mat():
    pass
  def zeros_mat():
    pass
class Material:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearAmbient(self):
    pass
  def clearDiffuse(self):
    pass
  def clearEmission(self):
    pass
  def clearName(self):
    pass
  def clearSpecular(self):
    pass
  def clear_ambient(self):
    pass
  def clear_diffuse(self):
    pass
  def clear_emission(self):
    pass
  def clear_name(self):
    pass
  def clear_specular(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def eq(self):
    pass
  def getAmbient(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_default():
    pass
  def getDiffuse(self):
    pass
  def getEmission(self):
    pass
  def getLocal(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getShininess(self):
    pass
  def getSpecular(self):
    pass
  def getTwoside(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_ambient(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_default():
    pass
  def get_diffuse(self):
    pass
  def get_emission(self):
    pass
  def get_local(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_shininess(self):
    pass
  def get_specular(self):
    pass
  def get_twoside(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasAmbient(self):
    pass
  def hasDiffuse(self):
    pass
  def hasEmission(self):
    pass
  def hasName(self):
    pass
  def hasSpecular(self):
    pass
  def has_ambient(self):
    pass
  def has_diffuse(self):
    pass
  def has_emission(self):
    pass
  def has_name(self):
    pass
  def has_specular(self):
    pass
  def isAttribLocked(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_attrib_locked(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def lessThan(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setAmbient(self):
    pass
  def setAttribLock(self):
    pass
  def setDiffuse(self):
    pass
  def setEmission(self):
    pass
  def setLocal(self):
    pass
  def setName(self):
    pass
  def setShininess(self):
    pass
  def setSpecular(self):
    pass
  def setTwoside(self):
    pass
  def set_ambient(self):
    pass
  def set_attrib_lock(self):
    pass
  def set_diffuse(self):
    pass
  def set_emission(self):
    pass
  def set_local(self):
    pass
  def set_name(self):
    pass
  def set_shininess(self):
    pass
  def set_specular(self):
    pass
  def set_twoside(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class MaterialAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMaterial(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_material(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class MaterialCollection:
  def __init__(self):
    pass
  def addMaterial(self):
    pass
  def addMaterialsFrom(self):
    pass
  def add_material(self):
    pass
  def add_materials_from(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def findMaterial(self):
    pass
  def find_material(self):
    pass
  def getMaterial(self):
    pass
  def getNumMaterials(self):
    pass
  def get_material(self):
    pass
  def get_num_materials(self):
    pass
  def hasMaterial(self):
    pass
  def has_material(self):
    pass
  def output(self):
    pass
  def removeDuplicateMaterials(self):
    pass
  def removeMaterial(self):
    pass
  def removeMaterialsFrom(self):
    pass
  def remove_duplicate_materials(self):
    pass
  def remove_material(self):
    pass
  def remove_materials_from(self):
    pass
  def size(self):
    pass
  def write(self):
    pass
class MaterialPool:
  def __init__(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def get_material():
    pass
  def get_material():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def release_all_materials():
    pass
  def release_material():
    pass
  def release_all_materials():
    pass
  def release_material():
    pass
  def write():
    pass
class MathNumbers:
  def __init__(self):
    pass
class MatrixLens:
  def __init__(self):
    pass
  FCAspectRatio = int

  FCCameraPlane = int

  FCKeystone = int

  FCOffAxis = int

  FCRoll = int

  FCShear = int

  FC_aspect_ratio = int

  FC_camera_plane = int

  FC_keystone = int

  FC_off_axis = int

  FC_roll = int

  FC_shear = int

  SCLeft = int

  SCMono = int

  SCRight = int

  SCStereo = int

  SC_left = int

  SC_mono = int

  SC_right = int

  SC_stereo = int

  def clear(self):
    pass
  def clearKeystone(self):
    pass
  def clearLeftEyeMat(self):
    pass
  def clearRightEyeMat(self):
    pass
  def clearViewMat(self):
    pass
  def clear_keystone(self):
    pass
  def clear_left_eye_mat(self):
    pass
  def clear_right_eye_mat(self):
    pass
  def clear_view_mat(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def extrude(self):
    pass
  def extrudeVec(self):
    pass
  def extrude_vec(self):
    pass
  def getAspectRatio(self):
    pass
  def getBamModified(self):
    pass
  def getChangeEvent(self):
    pass
  def get_class_type():
    pass
  def getConvergenceDistance(self):
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def getFar(self):
    pass
  def getFilmMat(self):
    pass
  def getFilmMatInv(self):
    pass
  def getFilmOffset(self):
    pass
  def getFilmSize(self):
    pass
  def getFocalLength(self):
    pass
  def getFov(self):
    pass
  def getHfov(self):
    pass
  def getInterocularDistance(self):
    pass
  def getKeystone(self):
    pass
  def getLastChange(self):
    pass
  def getLeftEyeMat(self):
    pass
  def getLensMat(self):
    pass
  def getLensMatInv(self):
    pass
  def getMinFov(self):
    pass
  def getNear(self):
    pass
  def getNodalPoint(self):
    pass
  def getProjectionMat(self):
    pass
  def getProjectionMatInv(self):
    pass
  def getRefCount(self):
    pass
  def getRightEyeMat(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUpVector(self):
    pass
  def getUserMat(self):
    pass
  def getVfov(self):
    pass
  def getViewHpr(self):
    pass
  def getViewMat(self):
    pass
  def getViewVector(self):
    pass
  def get_aspect_ratio(self):
    pass
  def get_bam_modified(self):
    pass
  def get_change_event(self):
    pass
  def get_class_type():
    pass
  def get_convergence_distance(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def get_far(self):
    pass
  def get_film_mat(self):
    pass
  def get_film_mat_inv(self):
    pass
  def get_film_offset(self):
    pass
  def get_film_size(self):
    pass
  def get_focal_length(self):
    pass
  def get_fov(self):
    pass
  def get_hfov(self):
    pass
  def get_interocular_distance(self):
    pass
  def get_keystone(self):
    pass
  def get_last_change(self):
    pass
  def get_left_eye_mat(self):
    pass
  def get_lens_mat(self):
    pass
  def get_lens_mat_inv(self):
    pass
  def get_min_fov(self):
    pass
  def get_near(self):
    pass
  def get_nodal_point(self):
    pass
  def get_projection_mat(self):
    pass
  def get_projection_mat_inv(self):
    pass
  def get_ref_count(self):
    pass
  def get_right_eye_mat(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_up_vector(self):
    pass
  def get_user_mat(self):
    pass
  def get_vfov(self):
    pass
  def get_view_hpr(self):
    pass
  def get_view_mat(self):
    pass
  def get_view_vector(self):
    pass
  def hasLeftEyeMat(self):
    pass
  def hasRightEyeMat(self):
    pass
  def has_left_eye_mat(self):
    pass
  def has_right_eye_mat(self):
    pass
  def isExactType(self):
    pass
  def isLinear(self):
    pass
  def isOfType(self):
    pass
  def isOrthographic(self):
    pass
  def isPerspective(self):
    pass
  def is_exact_type(self):
    pass
  def is_linear(self):
    pass
  def is_of_type(self):
    pass
  def is_orthographic(self):
    pass
  def is_perspective(self):
    pass
  def makeBounds(self):
    pass
  def makeCopy(self):
    pass
  def makeGeometry(self):
    pass
  def make_bounds(self):
    pass
  def make_copy(self):
    pass
  def make_geometry(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def recomputeAll(self):
    pass
  def recompute_all(self):
    pass
  def ref(self):
    pass
  def setAspectRatio(self):
    pass
  def setChangeEvent(self):
    pass
  def setConvergenceDistance(self):
    pass
  def setCoordinateSystem(self):
    pass
  def setFar(self):
    pass
  def setFilmOffset(self):
    pass
  def setFilmSize(self):
    pass
  def setFocalLength(self):
    pass
  def setFov(self):
    pass
  def setFrustumFromCorners(self):
    pass
  def setInterocularDistance(self):
    pass
  def setKeystone(self):
    pass
  def setLeftEyeMat(self):
    pass
  def setMinFov(self):
    pass
  def setNear(self):
    pass
  def setNearFar(self):
    pass
  def setRightEyeMat(self):
    pass
  def setUserMat(self):
    pass
  def setViewHpr(self):
    pass
  def setViewMat(self):
    pass
  def setViewVector(self):
    pass
  def set_aspect_ratio(self):
    pass
  def set_change_event(self):
    pass
  def set_convergence_distance(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_far(self):
    pass
  def set_film_offset(self):
    pass
  def set_film_size(self):
    pass
  def set_focal_length(self):
    pass
  def set_fov(self):
    pass
  def set_frustum_from_corners(self):
    pass
  def set_interocular_distance(self):
    pass
  def set_keystone(self):
    pass
  def set_left_eye_mat(self):
    pass
  def set_min_fov(self):
    pass
  def set_near(self):
    pass
  def set_near_far(self):
    pass
  def set_right_eye_mat(self):
    pass
  def set_user_mat(self):
    pass
  def set_view_hpr(self):
    pass
  def set_view_mat(self):
    pass
  def set_view_vector(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class Mersenne:
  def __init__(self):
    pass
  def getUint31(self):
    pass
  def get_uint31(self):
    pass
class MeshDrawer:
  def __init__(self):
    pass
  def begin(self):
    pass
  def billboard(self):
    pass
  def blendedParticle(self):
    pass
  def blended_particle(self):
    pass
  def crossSegment(self):
    pass
  def cross_segment(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def end(self):
    pass
  def explosion(self):
    pass
  def geometry(self):
    pass
  def getBudget(self):
    pass
  def get_class_type():
    pass
  def getRoot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_budget(self):
    pass
  def get_class_type():
    pass
  def get_root(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def linkSegment(self):
    pass
  def linkSegmentEnd(self):
    pass
  def link_segment(self):
    pass
  def link_segment_end(self):
    pass
  def particle(self):
    pass
  def segment(self):
    pass
  def setBudget(self):
    pass
  def set_budget(self):
    pass
  def stream(self):
    pass
  def tri(self):
    pass
  def unevenSegment(self):
    pass
  def uneven_segment(self):
    pass
class MeshDrawer2D:
  def __init__(self):
    pass
  def begin(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def end(self):
    pass
  def getBudget(self):
    pass
  def get_class_type():
    pass
  def getRoot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_budget(self):
    pass
  def get_class_type():
    pass
  def get_root(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def quadRaw(self):
    pass
  def quad_raw(self):
    pass
  def rectangle(self):
    pass
  def rectangleBorder(self):
    pass
  def rectangleBorderTiled(self):
    pass
  def rectangleRaw(self):
    pass
  def rectangleTiled(self):
    pass
  def rectangle_border(self):
    pass
  def rectangle_border_tiled(self):
    pass
  def rectangle_raw(self):
    pass
  def rectangle_tiled(self):
    pass
  def setBudget(self):
    pass
  def setClip(self):
    pass
  def set_budget(self):
    pass
  def set_clip(self):
    pass
class MicrophoneAudio:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def getChannels(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def get_num_options():
    pass
  def get_option():
    pass
  def getOptions():
    pass
  def getRate(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_channels(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_num_options():
    pass
  def get_option():
    pass
  def get_options():
    pass
  def get_rate(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class ModelFlattenRequest:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getModel(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getOrig(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_model(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_orig(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isReady(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_ready(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class ModelLoadRequest:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getFilename(self):
    pass
  def getLoader(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getModel(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getOptions(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_filename(self):
    pass
  def get_loader(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_model(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_options(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isReady(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_ready(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class ModelNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  PTDropNode = int

  PTLocal = int

  PTNet = int

  PTNoTouch = int

  PTNone = int

  PT_drop_node = int

  PT_local = int

  PT_net = int

  PT_no_touch = int

  PT_none = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserveAttributes(self):
    pass
  def getPreserveTransform(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserve_attributes(self):
    pass
  def get_preserve_transform(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserveAttributes(self):
    pass
  def setPreserveTransform(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setTransformLimit(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserve_attributes(self):
    pass
  def set_preserve_transform(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_transform_limit(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ModelPool:
  def __init__(self):
    pass
  def add_model():
    pass
  def add_model():
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def has_model():
    pass
  def has_model():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def load_model():
    pass
  def load_model():
    pass
  def release_all_models():
    pass
  def release_model():
    pass
  def release_all_models():
    pass
  def release_model():
    pass
  def verify_model():
    pass
  def verify_model():
    pass
  def write():
    pass
class ModelRoot:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  PTDropNode = int

  PTLocal = int

  PTNet = int

  PTNoTouch = int

  PTNone = int

  PT_drop_node = int

  PT_local = int

  PT_net = int

  PT_no_touch = int

  PT_none = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getFullpath(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getModelRefCount(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserveAttributes(self):
    pass
  def getPreserveTransform(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReference(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_fullpath(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_model_ref_count(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserve_attributes(self):
    pass
  def get_preserve_transform(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_reference(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFullpath(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserveAttributes(self):
    pass
  def setPreserveTransform(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setReference(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setTransformLimit(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_fullpath(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserve_attributes(self):
    pass
  def set_preserve_transform(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_reference(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_transform_limit(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ModifierButtons:
  def __init__(self):
    pass
  def addButton(self):
    pass
  def add_button(self):
    pass
  def allButtonsUp(self):
    pass
  def all_buttons_up(self):
    pass
  def assign(self):
    pass
  def buttonDown(self):
    pass
  def buttonUp(self):
    pass
  def button_down(self):
    pass
  def button_up(self):
    pass
  def eq(self):
    pass
  def getButton(self):
    pass
  def getButtons(self):
    pass
  def getNumButtons(self):
    pass
  def getPrefix(self):
    pass
  def get_button(self):
    pass
  def get_buttons(self):
    pass
  def get_num_buttons(self):
    pass
  def get_prefix(self):
    pass
  def hasButton(self):
    pass
  def has_button(self):
    pass
  def isAnyDown(self):
    pass
  def isDown(self):
    pass
  def is_any_down(self):
    pass
  def is_down(self):
    pass
  def lessThan(self):
    pass
  def matches(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def removeButton(self):
    pass
  def remove_button(self):
    pass
  def setButtonList(self):
    pass
  def set_button_list(self):
    pass
  def write(self):
    pass
class MouseAndKeyboard:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getSourceDevice(self):
    pass
  def getSourceWindow(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_source_device(self):
    pass
  def get_source_window(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSource(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_source(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class MouseButton:
  def __init__(self):
    pass
  def button():
    pass
  def five():
    pass
  def four():
    pass
  def is_mouse_button():
    pass
  def is_mouse_button():
    pass
  def one():
    pass
  def three():
    pass
  def two():
    pass
  def wheel_down():
    pass
  def wheel_left():
    pass
  def wheel_right():
    pass
  def wheel_up():
    pass
  def wheel_down():
    pass
  def wheel_left():
    pass
  def wheel_right():
    pass
  def wheel_up():
    pass
class MouseData:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getInWindow(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_in_window(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def output(self):
    pass
class MouseInterfaceNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAllButtons(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearButton(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_all_buttons(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_button(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def requireButton(self):
    pass
  def require_button(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class MouseRecorder:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToMouseRecorder(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_MouseRecorder(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isPlaying(self):
    pass
  def isRecording(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_playing(self):
    pass
  def is_recording(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToDataNode(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToRecorderBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DataNode(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_RecorderBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class MouseSubregion:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAllButtons(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearButton(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_all_buttons(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_button(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBottom(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLeft(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRight(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTop(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bottom(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_left(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_right(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_top(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def requireButton(self):
    pass
  def require_button(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setDimensions(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_dimensions(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class MouseWatcher:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addGroup(self):
    pass
  def addRegion(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_group(self):
    pass
  def add_region(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearDisplayRegion(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearGeometry(self):
    pass
  def clearInactivityTimeout(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearRegions(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTrailLog(self):
    pass
  def clearTrailNode(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_display_region(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_geometry(self):
    pass
  def clear_inactivity_timeout(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_regions(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_trail_log(self):
    pass
  def clear_trail_node(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToMouseWatcher(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_MouseWatcher(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findRegion(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_region(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getButtonDownPattern(self):
    pass
  def getButtonRepeatPattern(self):
    pass
  def getButtonUpPattern(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDisplayRegion(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterPattern(self):
    pass
  def getExtraHandler(self):
    pass
  def getFancyBits(self):
    pass
  def getFrame(self):
    pass
  def getGeometry(self):
    pass
  def getGroup(self):
    pass
  def getGroups(self):
    pass
  def getInactivityTimeout(self):
    pass
  def getInactivityTimeoutEvent(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLeavePattern(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getModifierButtons(self):
    pass
  def getMouse(self):
    pass
  def getMouseX(self):
    pass
  def getMouseY(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumGroups(self):
    pass
  def getNumParents(self):
    pass
  def getNumRegions(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOverRegion(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRegion(self):
    pass
  def getRegions(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTrailLog(self):
    pass
  def getTrailNode(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getWithinPattern(self):
    pass
  def getWithoutPattern(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_button_down_pattern(self):
    pass
  def get_button_repeat_pattern(self):
    pass
  def get_button_up_pattern(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_display_region(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_pattern(self):
    pass
  def get_extra_handler(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_frame(self):
    pass
  def get_geometry(self):
    pass
  def get_group(self):
    pass
  def get_groups(self):
    pass
  def get_inactivity_timeout(self):
    pass
  def get_inactivity_timeout_event(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_leave_pattern(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_modifier_buttons(self):
    pass
  def get_mouse(self):
    pass
  def get_mouse_x(self):
    pass
  def get_mouse_y(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_groups(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_regions(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_over_region(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_region(self):
    pass
  def get_regions(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_trail_log(self):
    pass
  def get_trail_node(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_within_pattern(self):
    pass
  def get_without_pattern(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasDisplayRegion(self):
    pass
  def hasEffect(self):
    pass
  def hasGeometry(self):
    pass
  def hasInactivityTimeout(self):
    pass
  def hasMouse(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasRegion(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_display_region(self):
    pass
  def has_effect(self):
    pass
  def has_geometry(self):
    pass
  def has_inactivity_timeout(self):
    pass
  def has_mouse(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_region(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def hideRegions(self):
    pass
  def hide_regions(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isButtonDown(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isMouseOpen(self):
    pass
  def isOfType(self):
    pass
  def isOverRegion(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isSorted(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_button_down(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_mouse_open(self):
    pass
  def is_of_type(self):
    pass
  def is_over_region(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_sorted(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def noteActivity(self):
    pass
  def note_activity(self):
    pass
  def numTrailRecent(self):
    pass
  def num_trail_recent(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeGroup(self):
    pass
  def removeRegion(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_group(self):
    pass
  def remove_region(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceGroup(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_group(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setButtonDownPattern(self):
    pass
  def setButtonRepeatPattern(self):
    pass
  def setButtonUpPattern(self):
    pass
  def setColor(self):
    pass
  def setDisplayRegion(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setEnterPattern(self):
    pass
  def setExtraHandler(self):
    pass
  def setFinal(self):
    pass
  def setFrame(self):
    pass
  def setGeometry(self):
    pass
  def setInactivityTimeout(self):
    pass
  def setInactivityTimeoutEvent(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLeavePattern(self):
    pass
  def setModifierButtons(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTrailLogDuration(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setWithinPattern(self):
    pass
  def setWithoutPattern(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_button_down_pattern(self):
    pass
  def set_button_repeat_pattern(self):
    pass
  def set_button_up_pattern(self):
    pass
  def set_color(self):
    pass
  def set_display_region(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_enter_pattern(self):
    pass
  def set_extra_handler(self):
    pass
  def set_final(self):
    pass
  def set_frame(self):
    pass
  def set_geometry(self):
    pass
  def set_inactivity_timeout(self):
    pass
  def set_inactivity_timeout_event(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_leave_pattern(self):
    pass
  def set_modifier_buttons(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_trail_log_duration(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_within_pattern(self):
    pass
  def set_without_pattern(self):
    pass
  def showRegions(self):
    pass
  def show_regions(self):
    pass
  def sortRegions(self):
    pass
  def sort_regions(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToDataNode(self):
    pass
  def upcastToMouseWatcherGroup(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DataNode(self):
    pass
  def upcast_to_MouseWatcherGroup(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def updateRegions(self):
    pass
  def update_regions(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class MouseWatcherGroup:
  def __init__(self):
    pass
  def addRegion(self):
    pass
  def add_region(self):
    pass
  def clearRegions(self):
    pass
  def clear_regions(self):
    pass
  def downcastToMouseWatcher(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_MouseWatcher(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def findRegion(self):
    pass
  def find_region(self):
    pass
  def get_class_type():
    pass
  def getNumRegions(self):
    pass
  def getRefCount(self):
    pass
  def getRegion(self):
    pass
  def getRegions(self):
    pass
  def get_class_type():
    pass
  def get_num_regions(self):
    pass
  def get_ref_count(self):
    pass
  def get_region(self):
    pass
  def get_regions(self):
    pass
  def hasRegion(self):
    pass
  def has_region(self):
    pass
  def hideRegions(self):
    pass
  def hide_regions(self):
    pass
  def isSorted(self):
    pass
  def is_sorted(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeRegion(self):
    pass
  def remove_region(self):
    pass
  def setColor(self):
    pass
  def set_color(self):
    pass
  def showRegions(self):
    pass
  def show_regions(self):
    pass
  def sortRegions(self):
    pass
  def sort_regions(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def updateRegions(self):
    pass
  def update_regions(self):
    pass
  def write(self):
    pass
class MouseWatcherParameter:
  def __init__(self):
    pass
  def getButton(self):
    pass
  def getCandidateStringEncoded(self):
    pass
  def getCursorPos(self):
    pass
  def getHighlightEnd(self):
    pass
  def getHighlightStart(self):
    pass
  def getKeycode(self):
    pass
  def getModifierButtons(self):
    pass
  def getMouse(self):
    pass
  def get_button(self):
    pass
  def get_candidate_string_encoded(self):
    pass
  def get_cursor_pos(self):
    pass
  def get_highlight_end(self):
    pass
  def get_highlight_start(self):
    pass
  def get_keycode(self):
    pass
  def get_modifier_buttons(self):
    pass
  def get_mouse(self):
    pass
  def hasButton(self):
    pass
  def hasCandidate(self):
    pass
  def hasKeycode(self):
    pass
  def hasMouse(self):
    pass
  def has_button(self):
    pass
  def has_candidate(self):
    pass
  def has_keycode(self):
    pass
  def has_mouse(self):
    pass
  def isKeyrepeat(self):
    pass
  def isOutside(self):
    pass
  def is_keyrepeat(self):
    pass
  def is_outside(self):
    pass
  def output(self):
    pass
class MouseWatcherRegion:
  def __init__(self):
    pass
  SFAnyButton = int

  SFMouseButton = int

  SFMousePosition = int

  SFOtherButton = int

  SF_any_button = int

  SF_mouse_button = int

  SF_mouse_position = int

  SF_other_button = int

  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActive(self):
    pass
  def getArea(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFrame(self):
    pass
  def getKeyboard(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getSuppressFlags(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active(self):
    pass
  def get_area(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_frame(self):
    pass
  def get_keyboard(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setActive(self):
    pass
  def setFrame(self):
    pass
  def setKeyboard(self):
    pass
  def setName(self):
    pass
  def setSort(self):
    pass
  def setSuppressFlags(self):
    pass
  def set_active(self):
    pass
  def set_frame(self):
    pass
  def set_keyboard(self):
    pass
  def set_name(self):
    pass
  def set_sort(self):
    pass
  def set_suppress_flags(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class MovieAudio:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class MovieAudioCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def audioChannels(self):
    pass
  def audioRate(self):
    pass
  def audio_channels(self):
    pass
  def audio_rate(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def readSamples(self):
    pass
  def read_samples(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def seek(self):
    pass
  def skipSamples(self):
    pass
  def skip_samples(self):
    pass
  def tell(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class MovieTexture:
  def __init__(self):
    pass
  CMDefault = int

  CMDxt1 = int

  CMDxt2 = int

  CMDxt3 = int

  CMDxt4 = int

  CMDxt5 = int

  CMFxt1 = int

  CMOff = int

  CMOn = int

  CMPvr12bpp = int

  CMPvr14bpp = int

  CM_default = int

  CM_dxt1 = int

  CM_dxt2 = int

  CM_dxt3 = int

  CM_dxt4 = int

  CM_dxt5 = int

  CM_fxt1 = int

  CM_off = int

  CM_on = int

  CM_pvr1_2bpp = int

  CM_pvr1_4bpp = int

  FAlpha = int

  FBlue = int

  FColorIndex = int

  FDepthComponent = int

  FDepthComponent16 = int

  FDepthComponent24 = int

  FDepthComponent32 = int

  FDepthStencil = int

  FGreen = int

  FLuminance = int

  FLuminanceAlpha = int

  FLuminanceAlphamask = int

  FRed = int

  FRgb = int

  FRgb12 = int

  FRgb332 = int

  FRgb5 = int

  FRgb8 = int

  FRgba = int

  FRgba12 = int

  FRgba16 = int

  FRgba32 = int

  FRgba4 = int

  FRgba5 = int

  FRgba8 = int

  FRgbm = int

  FTDefault = int

  FTInvalid = int

  FTLinear = int

  FTLinearMipmapLinear = int

  FTLinearMipmapNearest = int

  FTNearest = int

  FTNearestMipmapLinear = int

  FTNearestMipmapNearest = int

  FTShadow = int

  FT_default = int

  FT_invalid = int

  FT_linear = int

  FT_linear_mipmap_linear = int

  FT_linear_mipmap_nearest = int

  FT_nearest = int

  FT_nearest_mipmap_linear = int

  FT_nearest_mipmap_nearest = int

  FT_shadow = int

  F_alpha = int

  F_blue = int

  F_color_index = int

  F_depth_component = int

  F_depth_component16 = int

  F_depth_component24 = int

  F_depth_component32 = int

  F_depth_stencil = int

  F_green = int

  F_luminance = int

  F_luminance_alpha = int

  F_luminance_alphamask = int

  F_red = int

  F_rgb = int

  F_rgb12 = int

  F_rgb332 = int

  F_rgb5 = int

  F_rgb8 = int

  F_rgba = int

  F_rgba12 = int

  F_rgba16 = int

  F_rgba32 = int

  F_rgba4 = int

  F_rgba5 = int

  F_rgba8 = int

  F_rgbm = int

  QLBest = int

  QLDefault = int

  QLFastest = int

  QLNormal = int

  QL_best = int

  QL_default = int

  QL_fastest = int

  QL_normal = int

  TFloat = int

  TT1dTexture = int

  TT2dTexture = int

  TT2dTextureArray = int

  TT3dTexture = int

  TTCubeMap = int

  TT_1d_texture = int

  TT_2d_texture = int

  TT_2d_texture_array = int

  TT_3d_texture = int

  TT_cube_map = int

  TUnsignedByte = int

  TUnsignedInt248 = int

  TUnsignedShort = int

  T_float = int

  T_unsigned_byte = int

  T_unsigned_int_24_8 = int

  T_unsigned_short = int

  WMBorderColor = int

  WMClamp = int

  WMInvalid = int

  WMMirror = int

  WMMirrorOnce = int

  WMRepeat = int

  WM_border_color = int

  WM_clamp = int

  WM_invalid = int

  WM_mirror = int

  WM_mirror_once = int

  WM_repeat = int

  def assign(self):
    pass
  def clear(self):
    pass
  def clearAlphaFilename(self):
    pass
  def clearAlphaFullpath(self):
    pass
  def clearAuxData(self):
    pass
  def clearFilename(self):
    pass
  def clearFullpath(self):
    pass
  def clearName(self):
    pass
  def clearRamImage(self):
    pass
  def clearRamMipmapImage(self):
    pass
  def clearRamMipmapImages(self):
    pass
  def clearSimpleRamImage(self):
    pass
  def clear_alpha_filename(self):
    pass
  def clear_alpha_fullpath(self):
    pass
  def clear_aux_data(self):
    pass
  def clear_filename(self):
    pass
  def clear_fullpath(self):
    pass
  def clear_name(self):
    pass
  def clear_ram_image(self):
    pass
  def clear_ram_mipmap_image(self):
    pass
  def clear_ram_mipmap_images(self):
    pass
  def clear_simple_ram_image(self):
    pass
  def compressRamImage(self):
    pass
  def compress_ram_image(self):
    pass
  def considerRescale(self):
    pass
  def consider_rescale(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def down_to_power_2():
    pass
  def down_to_power_2():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcastToVideoTexture(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def downcast_to_VideoTexture(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def estimateTextureMemory(self):
    pass
  def estimate_texture_memory(self):
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def generateAlphaScaleMap(self):
    pass
  def generateNormalizationCubeMap(self):
    pass
  def generateRamMipmapImages(self):
    pass
  def generateSimpleRamImage(self):
    pass
  def generate_alpha_scale_map(self):
    pass
  def generate_normalization_cube_map(self):
    pass
  def generate_ram_mipmap_images(self):
    pass
  def generate_simple_ram_image(self):
    pass
  def getActive(self):
    pass
  def getAlphaCursor(self):
    pass
  def getAlphaFilename(self):
    pass
  def getAlphaFullpath(self):
    pass
  def getAnisotropicDegree(self):
    pass
  def getAutoTextureScale(self):
    pass
  def getAuxData(self):
    pass
  def getBamModified(self):
    pass
  def getBorderColor(self):
    pass
  def get_class_type():
    pass
  def getColorCursor(self):
    pass
  def getComponentType(self):
    pass
  def getComponentWidth(self):
    pass
  def getCompression(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getEffectiveAnisotropicDegree(self):
    pass
  def getEffectiveMagfilter(self):
    pass
  def getEffectiveMinfilter(self):
    pass
  def getEffectiveQualityLevel(self):
    pass
  def getExpectedMipmapNumPages(self):
    pass
  def getExpectedMipmapXSize(self):
    pass
  def getExpectedMipmapYSize(self):
    pass
  def getExpectedMipmapZSize(self):
    pass
  def getExpectedNumMipmapLevels(self):
    pass
  def getExpectedRamImageSize(self):
    pass
  def getExpectedRamMipmapImageSize(self):
    pass
  def getExpectedRamMipmapPageSize(self):
    pass
  def getExpectedRamMipmapViewSize(self):
    pass
  def getExpectedRamPageSize(self):
    pass
  def getFilename(self):
    pass
  def getFormat(self):
    pass
  def getFullpath(self):
    pass
  def getImageModified(self):
    pass
  def getKeepRamImage(self):
    pass
  def getLoadedFromImage(self):
    pass
  def getLoadedFromTxo(self):
    pass
  def getLoop(self):
    pass
  def getLoopCount(self):
    pass
  def getMagfilter(self):
    pass
  def getMatchFramebufferFormat(self):
    pass
  def getMinfilter(self):
    pass
  def getName(self):
    pass
  def getNumComponents(self):
    pass
  def getNumLoadableRamMipmapImages(self):
    pass
  def getNumPages(self):
    pass
  def getNumRamMipmapImages(self):
    pass
  def getNumViews(self):
    pass
  def getOrigFileXSize(self):
    pass
  def getOrigFileYSize(self):
    pass
  def getOrigFileZSize(self):
    pass
  def getPadXSize(self):
    pass
  def getPadYSize(self):
    pass
  def getPadZSize(self):
    pass
  def getPlayRate(self):
    pass
  def getPostLoadStoreCache(self):
    pass
  def getPropertiesModified(self):
    pass
  def getQualityLevel(self):
    pass
  def getRamImage(self):
    pass
  def getRamImageAs(self):
    pass
  def getRamImageCompression(self):
    pass
  def getRamImageSize(self):
    pass
  def getRamMipmapImage(self):
    pass
  def getRamMipmapImageSize(self):
    pass
  def getRamMipmapPageSize(self):
    pass
  def getRamMipmapViewSize(self):
    pass
  def getRamPageSize(self):
    pass
  def getRamViewSize(self):
    pass
  def getRefCount(self):
    pass
  def getRenderToTexture(self):
    pass
  def getResident(self):
    pass
  def getSimpleImageModified(self):
    pass
  def getSimpleRamImage(self):
    pass
  def getSimpleRamImageSize(self):
    pass
  def getSimpleXSize(self):
    pass
  def getSimpleYSize(self):
    pass
  def getTexScale(self):
    pass
  def getTextureType(self):
    pass
  def get_textures_power_2():
    pass
  def getTime(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUncompressedRamImage(self):
    pass
  def getVideoHeight(self):
    pass
  def getVideoLength(self):
    pass
  def getVideoWidth(self):
    pass
  def getWrapU(self):
    pass
  def getWrapV(self):
    pass
  def getWrapW(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZSize(self):
    pass
  def get_active(self):
    pass
  def get_alpha_cursor(self):
    pass
  def get_alpha_filename(self):
    pass
  def get_alpha_fullpath(self):
    pass
  def get_anisotropic_degree(self):
    pass
  def get_auto_texture_scale(self):
    pass
  def get_aux_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_border_color(self):
    pass
  def get_class_type():
    pass
  def get_color_cursor(self):
    pass
  def get_component_type(self):
    pass
  def get_component_width(self):
    pass
  def get_compression(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_effective_anisotropic_degree(self):
    pass
  def get_effective_magfilter(self):
    pass
  def get_effective_minfilter(self):
    pass
  def get_effective_quality_level(self):
    pass
  def get_expected_mipmap_num_pages(self):
    pass
  def get_expected_mipmap_x_size(self):
    pass
  def get_expected_mipmap_y_size(self):
    pass
  def get_expected_mipmap_z_size(self):
    pass
  def get_expected_num_mipmap_levels(self):
    pass
  def get_expected_ram_image_size(self):
    pass
  def get_expected_ram_mipmap_image_size(self):
    pass
  def get_expected_ram_mipmap_page_size(self):
    pass
  def get_expected_ram_mipmap_view_size(self):
    pass
  def get_expected_ram_page_size(self):
    pass
  def get_filename(self):
    pass
  def get_format(self):
    pass
  def get_fullpath(self):
    pass
  def get_image_modified(self):
    pass
  def get_keep_ram_image(self):
    pass
  def get_loaded_from_image(self):
    pass
  def get_loaded_from_txo(self):
    pass
  def get_loop(self):
    pass
  def get_loop_count(self):
    pass
  def get_magfilter(self):
    pass
  def get_match_framebuffer_format(self):
    pass
  def get_minfilter(self):
    pass
  def get_name(self):
    pass
  def get_num_components(self):
    pass
  def get_num_loadable_ram_mipmap_images(self):
    pass
  def get_num_pages(self):
    pass
  def get_num_ram_mipmap_images(self):
    pass
  def get_num_views(self):
    pass
  def get_orig_file_x_size(self):
    pass
  def get_orig_file_y_size(self):
    pass
  def get_orig_file_z_size(self):
    pass
  def get_pad_x_size(self):
    pass
  def get_pad_y_size(self):
    pass
  def get_pad_z_size(self):
    pass
  def get_play_rate(self):
    pass
  def get_post_load_store_cache(self):
    pass
  def get_properties_modified(self):
    pass
  def get_quality_level(self):
    pass
  def get_ram_image(self):
    pass
  def get_ram_image_as(self):
    pass
  def get_ram_image_compression(self):
    pass
  def get_ram_image_size(self):
    pass
  def get_ram_mipmap_image(self):
    pass
  def get_ram_mipmap_image_size(self):
    pass
  def get_ram_mipmap_page_size(self):
    pass
  def get_ram_mipmap_view_size(self):
    pass
  def get_ram_page_size(self):
    pass
  def get_ram_view_size(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_to_texture(self):
    pass
  def get_resident(self):
    pass
  def get_simple_image_modified(self):
    pass
  def get_simple_ram_image(self):
    pass
  def get_simple_ram_image_size(self):
    pass
  def get_simple_x_size(self):
    pass
  def get_simple_y_size(self):
    pass
  def get_tex_scale(self):
    pass
  def get_texture_type(self):
    pass
  def get_textures_power_2():
    pass
  def get_time(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_uncompressed_ram_image(self):
    pass
  def get_video_height(self):
    pass
  def get_video_length(self):
    pass
  def get_video_width(self):
    pass
  def get_wrap_u(self):
    pass
  def get_wrap_v(self):
    pass
  def get_wrap_w(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_z_size(self):
    pass
  def hasAllRamMipmapImages(self):
    pass
  def hasAlphaFilename(self):
    pass
  def hasAlphaFullpath(self):
    pass
  def hasAutoTextureScale(self):
    pass
  def hasCompression(self):
    pass
  def hasFilename(self):
    pass
  def hasFullpath(self):
    pass
  def hasName(self):
    pass
  def hasRamImage(self):
    pass
  def hasRamMipmapImage(self):
    pass
  def hasSimpleRamImage(self):
    pass
  def has_textures_power_2():
    pass
  def hasUncompressedRamImage(self):
    pass
  def has_all_ram_mipmap_images(self):
    pass
  def has_alpha_filename(self):
    pass
  def has_alpha_fullpath(self):
    pass
  def has_auto_texture_scale(self):
    pass
  def has_compression(self):
    pass
  def has_filename(self):
    pass
  def has_fullpath(self):
    pass
  def has_name(self):
    pass
  def has_ram_image(self):
    pass
  def has_ram_mipmap_image(self):
    pass
  def has_simple_ram_image(self):
    pass
  def has_textures_power_2():
    pass
  def has_uncompressed_ram_image(self):
    pass
  def isCacheable(self):
    pass
  def isExactType(self):
    pass
  def is_mipmap():
    pass
  def isOfType(self):
    pass
  def isPlaying(self):
    pass
  def isPrepared(self):
    pass
  def is_cacheable(self):
    pass
  def is_exact_type(self):
    pass
  def is_mipmap():
    pass
  def is_of_type(self):
    pass
  def is_playing(self):
    pass
  def is_prepared(self):
    pass
  def load(self):
    pass
  def loadRelated(self):
    pass
  def load_related(self):
    pass
  def makeCopy(self):
    pass
  def make_from_txo():
    pass
  def makeRamImage(self):
    pass
  def makeRamMipmapImage(self):
    pass
  def make_copy(self):
    pass
  def make_from_txo():
    pass
  def make_ram_image(self):
    pass
  def make_ram_mipmap_image(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mightHaveRamImage(self):
    pass
  def might_have_ram_image(self):
    pass
  def modifyRamImage(self):
    pass
  def modifyRamMipmapImage(self):
    pass
  def modifySimpleRamImage(self):
    pass
  def modify_ram_image(self):
    pass
  def modify_ram_mipmap_image(self):
    pass
  def modify_simple_ram_image(self):
    pass
  def newSimpleRamImage(self):
    pass
  def new_simple_ram_image(self):
    pass
  def output(self):
    pass
  def peek(self):
    pass
  def play(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def read(self):
    pass
  def readDds(self):
    pass
  def readTxo(self):
    pass
  def read_dds(self):
    pass
  def read_txo(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def reload(self):
    pass
  def rescaleTexture(self):
    pass
  def rescale_texture(self):
    pass
  def restart(self):
    pass
  def setAlphaFilename(self):
    pass
  def setAlphaFullpath(self):
    pass
  def setAnisotropicDegree(self):
    pass
  def setAutoTextureScale(self):
    pass
  def setAuxData(self):
    pass
  def setBorderColor(self):
    pass
  def setComponentType(self):
    pass
  def setCompression(self):
    pass
  def setFilename(self):
    pass
  def setFormat(self):
    pass
  def setFullpath(self):
    pass
  def setKeepRamImage(self):
    pass
  def setLoadedFromImage(self):
    pass
  def setLoadedFromTxo(self):
    pass
  def setLoop(self):
    pass
  def setLoopCount(self):
    pass
  def setMagfilter(self):
    pass
  def setMatchFramebufferFormat(self):
    pass
  def setMinfilter(self):
    pass
  def setName(self):
    pass
  def setNumViews(self):
    pass
  def setOrigFileSize(self):
    pass
  def setPadSize(self):
    pass
  def setPlayRate(self):
    pass
  def setPostLoadStoreCache(self):
    pass
  def setQualityLevel(self):
    pass
  def setRamImage(self):
    pass
  def setRamImageAs(self):
    pass
  def setRamMipmapImage(self):
    pass
  def setRamMipmapPointerFromInt(self):
    pass
  def setRenderToTexture(self):
    pass
  def setSimpleRamImage(self):
    pass
  def setSizePadded(self):
    pass
  def set_textures_power_2():
    pass
  def setTime(self):
    pass
  def setWrapU(self):
    pass
  def setWrapV(self):
    pass
  def setWrapW(self):
    pass
  def setXSize(self):
    pass
  def setYSize(self):
    pass
  def setZSize(self):
    pass
  def set_alpha_filename(self):
    pass
  def set_alpha_fullpath(self):
    pass
  def set_anisotropic_degree(self):
    pass
  def set_auto_texture_scale(self):
    pass
  def set_aux_data(self):
    pass
  def set_border_color(self):
    pass
  def set_component_type(self):
    pass
  def set_compression(self):
    pass
  def set_filename(self):
    pass
  def set_format(self):
    pass
  def set_fullpath(self):
    pass
  def set_keep_ram_image(self):
    pass
  def set_loaded_from_image(self):
    pass
  def set_loaded_from_txo(self):
    pass
  def set_loop(self):
    pass
  def set_loop_count(self):
    pass
  def set_magfilter(self):
    pass
  def set_match_framebuffer_format(self):
    pass
  def set_minfilter(self):
    pass
  def set_name(self):
    pass
  def set_num_views(self):
    pass
  def set_orig_file_size(self):
    pass
  def set_pad_size(self):
    pass
  def set_play_rate(self):
    pass
  def set_post_load_store_cache(self):
    pass
  def set_quality_level(self):
    pass
  def set_ram_image(self):
    pass
  def set_ram_image_as(self):
    pass
  def set_ram_mipmap_image(self):
    pass
  def set_ram_mipmap_pointer_from_int(self):
    pass
  def set_render_to_texture(self):
    pass
  def set_simple_ram_image(self):
    pass
  def set_size_padded(self):
    pass
  def set_textures_power_2():
    pass
  def set_time(self):
    pass
  def set_wrap_u(self):
    pass
  def set_wrap_v(self):
    pass
  def set_wrap_w(self):
    pass
  def set_x_size(self):
    pass
  def set_y_size(self):
    pass
  def set_z_size(self):
    pass
  def setup1dTexture(self):
    pass
  def setup2dTexture(self):
    pass
  def setup2dTextureArray(self):
    pass
  def setup3dTexture(self):
    pass
  def setupCubeMap(self):
    pass
  def setupTexture(self):
    pass
  def setup_1d_texture(self):
    pass
  def setup_2d_texture(self):
    pass
  def setup_2d_texture_array(self):
    pass
  def setup_3d_texture(self):
    pass
  def setup_cube_map(self):
    pass
  def setup_texture(self):
    pass
  def stop(self):
    pass
  def store(self):
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def synchronizeTo(self):
    pass
  def synchronize_to(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncompressRamImage(self):
    pass
  def uncompress_ram_image(self):
    pass
  def unref(self):
    pass
  def unsynchronize(self):
    pass
  def up_to_power_2():
    pass
  def up_to_power_2():
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def usesMipmaps(self):
    pass
  def uses_mipmaps(self):
    pass
  def wasImageModified(self):
    pass
  def was_image_modified(self):
    pass
  def write(self):
    pass
  def writeTxo(self):
    pass
  def write_txo(self):
    pass
class MovieVideo:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSubfileInfo(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_subfile_info(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class MovieVideoCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def applyToTexture(self):
    pass
  def applyToTextureAlpha(self):
    pass
  def applyToTextureRgb(self):
    pass
  def apply_to_texture(self):
    pass
  def apply_to_texture_alpha(self):
    pass
  def apply_to_texture_rgb(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def fetchBuffer(self):
    pass
  def fetch_buffer(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def setTime(self):
    pass
  def set_time(self):
    pass
  def setupTexture(self):
    pass
  def setup_texture(self):
    pass
  def sizeX(self):
    pass
  def sizeY(self):
    pass
  def size_x(self):
    pass
  def size_y(self):
    pass
  def streaming(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class MovingPart__ACMatrixSwitchType__:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPart__ACScalarSwitchType__:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPartBase:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPartMatrix:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPartScalar:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPart__ACMatrixSwitchType__:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MovingPart__ACScalarSwitchType__:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getBound(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getDefaultValue(self):
    pass
  def getForcedChannel(self):
    pass
  def getMaxBound(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValue(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bound(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_default_value(self):
    pass
  def get_forced_channel(self):
    pass
  def get_max_bound(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def outputValue(self):
    pass
  def output_value(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class MultitexReducer:
  def __init__(self):
    pass
  def clear(self):
    pass
  def flatten(self):
    pass
  def scan(self):
    pass
  def setAllowTexMat(self):
    pass
  def setTarget(self):
    pass
  def setUseGeom(self):
    pass
  def set_allow_tex_mat(self):
    pass
  def set_target(self):
    pass
  def set_use_geom(self):
    pass
class Mutex:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def tryAcquire(self):
    pass
  def try_acquire(self):
    pass
class MutexDirect:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def tryAcquire(self):
    pass
  def try_acquire(self):
    pass
class NativeWindowHandle:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getIntHandle(self):
    pass
  def getOsHandle(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_int_handle(self):
    pass
  def get_os_handle(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def make_int():
    pass
  def make_subprocess():
    pass
  def make_int():
    pass
  def make_subprocess():
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def sendWindowsMessage(self):
    pass
  def send_windows_message(self):
    pass
  def setOsHandle(self):
    pass
  def set_os_handle(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class NetAddress:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getAddr(self):
    pass
  def getIp(self):
    pass
  def getIpComponent(self):
    pass
  def getIpString(self):
    pass
  def getPort(self):
    pass
  def get_addr(self):
    pass
  def get_ip(self):
    pass
  def get_ip_component(self):
    pass
  def get_ip_string(self):
    pass
  def get_port(self):
    pass
  def output(self):
    pass
  def setAny(self):
    pass
  def setHost(self):
    pass
  def setLocalhost(self):
    pass
  def setPort(self):
    pass
  def set_any(self):
    pass
  def set_host(self):
    pass
  def set_localhost(self):
    pass
  def set_port(self):
    pass
class NetDatagram:
  def __init__(self):
    pass
  def addBeFloat32(self):
    pass
  def addBeFloat64(self):
    pass
  def addBeInt16(self):
    pass
  def addBeInt32(self):
    pass
  def addBeInt64(self):
    pass
  def addBeUint16(self):
    pass
  def addBeUint32(self):
    pass
  def addBeUint64(self):
    pass
  def addBool(self):
    pass
  def addFixedString(self):
    pass
  def addFloat32(self):
    pass
  def addFloat64(self):
    pass
  def addInt16(self):
    pass
  def addInt32(self):
    pass
  def addInt64(self):
    pass
  def addInt8(self):
    pass
  def addStdfloat(self):
    pass
  def addString(self):
    pass
  def addString32(self):
    pass
  def addUint16(self):
    pass
  def addUint32(self):
    pass
  def addUint64(self):
    pass
  def addUint8(self):
    pass
  def addWstring(self):
    pass
  def addZString(self):
    pass
  def add_be_float32(self):
    pass
  def add_be_float64(self):
    pass
  def add_be_int16(self):
    pass
  def add_be_int32(self):
    pass
  def add_be_int64(self):
    pass
  def add_be_uint16(self):
    pass
  def add_be_uint32(self):
    pass
  def add_be_uint64(self):
    pass
  def add_bool(self):
    pass
  def add_fixed_string(self):
    pass
  def add_float32(self):
    pass
  def add_float64(self):
    pass
  def add_int16(self):
    pass
  def add_int32(self):
    pass
  def add_int64(self):
    pass
  def add_int8(self):
    pass
  def add_stdfloat(self):
    pass
  def add_string(self):
    pass
  def add_string32(self):
    pass
  def add_uint16(self):
    pass
  def add_uint32(self):
    pass
  def add_uint64(self):
    pass
  def add_uint8(self):
    pass
  def add_wstring(self):
    pass
  def add_z_string(self):
    pass
  def appendData(self):
    pass
  def append_data(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def copyArray(self):
    pass
  def copy_array(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def dumpHex(self):
    pass
  def dump_hex(self):
    pass
  def eq(self):
    pass
  def getAddress(self):
    pass
  def getArray(self):
    pass
  def get_class_type():
    pass
  def getConnection(self):
    pass
  def getLength(self):
    pass
  def getMessage(self):
    pass
  def getStdfloatDouble(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_address(self):
    pass
  def get_array(self):
    pass
  def get_class_type():
    pass
  def get_connection(self):
    pass
  def get_length(self):
    pass
  def get_message(self):
    pass
  def get_stdfloat_double(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def lessThan(self):
    pass
  def modifyArray(self):
    pass
  def modify_array(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def padBytes(self):
    pass
  def pad_bytes(self):
    pass
  def setAddress(self):
    pass
  def setArray(self):
    pass
  def setConnection(self):
    pass
  def setStdfloatDouble(self):
    pass
  def set_address(self):
    pass
  def set_array(self):
    pass
  def set_connection(self):
    pass
  def set_stdfloat_double(self):
    pass
  def write(self):
    pass
class NodeCachedReferenceCount:
  def __init__(self):
    pass
  RCache = int

  RNode = int

  R_cache = int

  R_node = int

  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getReferencedBits(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_referenced_bits(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def nodeRef(self):
    pass
  def nodeUnref(self):
    pass
  def node_ref(self):
    pass
  def node_unref(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class NodeCullCallbackData:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getData(self):
    pass
  def getTrav(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_data(self):
    pass
  def get_trav(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def upcall(self):
    pass
class NodePath:
  def __init__(self):
    pass
  ETFail = int

  ETNotFound = int

  ETOk = int

  ETRemoved = int

  ET_fail = int

  ET_not_found = int

  ET_ok = int

  ET_removed = int

  def addHash(self):
    pass
  def add_hash(self):
    pass
  def adjustAllPriorities(self):
    pass
  def adjust_all_priorities(self):
    pass
  def analyze():
    pass
  def any_path():
    pass
  def any_path():
    pass
  def applyTextureColors(self):
    pass
  def apply_texture_colors(self):
    pass
  def assign(self):
    pass
  def attachCollisionRay():
    pass
  def attachCollisionSegment():
    pass
  def attachCollisionSphere():
    pass
  def attachNewNode(self):
    pass
  def attach_new_node(self):
    pass
  def calcTightBounds(self):
    pass
  def calc_tight_bounds(self):
    pass
  def clearAntialias(self):
    pass
  def clearAttrib(self):
    pass
  def clearAudioVolume(self):
    pass
  def clearBillboard(self):
    pass
  def clearBin(self):
    pass
  def clearClipPlane(self):
    pass
  def clearColor(self):
    pass
  def clearColorScale(self):
    pass
  def clearCompass(self):
    pass
  def clearDepthOffset(self):
    pass
  def clearDepthTest(self):
    pass
  def clearDepthWrite(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFog(self):
    pass
  def clearLight(self):
    pass
  def clearMat(self):
    pass
  def clearMaterial(self):
    pass
  def clearModelNodes(self):
    pass
  def clearNormalMap(self):
    pass
  def clearOccluder(self):
    pass
  def clearProjectTexture(self):
    pass
  def clearPythonTag(self):
    pass
  def clearRenderMode(self):
    pass
  def clearScissor(self):
    pass
  def clearShader(self):
    pass
  def clearShaderInput(self):
    pass
  def clearTag(self):
    pass
  def clearTexGen(self):
    pass
  def clearTexProjector(self):
    pass
  def clearTexTransform(self):
    pass
  def clearTexture(self):
    pass
  def clearTransform(self):
    pass
  def clearTransparency(self):
    pass
  def clearTwoSided(self):
    pass
  def clear_antialias(self):
    pass
  def clear_attrib(self):
    pass
  def clear_audio_volume(self):
    pass
  def clear_billboard(self):
    pass
  def clear_bin(self):
    pass
  def clear_clip_plane(self):
    pass
  def clear_color(self):
    pass
  def clear_color_scale(self):
    pass
  def clear_compass(self):
    pass
  def clear_depth_offset(self):
    pass
  def clear_depth_test(self):
    pass
  def clear_depth_write(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_fog(self):
    pass
  def clear_light(self):
    pass
  def clear_mat(self):
    pass
  def clear_material(self):
    pass
  def clear_model_nodes(self):
    pass
  def clear_normal_map(self):
    pass
  def clear_occluder(self):
    pass
  def clear_project_texture(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_render_mode(self):
    pass
  def clear_scissor(self):
    pass
  def clear_shader(self):
    pass
  def clear_shader_input(self):
    pass
  def clear_tag(self):
    pass
  def clear_tex_gen(self):
    pass
  def clear_tex_projector(self):
    pass
  def clear_tex_transform(self):
    pass
  def clear_texture(self):
    pass
  def clear_transform(self):
    pass
  def clear_transparency(self):
    pass
  def clear_two_sided(self):
    pass
  def colorInterval():
    pass
  def colorScaleInterval():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def composeColorScale(self):
    pass
  def compose_color_scale(self):
    pass
  def copyTo(self):
    pass
  def copy_to(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def deselect():
    pass
  def detachNode(self):
    pass
  def detach_node(self):
    pass
  def doBillboardAxis(self):
    pass
  def doBillboardPointEye(self):
    pass
  def doBillboardPointWorld(self):
    pass
  def do_billboard_axis(self):
    pass
  def do_billboard_point_eye(self):
    pass
  def do_billboard_point_world(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def eq(self):
    pass
  def explore():
    pass
  def fail():
    pass
  def find(self):
    pass
  def findAllMatches(self):
    pass
  def findAllMaterials(self):
    pass
  def findAllPathsTo(self):
    pass
  def findAllTexcoords(self):
    pass
  def findAllTextureStages(self):
    pass
  def findAllTextures(self):
    pass
  def findAllVertexColumns(self):
    pass
  def findMaterial(self):
    pass
  def findNetPythonTag(self):
    pass
  def findNetTag(self):
    pass
  def findPathTo(self):
    pass
  def findTexture(self):
    pass
  def findTextureStage(self):
    pass
  def find_all_matches(self):
    pass
  def find_all_materials(self):
    pass
  def find_all_paths_to(self):
    pass
  def find_all_texcoords(self):
    pass
  def find_all_texture_stages(self):
    pass
  def find_all_textures(self):
    pass
  def find_all_vertex_columns(self):
    pass
  def find_material(self):
    pass
  def find_net_python_tag(self):
    pass
  def find_net_tag(self):
    pass
  def find_path_to(self):
    pass
  def find_texture(self):
    pass
  def find_texture_stage(self):
    pass
  def flattenLight(self):
    pass
  def flattenMedium(self):
    pass
  def flattenMultitex():
    pass
  def flattenStrong(self):
    pass
  def flatten_light(self):
    pass
  def flatten_medium(self):
    pass
  def flatten_strong(self):
    pass
  def forceRecomputeBounds(self):
    pass
  def force_recompute_bounds(self):
    pass
  def getAncestor(self):
    pass
  def getAncestors(self):
    pass
  def getAncestry():
    pass
  def getAntialias(self):
    pass
  def getAttrib(self):
    pass
  def getAudioVolume(self):
    pass
  def getBinDrawOrder(self):
    pass
  def getBinName(self):
    pass
  def getBounds(self):
    pass
  def getChild(self):
    pass
  def getChildren(self):
    pass
  def getChildrenAsList():
    pass
  def get_class_type():
    pass
  def getCollideMask(self):
    pass
  def getColor(self):
    pass
  def getColorScale(self):
    pass
  def getCommonAncestor(self):
    pass
  def getDepthOffset(self):
    pass
  def getDepthTest(self):
    pass
  def getDepthWrite(self):
    pass
  def getDistance(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getErrorType(self):
    pass
  def getFog(self):
    pass
  def getH(self):
    pass
  def getHiddenAncestor(self):
    pass
  def getHpr(self):
    pass
  def getInstanceCount(self):
    pass
  def getKey(self):
    pass
  def getMat(self):
    pass
  def getMaterial(self):
    pass
  def get_max_search_depth():
    pass
  def getName(self):
    pass
  def getNetAudioVolume(self):
    pass
  def getNetPrevTransform(self):
    pass
  def getNetPythonTag(self):
    pass
  def getNetState(self):
    pass
  def getNetTag(self):
    pass
  def getNetTransform(self):
    pass
  def getNode(self):
    pass
  def getNodes(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDescendants():
    pass
  def getNumNodes(self):
    pass
  def getP(self):
    pass
  def getParent(self):
    pass
  def getPos(self):
    pass
  def getPosDelta(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getQuat(self):
    pass
  def getR(self):
    pass
  def getRelativePoint(self):
    pass
  def getRelativeVector(self):
    pass
  def getRenderMode(self):
    pass
  def getRenderModePerspective(self):
    pass
  def getRenderModeThickness(self):
    pass
  def getSa(self):
    pass
  def getSb(self):
    pass
  def getScale(self):
    pass
  def getSg(self):
    pass
  def getShader(self):
    pass
  def getShaderInput(self):
    pass
  def getShear(self):
    pass
  def getShxy(self):
    pass
  def getShxz(self):
    pass
  def getShyz(self):
    pass
  def getSort(self):
    pass
  def getSr(self):
    pass
  def getStashedAncestor(self):
    pass
  def getStashedChildren(self):
    pass
  def getState(self):
    pass
  def getSx(self):
    pass
  def getSy(self):
    pass
  def getSz(self):
    pass
  def getTag(self):
    pass
  def getTexGen(self):
    pass
  def getTexGenLight(self):
    pass
  def getTexHpr(self):
    pass
  def getTexOffset(self):
    pass
  def getTexPos(self):
    pass
  def getTexProjectorFrom(self):
    pass
  def getTexProjectorTo(self):
    pass
  def getTexRotate(self):
    pass
  def getTexScale(self):
    pass
  def getTexScale3d(self):
    pass
  def getTexTransform(self):
    pass
  def getTexture(self):
    pass
  def getTightBounds():
    pass
  def getTop(self):
    pass
  def getTopNode(self):
    pass
  def getTransform(self):
    pass
  def getTransparency(self):
    pass
  def getTwoSided(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_ancestor(self):
    pass
  def get_ancestors(self):
    pass
  def get_antialias(self):
    pass
  def get_attrib(self):
    pass
  def get_audio_volume(self):
    pass
  def get_bin_draw_order(self):
    pass
  def get_bin_name(self):
    pass
  def get_bounds(self):
    pass
  def get_child(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_collide_mask(self):
    pass
  def get_color(self):
    pass
  def get_color_scale(self):
    pass
  def get_common_ancestor(self):
    pass
  def get_depth_offset(self):
    pass
  def get_depth_test(self):
    pass
  def get_depth_write(self):
    pass
  def get_distance(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_error_type(self):
    pass
  def get_fog(self):
    pass
  def get_h(self):
    pass
  def get_hidden_ancestor(self):
    pass
  def get_hpr(self):
    pass
  def get_instance_count(self):
    pass
  def get_key(self):
    pass
  def get_mat(self):
    pass
  def get_material(self):
    pass
  def get_max_search_depth():
    pass
  def get_name(self):
    pass
  def get_net_audio_volume(self):
    pass
  def get_net_prev_transform(self):
    pass
  def get_net_python_tag(self):
    pass
  def get_net_state(self):
    pass
  def get_net_tag(self):
    pass
  def get_net_transform(self):
    pass
  def get_node(self):
    pass
  def get_nodes(self):
    pass
  def get_num_children(self):
    pass
  def get_num_nodes(self):
    pass
  def get_p(self):
    pass
  def get_parent(self):
    pass
  def get_pos(self):
    pass
  def get_pos_delta(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_quat(self):
    pass
  def get_r(self):
    pass
  def get_relative_point(self):
    pass
  def get_relative_vector(self):
    pass
  def get_render_mode(self):
    pass
  def get_render_mode_perspective(self):
    pass
  def get_render_mode_thickness(self):
    pass
  def get_sa(self):
    pass
  def get_sb(self):
    pass
  def get_scale(self):
    pass
  def get_sg(self):
    pass
  def get_shader(self):
    pass
  def get_shader_input(self):
    pass
  def get_shear(self):
    pass
  def get_shxy(self):
    pass
  def get_shxz(self):
    pass
  def get_shyz(self):
    pass
  def get_sort(self):
    pass
  def get_sr(self):
    pass
  def get_stashed_ancestor(self):
    pass
  def get_stashed_children(self):
    pass
  def get_state(self):
    pass
  def get_sx(self):
    pass
  def get_sy(self):
    pass
  def get_sz(self):
    pass
  def get_tag(self):
    pass
  def get_tex_gen(self):
    pass
  def get_tex_gen_light(self):
    pass
  def get_tex_hpr(self):
    pass
  def get_tex_offset(self):
    pass
  def get_tex_pos(self):
    pass
  def get_tex_projector_from(self):
    pass
  def get_tex_projector_to(self):
    pass
  def get_tex_rotate(self):
    pass
  def get_tex_scale(self):
    pass
  def get_tex_scale_3d(self):
    pass
  def get_tex_transform(self):
    pass
  def get_texture(self):
    pass
  def get_top(self):
    pass
  def get_top_node(self):
    pass
  def get_transform(self):
    pass
  def get_transparency(self):
    pass
  def get_two_sided(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def hasAntialias(self):
    pass
  def hasAttrib(self):
    pass
  def hasAudioVolume(self):
    pass
  def hasBillboard(self):
    pass
  def hasBin(self):
    pass
  def hasClipPlane(self):
    pass
  def hasClipPlaneOff(self):
    pass
  def hasColor(self):
    pass
  def hasColorScale(self):
    pass
  def hasCompass(self):
    pass
  def hasDepthOffset(self):
    pass
  def hasDepthTest(self):
    pass
  def hasDepthWrite(self):
    pass
  def hasEffect(self):
    pass
  def hasFog(self):
    pass
  def hasFogOff(self):
    pass
  def hasLight(self):
    pass
  def hasLightOff(self):
    pass
  def hasMat(self):
    pass
  def hasMaterial(self):
    pass
  def hasNetPythonTag(self):
    pass
  def hasNetTag(self):
    pass
  def hasOccluder(self):
    pass
  def hasParent(self):
    pass
  def hasPythonTag(self):
    pass
  def hasRenderMode(self):
    pass
  def hasScissor(self):
    pass
  def hasTag(self):
    pass
  def hasTexGen(self):
    pass
  def hasTexProjector(self):
    pass
  def hasTexTransform(self):
    pass
  def hasTexcoord(self):
    pass
  def hasTexture(self):
    pass
  def hasTextureOff(self):
    pass
  def hasTransparency(self):
    pass
  def hasTwoSided(self):
    pass
  def hasVertexColumn(self):
    pass
  def has_antialias(self):
    pass
  def has_attrib(self):
    pass
  def has_audio_volume(self):
    pass
  def has_billboard(self):
    pass
  def has_bin(self):
    pass
  def has_clip_plane(self):
    pass
  def has_clip_plane_off(self):
    pass
  def has_color(self):
    pass
  def has_color_scale(self):
    pass
  def has_compass(self):
    pass
  def has_depth_offset(self):
    pass
  def has_depth_test(self):
    pass
  def has_depth_write(self):
    pass
  def has_effect(self):
    pass
  def has_fog(self):
    pass
  def has_fog_off(self):
    pass
  def has_light(self):
    pass
  def has_light_off(self):
    pass
  def has_mat(self):
    pass
  def has_material(self):
    pass
  def has_net_python_tag(self):
    pass
  def has_net_tag(self):
    pass
  def has_occluder(self):
    pass
  def has_parent(self):
    pass
  def has_python_tag(self):
    pass
  def has_render_mode(self):
    pass
  def has_scissor(self):
    pass
  def has_tag(self):
    pass
  def has_tex_gen(self):
    pass
  def has_tex_projector(self):
    pass
  def has_tex_transform(self):
    pass
  def has_texcoord(self):
    pass
  def has_texture(self):
    pass
  def has_texture_off(self):
    pass
  def has_transparency(self):
    pass
  def has_two_sided(self):
    pass
  def has_vertex_column(self):
    pass
  def headsUp(self):
    pass
  def heads_up(self):
    pass
  def hide(self):
    pass
  def hideBounds(self):
    pass
  def hideCS():
    pass
  def hideSiblings():
    pass
  def hide_bounds(self):
    pass
  def hprInterval():
    pass
  def hprScaleInterval():
    pass
  def iHpr():
    pass
  def iPos():
    pass
  def iPosHpr():
    pass
  def iPosHprScale():
    pass
  def iScale():
    pass
  def id():
    pass
  def instanceTo(self):
    pass
  def instanceUnderNode(self):
    pass
  def instance_to(self):
    pass
  def instance_under_node(self):
    pass
  def isAncestorOf(self):
    pass
  def isEmpty(self):
    pass
  def isHidden(self):
    pass
  def isSameGraph(self):
    pass
  def isSingleton(self):
    pass
  def isStashed(self):
    pass
  def is_ancestor_of(self):
    pass
  def is_empty(self):
    pass
  def is_hidden(self):
    pass
  def is_same_graph(self):
    pass
  def is_singleton(self):
    pass
  def is_stashed(self):
    pass
  def isolate():
    pass
  def lerpColor():
    pass
  def lerpColorRGBA():
    pass
  def lerpColorRGBARGBA():
    pass
  def lerpColorScale():
    pass
  def lerpColorScaleRGBA():
    pass
  def lerpColorScaleRGBARGBA():
    pass
  def lerpColorScaleVBase4():
    pass
  def lerpColorScaleVBase4VBase4():
    pass
  def lerpColorVBase4():
    pass
  def lerpColorVBase4VBase4():
    pass
  def lerpHpr():
    pass
  def lerpHprHPR():
    pass
  def lerpHprVBase3():
    pass
  def lerpPos():
    pass
  def lerpPosHpr():
    pass
  def lerpPosHprPoint3VBase3():
    pass
  def lerpPosHprScale():
    pass
  def lerpPosHprXYZHPR():
    pass
  def lerpPosPoint3():
    pass
  def lerpPosXYZ():
    pass
  def lerpScale():
    pass
  def lerpScaleVBase3():
    pass
  def lerpScaleXYZ():
    pass
  def lessThan(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def lookAt(self):
    pass
  def look_at(self):
    pass
  def ls(self):
    pass
  def lsNames():
    pass
  def lsNamesRecurse():
    pass
  def ne(self):
    pass
  def node(self):
    pass
  def not_found():
    pass
  def not_found():
    pass
  def output(self):
    pass
  def pPrintString():
    pass
  def place():
    pass
  def posHprInterval():
    pass
  def posHprScaleInterval():
    pass
  def posHprScaleShearInterval():
    pass
  def posInterval():
    pass
  def posQuatInterval():
    pass
  def posQuatScaleInterval():
    pass
  def posQuatScaleShearInterval():
    pass
  def premungeScene(self):
    pass
  def premunge_scene(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def printChildren():
    pass
  def printHpr():
    pass
  def printPos():
    pass
  def printPosHpr():
    pass
  def printPosHprScale():
    pass
  def printScale():
    pass
  def printTransform():
    pass
  def projectTexture(self):
    pass
  def project_texture(self):
    pass
  def quatInterval():
    pass
  def quatScaleInterval():
    pass
  def r_constructCollisionTree():
    pass
  def r_subdivideCollisions():
    pass
  def remove():
    pass
  def removeChildren():
    pass
  def removeNode(self):
    pass
  def removeNonCollisions():
    pass
  def remove_node(self):
    pass
  def removed():
    pass
  def reparentTo(self):
    pass
  def reparent_to(self):
    pass
  def reverseLs(self):
    pass
  def reverseLsNames():
    pass
  def reverse_ls(self):
    pass
  def rgbPanel():
    pass
  def scaleInterval():
    pass
  def select():
    pass
  def setAllColorScale(self):
    pass
  def setAlphaScale(self):
    pass
  def setAntialias(self):
    pass
  def setAttrib(self):
    pass
  def setAudioVolume(self):
    pass
  def setAudioVolumeOff(self):
    pass
  def setBillboardAxis(self):
    pass
  def setBillboardPointEye(self):
    pass
  def setBillboardPointWorld(self):
    pass
  def setBin(self):
    pass
  def setClipPlane(self):
    pass
  def setClipPlaneOff(self):
    pass
  def setCollideMask(self):
    pass
  def setColor(self):
    pass
  def setColorOff(self):
    pass
  def setColorScale(self):
    pass
  def setColorScaleOff(self):
    pass
  def setCompass(self):
    pass
  def setDepthOffset(self):
    pass
  def setDepthTest(self):
    pass
  def setDepthWrite(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFluidPos(self):
    pass
  def setFluidX(self):
    pass
  def setFluidY(self):
    pass
  def setFluidZ(self):
    pass
  def setFog(self):
    pass
  def setFogOff(self):
    pass
  def setH(self):
    pass
  def setHpr(self):
    pass
  def setHprScale(self):
    pass
  def setInstanceCount(self):
    pass
  def setLight(self):
    pass
  def setLightOff(self):
    pass
  def setMat(self):
    pass
  def setMaterial(self):
    pass
  def setMaterialOff(self):
    pass
  def set_max_search_depth():
    pass
  def setName(self):
    pass
  def setNormalMap(self):
    pass
  def setOccluder(self):
    pass
  def setP(self):
    pass
  def setPos(self):
    pass
  def setPosHpr(self):
    pass
  def setPosHprScale(self):
    pass
  def setPosHprScaleShear(self):
    pass
  def setPosQuat(self):
    pass
  def setPosQuatScale(self):
    pass
  def setPosQuatScaleShear(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setQuat(self):
    pass
  def setQuatScale(self):
    pass
  def setR(self):
    pass
  def setRenderMode(self):
    pass
  def setRenderModeFilled(self):
    pass
  def setRenderModePerspective(self):
    pass
  def setRenderModeThickness(self):
    pass
  def setRenderModeWireframe(self):
    pass
  def setSa(self):
    pass
  def setSb(self):
    pass
  def setScale(self):
    pass
  def setScissor(self):
    pass
  def setSg(self):
    pass
  def setShader(self):
    pass
  def setShaderAuto(self):
    pass
  def setShaderInput(self):
    pass
  def setShaderOff(self):
    pass
  def setShear(self):
    pass
  def setShxy(self):
    pass
  def setShxz(self):
    pass
  def setShyz(self):
    pass
  def setSr(self):
    pass
  def setState(self):
    pass
  def setSx(self):
    pass
  def setSy(self):
    pass
  def setSz(self):
    pass
  def setTag(self):
    pass
  def setTexGen(self):
    pass
  def setTexHpr(self):
    pass
  def setTexOffset(self):
    pass
  def setTexPos(self):
    pass
  def setTexProjector(self):
    pass
  def setTexRotate(self):
    pass
  def setTexScale(self):
    pass
  def setTexTransform(self):
    pass
  def setTexture(self):
    pass
  def setTextureOff(self):
    pass
  def setTransform(self):
    pass
  def setTransparency(self):
    pass
  def setTwoSided(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_all_color_scale(self):
    pass
  def set_alpha_scale(self):
    pass
  def set_antialias(self):
    pass
  def set_attrib(self):
    pass
  def set_audio_volume(self):
    pass
  def set_audio_volume_off(self):
    pass
  def set_billboard_axis(self):
    pass
  def set_billboard_point_eye(self):
    pass
  def set_billboard_point_world(self):
    pass
  def set_bin(self):
    pass
  def set_clip_plane(self):
    pass
  def set_clip_plane_off(self):
    pass
  def set_collide_mask(self):
    pass
  def set_color(self):
    pass
  def set_color_off(self):
    pass
  def set_color_scale(self):
    pass
  def set_color_scale_off(self):
    pass
  def set_compass(self):
    pass
  def set_depth_offset(self):
    pass
  def set_depth_test(self):
    pass
  def set_depth_write(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_fluid_pos(self):
    pass
  def set_fluid_x(self):
    pass
  def set_fluid_y(self):
    pass
  def set_fluid_z(self):
    pass
  def set_fog(self):
    pass
  def set_fog_off(self):
    pass
  def set_h(self):
    pass
  def set_hpr(self):
    pass
  def set_hpr_scale(self):
    pass
  def set_instance_count(self):
    pass
  def set_light(self):
    pass
  def set_light_off(self):
    pass
  def set_mat(self):
    pass
  def set_material(self):
    pass
  def set_material_off(self):
    pass
  def set_max_search_depth():
    pass
  def set_name(self):
    pass
  def set_normal_map(self):
    pass
  def set_occluder(self):
    pass
  def set_p(self):
    pass
  def set_pos(self):
    pass
  def set_pos_hpr(self):
    pass
  def set_pos_hpr_scale(self):
    pass
  def set_pos_hpr_scale_shear(self):
    pass
  def set_pos_quat(self):
    pass
  def set_pos_quat_scale(self):
    pass
  def set_pos_quat_scale_shear(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_quat(self):
    pass
  def set_quat_scale(self):
    pass
  def set_r(self):
    pass
  def set_render_mode(self):
    pass
  def set_render_mode_filled(self):
    pass
  def set_render_mode_perspective(self):
    pass
  def set_render_mode_thickness(self):
    pass
  def set_render_mode_wireframe(self):
    pass
  def set_sa(self):
    pass
  def set_sb(self):
    pass
  def set_scale(self):
    pass
  def set_scissor(self):
    pass
  def set_sg(self):
    pass
  def set_shader(self):
    pass
  def set_shader_auto(self):
    pass
  def set_shader_input(self):
    pass
  def set_shader_off(self):
    pass
  def set_shear(self):
    pass
  def set_shxy(self):
    pass
  def set_shxz(self):
    pass
  def set_shyz(self):
    pass
  def set_sr(self):
    pass
  def set_state(self):
    pass
  def set_sx(self):
    pass
  def set_sy(self):
    pass
  def set_sz(self):
    pass
  def set_tag(self):
    pass
  def set_tex_gen(self):
    pass
  def set_tex_hpr(self):
    pass
  def set_tex_offset(self):
    pass
  def set_tex_pos(self):
    pass
  def set_tex_projector(self):
    pass
  def set_tex_rotate(self):
    pass
  def set_tex_scale(self):
    pass
  def set_tex_transform(self):
    pass
  def set_texture(self):
    pass
  def set_texture_off(self):
    pass
  def set_transform(self):
    pass
  def set_transparency(self):
    pass
  def set_two_sided(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def shearInterval():
    pass
  def show(self):
    pass
  def showAllDescendants():
    pass
  def showBounds(self):
    pass
  def showCS():
    pass
  def showSiblings():
    pass
  def showThrough(self):
    pass
  def showTightBounds(self):
    pass
  def show_bounds(self):
    pass
  def show_through(self):
    pass
  def show_tight_bounds(self):
    pass
  def stash(self):
    pass
  def stashTo(self):
    pass
  def stash_to(self):
    pass
  def subdivideCollisions():
    pass
  def toggleVis():
    pass
  def unifyTextureStages(self):
    pass
  def unify_texture_stages(self):
    pass
  def unstash(self):
    pass
  def unstashAll(self):
    pass
  def unstash_all(self):
    pass
  def verifyComplete(self):
    pass
  def verify_complete(self):
    pass
  def writeBamFile(self):
    pass
  def writeBamStream(self):
    pass
  def writeBounds(self):
    pass
  def write_bam_file(self):
    pass
  def write_bam_stream(self):
    pass
  def write_bounds(self):
    pass
  def wrtReparentTo(self):
    pass
  def wrt_reparent_to(self):
    pass
class NodePathCollection:
  def __init__(self):
    pass
  def addPath(self):
    pass
  def addPathsFrom(self):
    pass
  def add_path(self):
    pass
  def add_paths_from(self):
    pass
  def append(self):
    pass
  def asList():
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def composeColorScale(self):
    pass
  def compose_color_scale(self):
    pass
  def detach(self):
    pass
  def extend(self):
    pass
  def findAllMatches(self):
    pass
  def find_all_matches(self):
    pass
  def getCollideMask(self):
    pass
  def getNumPaths(self):
    pass
  def getPath(self):
    pass
  def getPaths(self):
    pass
  def getTightBounds():
    pass
  def get_collide_mask(self):
    pass
  def get_num_paths(self):
    pass
  def get_path(self):
    pass
  def get_paths(self):
    pass
  def hasPath(self):
    pass
  def has_path(self):
    pass
  def hide(self):
    pass
  def isEmpty(self):
    pass
  def is_empty(self):
    pass
  def ls(self):
    pass
  def output(self):
    pass
  def removeDuplicatePaths(self):
    pass
  def removePath(self):
    pass
  def removePathsFrom(self):
    pass
  def remove_duplicate_paths(self):
    pass
  def remove_path(self):
    pass
  def remove_paths_from(self):
    pass
  def reparentTo(self):
    pass
  def reparent_to(self):
    pass
  def setAttrib(self):
    pass
  def setCollideMask(self):
    pass
  def setColor(self):
    pass
  def setColorScale(self):
    pass
  def setTexture(self):
    pass
  def setTextureOff(self):
    pass
  def set_attrib(self):
    pass
  def set_collide_mask(self):
    pass
  def set_color(self):
    pass
  def set_color_scale(self):
    pass
  def set_texture(self):
    pass
  def set_texture_off(self):
    pass
  def show(self):
    pass
  def size(self):
    pass
  def stash(self):
    pass
  def unstash(self):
    pass
  def write(self):
    pass
  def wrtReparentTo(self):
    pass
  def wrt_reparent_to(self):
    pass
class NodeVertexTransform:
  def __init__(self):
    pass
  def accumulateMatrix(self):
    pass
  def accumulate_matrix(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def getMatrix(self):
    pass
  def getModified(self):
    pass
  def get_next_modified():
    pass
  def getNode(self):
    pass
  def getPrev(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def get_matrix(self):
    pass
  def get_modified(self):
    pass
  def get_next_modified():
    pass
  def get_node(self):
    pass
  def get_prev(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def multMatrix(self):
    pass
  def mult_matrix(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class NurbsCurve:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjustPoint(self):
    pass
  def adjustPt(self):
    pass
  def adjustTangent(self):
    pass
  def adjust_draw_mask(self):
    pass
  def adjust_point(self):
    pass
  def adjust_pt(self):
    pass
  def adjust_tangent(self):
    pass
  def appendCv(self):
    pass
  def append_cv(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcLength(self):
    pass
  def calc_length(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToNurbsCurve(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_NurbsCurve(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findLength(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_length(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurveType(self):
    pass
  def getCv(self):
    pass
  def getCvPoint(self):
    pass
  def getCvWeight(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKnot(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxT(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumCvs(self):
    pass
  def getNumDimensions(self):
    pass
  def getNumKnots(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOrder(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPt(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTangent(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve_type(self):
    pass
  def get_cv(self):
    pass
  def get_cv_point(self):
    pass
  def get_cv_weight(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_knot(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_t(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_cvs(self):
    pass
  def get_num_dimensions(self):
    pass
  def get_num_knots(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_order(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_pt(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tangent(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def insertCv(self):
    pass
  def insert_cv(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeAllCvs(self):
    pass
  def removeChild(self):
    pass
  def removeCv(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_all_cvs(self):
    pass
  def remove_child(self):
    pass
  def remove_cv(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurveType(self):
    pass
  def setCv(self):
    pass
  def setCvPoint(self):
    pass
  def setCvWeight(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setKnot(self):
    pass
  def setName(self):
    pass
  def setNumDimensions(self):
    pass
  def setOrder(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve_type(self):
    pass
  def set_cv(self):
    pass
  def set_cv_point(self):
    pass
  def set_cv_weight(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_knot(self):
    pass
  def set_name(self):
    pass
  def set_num_dimensions(self):
    pass
  def set_order(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToNurbsCurveInterface(self):
    pass
  def upcastToPiecewiseCurve(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_NurbsCurveInterface(self):
    pass
  def upcast_to_PiecewiseCurve(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeCv(self):
    pass
  def writeEgg(self):
    pass
  def write_cv(self):
    pass
  def write_egg(self):
    pass
class NurbsCurveEvaluator:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def evaluate(self):
    pass
  def get_class_type():
    pass
  def getExtendedVertex(self):
    pass
  def getKnot(self):
    pass
  def getKnots(self):
    pass
  def getNumKnots(self):
    pass
  def getNumSegments(self):
    pass
  def getNumVertices(self):
    pass
  def getOrder(self):
    pass
  def getRefCount(self):
    pass
  def getVertex(self):
    pass
  def getVertexSpace(self):
    pass
  def getVertices(self):
    pass
  def get_class_type():
    pass
  def get_extended_vertex(self):
    pass
  def get_knot(self):
    pass
  def get_knots(self):
    pass
  def get_num_knots(self):
    pass
  def get_num_segments(self):
    pass
  def get_num_vertices(self):
    pass
  def get_order(self):
    pass
  def get_ref_count(self):
    pass
  def get_vertex(self):
    pass
  def get_vertex_space(self):
    pass
  def get_vertices(self):
    pass
  def normalizeKnots(self):
    pass
  def normalize_knots(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def reset(self):
    pass
  def setExtendedVertex(self):
    pass
  def setKnot(self):
    pass
  def setOrder(self):
    pass
  def setVertex(self):
    pass
  def setVertexSpace(self):
    pass
  def set_extended_vertex(self):
    pass
  def set_knot(self):
    pass
  def set_order(self):
    pass
  def set_vertex(self):
    pass
  def set_vertex_space(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class NurbsCurveInterface:
  def __init__(self):
    pass
  def appendCv(self):
    pass
  def append_cv(self):
    pass
  def downcastToNurbsCurve(self):
    pass
  def downcast_to_NurbsCurve(self):
    pass
  def get_class_type():
    pass
  def getCv(self):
    pass
  def getCvPoint(self):
    pass
  def getCvWeight(self):
    pass
  def getKnot(self):
    pass
  def getNumCvs(self):
    pass
  def getNumKnots(self):
    pass
  def getOrder(self):
    pass
  def get_class_type():
    pass
  def get_cv(self):
    pass
  def get_cv_point(self):
    pass
  def get_cv_weight(self):
    pass
  def get_knot(self):
    pass
  def get_num_cvs(self):
    pass
  def get_num_knots(self):
    pass
  def get_order(self):
    pass
  def insertCv(self):
    pass
  def insert_cv(self):
    pass
  def removeAllCvs(self):
    pass
  def removeCv(self):
    pass
  def remove_all_cvs(self):
    pass
  def remove_cv(self):
    pass
  def setCv(self):
    pass
  def setCvPoint(self):
    pass
  def setCvWeight(self):
    pass
  def setKnot(self):
    pass
  def setOrder(self):
    pass
  def set_cv(self):
    pass
  def set_cv_point(self):
    pass
  def set_cv_weight(self):
    pass
  def set_knot(self):
    pass
  def set_order(self):
    pass
  def writeCv(self):
    pass
  def write_cv(self):
    pass
class NurbsCurveResult:
  def __init__(self):
    pass
  def adaptiveSample(self):
    pass
  def adaptive_sample(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def evalExtendedPoint(self):
    pass
  def evalPoint(self):
    pass
  def evalSegmentExtendedPoint(self):
    pass
  def evalSegmentPoint(self):
    pass
  def evalSegmentTangent(self):
    pass
  def evalTangent(self):
    pass
  def eval_extended_point(self):
    pass
  def eval_point(self):
    pass
  def eval_segment_extended_point(self):
    pass
  def eval_segment_point(self):
    pass
  def eval_segment_tangent(self):
    pass
  def eval_tangent(self):
    pass
  def get_class_type():
    pass
  def getEndT(self):
    pass
  def getNumSamples(self):
    pass
  def getNumSegments(self):
    pass
  def getRefCount(self):
    pass
  def getSamplePoint(self):
    pass
  def getSamplePoints(self):
    pass
  def getSampleT(self):
    pass
  def getSampleTs(self):
    pass
  def getSegmentT(self):
    pass
  def getStartT(self):
    pass
  def get_class_type():
    pass
  def get_end_t(self):
    pass
  def get_num_samples(self):
    pass
  def get_num_segments(self):
    pass
  def get_ref_count(self):
    pass
  def get_sample_point(self):
    pass
  def get_sample_points(self):
    pass
  def get_sample_t(self):
    pass
  def get_sample_ts(self):
    pass
  def get_segment_t(self):
    pass
  def get_start_t(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class NurbsSurfaceEvaluator:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def evaluate(self):
    pass
  def get_class_type():
    pass
  def getExtendedVertex(self):
    pass
  def getNumUKnots(self):
    pass
  def getNumUSegments(self):
    pass
  def getNumUVertices(self):
    pass
  def getNumVKnots(self):
    pass
  def getNumVSegments(self):
    pass
  def getNumVVertices(self):
    pass
  def getRefCount(self):
    pass
  def getUKnot(self):
    pass
  def getUKnots(self):
    pass
  def getUOrder(self):
    pass
  def getVKnot(self):
    pass
  def getVKnots(self):
    pass
  def getVOrder(self):
    pass
  def getVertex(self):
    pass
  def getVertexSpace(self):
    pass
  def get_class_type():
    pass
  def get_extended_vertex(self):
    pass
  def get_num_u_knots(self):
    pass
  def get_num_u_segments(self):
    pass
  def get_num_u_vertices(self):
    pass
  def get_num_v_knots(self):
    pass
  def get_num_v_segments(self):
    pass
  def get_num_v_vertices(self):
    pass
  def get_ref_count(self):
    pass
  def get_u_knot(self):
    pass
  def get_u_knots(self):
    pass
  def get_u_order(self):
    pass
  def get_v_knot(self):
    pass
  def get_v_knots(self):
    pass
  def get_v_order(self):
    pass
  def get_vertex(self):
    pass
  def get_vertex_space(self):
    pass
  def normalizeUKnots(self):
    pass
  def normalizeVKnots(self):
    pass
  def normalize_u_knots(self):
    pass
  def normalize_v_knots(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def reset(self):
    pass
  def setExtendedVertex(self):
    pass
  def setUKnot(self):
    pass
  def setUOrder(self):
    pass
  def setVKnot(self):
    pass
  def setVOrder(self):
    pass
  def setVertex(self):
    pass
  def setVertexSpace(self):
    pass
  def set_extended_vertex(self):
    pass
  def set_u_knot(self):
    pass
  def set_u_order(self):
    pass
  def set_v_knot(self):
    pass
  def set_v_order(self):
    pass
  def set_vertex(self):
    pass
  def set_vertex_space(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class NurbsSurfaceResult:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def evalExtendedPoint(self):
    pass
  def evalNormal(self):
    pass
  def evalPoint(self):
    pass
  def evalSegmentExtendedPoint(self):
    pass
  def evalSegmentNormal(self):
    pass
  def evalSegmentPoint(self):
    pass
  def eval_extended_point(self):
    pass
  def eval_normal(self):
    pass
  def eval_point(self):
    pass
  def eval_segment_extended_point(self):
    pass
  def eval_segment_normal(self):
    pass
  def eval_segment_point(self):
    pass
  def get_class_type():
    pass
  def getEndU(self):
    pass
  def getEndV(self):
    pass
  def getNumUSegments(self):
    pass
  def getNumVSegments(self):
    pass
  def getRefCount(self):
    pass
  def getSegmentU(self):
    pass
  def getSegmentV(self):
    pass
  def getStartU(self):
    pass
  def getStartV(self):
    pass
  def get_class_type():
    pass
  def get_end_u(self):
    pass
  def get_end_v(self):
    pass
  def get_num_u_segments(self):
    pass
  def get_num_v_segments(self):
    pass
  def get_ref_count(self):
    pass
  def get_segment_u(self):
    pass
  def get_segment_v(self):
    pass
  def get_start_u(self):
    pass
  def get_start_v(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class OccluderEffect:
  def __init__(self):
    pass
  def addOnOccluder(self):
    pass
  def add_on_occluder(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getNumOnOccluders(self):
    pass
  def getOnOccluder(self):
    pass
  def getOnOccluders(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_num_on_occluders(self):
    pass
  def get_on_occluder(self):
    pass
  def get_on_occluders(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasOnOccluder(self):
    pass
  def has_on_occluder(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeOnOccluder(self):
    pass
  def remove_on_occluder(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class OccluderNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMinCoverage(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumVertices(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_min_coverage(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_vertices(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isDoubleSided(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_double_sided(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setDoubleSided(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMinCoverage(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVertices(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_double_sided(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_min_coverage(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_vertices(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class OmniBoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def around(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class OrthographicLens:
  def __init__(self):
    pass
  FCAspectRatio = int

  FCCameraPlane = int

  FCKeystone = int

  FCOffAxis = int

  FCRoll = int

  FCShear = int

  FC_aspect_ratio = int

  FC_camera_plane = int

  FC_keystone = int

  FC_off_axis = int

  FC_roll = int

  FC_shear = int

  SCLeft = int

  SCMono = int

  SCRight = int

  SCStereo = int

  SC_left = int

  SC_mono = int

  SC_right = int

  SC_stereo = int

  def clear(self):
    pass
  def clearKeystone(self):
    pass
  def clearViewMat(self):
    pass
  def clear_keystone(self):
    pass
  def clear_view_mat(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def extrude(self):
    pass
  def extrudeVec(self):
    pass
  def extrude_vec(self):
    pass
  def getAspectRatio(self):
    pass
  def getBamModified(self):
    pass
  def getChangeEvent(self):
    pass
  def get_class_type():
    pass
  def getConvergenceDistance(self):
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def getFar(self):
    pass
  def getFilmMat(self):
    pass
  def getFilmMatInv(self):
    pass
  def getFilmOffset(self):
    pass
  def getFilmSize(self):
    pass
  def getFocalLength(self):
    pass
  def getFov(self):
    pass
  def getHfov(self):
    pass
  def getInterocularDistance(self):
    pass
  def getKeystone(self):
    pass
  def getLastChange(self):
    pass
  def getLensMat(self):
    pass
  def getLensMatInv(self):
    pass
  def getMinFov(self):
    pass
  def getNear(self):
    pass
  def getNodalPoint(self):
    pass
  def getProjectionMat(self):
    pass
  def getProjectionMatInv(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUpVector(self):
    pass
  def getVfov(self):
    pass
  def getViewHpr(self):
    pass
  def getViewMat(self):
    pass
  def getViewVector(self):
    pass
  def get_aspect_ratio(self):
    pass
  def get_bam_modified(self):
    pass
  def get_change_event(self):
    pass
  def get_class_type():
    pass
  def get_convergence_distance(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def get_far(self):
    pass
  def get_film_mat(self):
    pass
  def get_film_mat_inv(self):
    pass
  def get_film_offset(self):
    pass
  def get_film_size(self):
    pass
  def get_focal_length(self):
    pass
  def get_fov(self):
    pass
  def get_hfov(self):
    pass
  def get_interocular_distance(self):
    pass
  def get_keystone(self):
    pass
  def get_last_change(self):
    pass
  def get_lens_mat(self):
    pass
  def get_lens_mat_inv(self):
    pass
  def get_min_fov(self):
    pass
  def get_near(self):
    pass
  def get_nodal_point(self):
    pass
  def get_projection_mat(self):
    pass
  def get_projection_mat_inv(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_up_vector(self):
    pass
  def get_vfov(self):
    pass
  def get_view_hpr(self):
    pass
  def get_view_mat(self):
    pass
  def get_view_vector(self):
    pass
  def isExactType(self):
    pass
  def isLinear(self):
    pass
  def isOfType(self):
    pass
  def isOrthographic(self):
    pass
  def isPerspective(self):
    pass
  def is_exact_type(self):
    pass
  def is_linear(self):
    pass
  def is_of_type(self):
    pass
  def is_orthographic(self):
    pass
  def is_perspective(self):
    pass
  def makeBounds(self):
    pass
  def makeCopy(self):
    pass
  def makeGeometry(self):
    pass
  def make_bounds(self):
    pass
  def make_copy(self):
    pass
  def make_geometry(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def recomputeAll(self):
    pass
  def recompute_all(self):
    pass
  def ref(self):
    pass
  def setAspectRatio(self):
    pass
  def setChangeEvent(self):
    pass
  def setConvergenceDistance(self):
    pass
  def setCoordinateSystem(self):
    pass
  def setFar(self):
    pass
  def setFilmOffset(self):
    pass
  def setFilmSize(self):
    pass
  def setFocalLength(self):
    pass
  def setFov(self):
    pass
  def setFrustumFromCorners(self):
    pass
  def setInterocularDistance(self):
    pass
  def setKeystone(self):
    pass
  def setMinFov(self):
    pass
  def setNear(self):
    pass
  def setNearFar(self):
    pass
  def setViewHpr(self):
    pass
  def setViewMat(self):
    pass
  def setViewVector(self):
    pass
  def set_aspect_ratio(self):
    pass
  def set_change_event(self):
    pass
  def set_convergence_distance(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_far(self):
    pass
  def set_film_offset(self):
    pass
  def set_film_size(self):
    pass
  def set_focal_length(self):
    pass
  def set_fov(self):
    pass
  def set_frustum_from_corners(self):
    pass
  def set_interocular_distance(self):
    pass
  def set_keystone(self):
    pass
  def set_min_fov(self):
    pass
  def set_near(self):
    pass
  def set_near_far(self):
    pass
  def set_view_hpr(self):
    pass
  def set_view_mat(self):
    pass
  def set_view_vector(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
PCTHPR = int

PCTNONE = int

PCTT = int

PCTXYZ = int

PCT_HPR = int

PCT_NONE = int

PCT_T = int

PCT_XYZ = int

class PGButton:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  SDepressed = int

  SInactive = int

  SReady = int

  SRollover = int

  S_depressed = int

  S_inactive = int

  S_ready = int

  S_rollover = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addClickButton(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_click_button(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClickEvent(self):
    pass
  def get_click_prefix():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_click_event(self):
    pass
  def get_click_prefix():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasClickButton(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_click_button(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isButtonDown(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_button_down(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeClickButton(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_click_button(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_background_focus(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def setup(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGEntry:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  SFocus = int

  SInactive = int

  SNoFocus = int

  S_focus = int

  S_inactive = int

  S_no_focus = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearCursorDef(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_cursor_def(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getAcceptEvent(self):
    pass
  def getAcceptFailedEvent(self):
    pass
  def get_accept_failed_prefix():
    pass
  def get_accept_prefix():
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBlinkRate(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCandidateActive(self):
    pass
  def getCandidateInactive(self):
    pass
  def getCharacter(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCursorDef(self):
    pass
  def getCursorKeysActive(self):
    pass
  def getCursorPosition(self):
    pass
  def getCursorX(self):
    pass
  def getCursorY(self):
    pass
  def getCursormoveEvent(self):
    pass
  def get_cursormove_prefix():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getEraseEvent(self):
    pass
  def get_erase_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getGraphic(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxChars(self):
    pass
  def getMaxWidth(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumCharacters(self):
    pass
  def getNumChildren(self):
    pass
  def getNumLines(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getObscureMode(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getOverflowEvent(self):
    pass
  def getOverflowMode(self):
    pass
  def get_overflow_prefix():
    pass
  def getParent(self):
    pass
  def getPlainText(self):
    pass
  def getPlainWtext(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getProperties(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def getText(self):
    pass
  def getTextDef(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeEvent(self):
    pass
  def getTypeIndex(self):
    pass
  def get_type_prefix():
    pass
  def getUnexpectedChange(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def getWtext(self):
    pass
  def get_accept_event(self):
    pass
  def get_accept_failed_event(self):
    pass
  def get_accept_failed_prefix():
    pass
  def get_accept_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_blink_rate(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_candidate_active(self):
    pass
  def get_candidate_inactive(self):
    pass
  def get_character(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_cursor_X(self):
    pass
  def get_cursor_Y(self):
    pass
  def get_cursor_def(self):
    pass
  def get_cursor_keys_active(self):
    pass
  def get_cursor_position(self):
    pass
  def get_cursormove_event(self):
    pass
  def get_cursormove_prefix():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_erase_event(self):
    pass
  def get_erase_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_graphic(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_chars(self):
    pass
  def get_max_width(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_characters(self):
    pass
  def get_num_children(self):
    pass
  def get_num_lines(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_obscure_mode(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_overflow_event(self):
    pass
  def get_overflow_mode(self):
    pass
  def get_overflow_prefix():
    pass
  def get_parent(self):
    pass
  def get_plain_text(self):
    pass
  def get_plain_wtext(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_properties(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text(self):
    pass
  def get_text_def(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_event(self):
    pass
  def get_type_index(self):
    pass
  def get_type_prefix():
    pass
  def get_unexpected_change(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def get_wtext(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isWtext(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_wtext(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAcceptEnabled(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBlinkRate(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCandidateActive(self):
    pass
  def setCandidateInactive(self):
    pass
  def setCursorKeysActive(self):
    pass
  def setCursorPosition(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMaxChars(self):
    pass
  def setMaxWidth(self):
    pass
  def setName(self):
    pass
  def setNumLines(self):
    pass
  def setObscureMode(self):
    pass
  def setOverallHidden(self):
    pass
  def setOverflowMode(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def setText(self):
    pass
  def setTextDef(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setWtext(self):
    pass
  def set_accept_enabled(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_background_focus(self):
    pass
  def set_blink_rate(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_candidate_active(self):
    pass
  def set_candidate_inactive(self):
    pass
  def set_cursor_keys_active(self):
    pass
  def set_cursor_position(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_max_chars(self):
    pass
  def set_max_width(self):
    pass
  def set_name(self):
    pass
  def set_num_lines(self):
    pass
  def set_obscure_mode(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_overflow_mode(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text(self):
    pass
  def set_text_def(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_wtext(self):
    pass
  def setup(self):
    pass
  def setupMinimal(self):
    pass
  def setup_minimal(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGFrameStyle:
  def __init__(self):
    pass
  TBevelIn = int

  TBevelOut = int

  TFlat = int

  TGroove = int

  TNone = int

  TRidge = int

  TTextureBorder = int

  T_bevel_in = int

  T_bevel_out = int

  T_flat = int

  T_groove = int

  T_none = int

  T_ridge = int

  T_texture_border = int

  def assign(self):
    pass
  def clearTexture(self):
    pass
  def clear_texture(self):
    pass
  def getColor(self):
    pass
  def getInternalFrame(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getUvWidth(self):
    pass
  def getVisibleScale(self):
    pass
  def getWidth(self):
    pass
  def get_color(self):
    pass
  def get_internal_frame(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_uv_width(self):
    pass
  def get_visible_scale(self):
    pass
  def get_width(self):
    pass
  def hasTexture(self):
    pass
  def has_texture(self):
    pass
  def output(self):
    pass
  def setColor(self):
    pass
  def setTexture(self):
    pass
  def setType(self):
    pass
  def setUvWidth(self):
    pass
  def setVisibleScale(self):
    pass
  def setWidth(self):
    pass
  def set_color(self):
    pass
  def set_texture(self):
    pass
  def set_type(self):
    pass
  def set_uv_width(self):
    pass
  def set_visible_scale(self):
    pass
  def set_width(self):
    pass
class PGItem:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_background_focus(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGMouseWatcherBackground:
  def __init__(self):
    pass
  SFAnyButton = int

  SFMouseButton = int

  SFMousePosition = int

  SFOtherButton = int

  SF_any_button = int

  SF_mouse_button = int

  SF_mouse_position = int

  SF_other_button = int

  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActive(self):
    pass
  def getArea(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFrame(self):
    pass
  def getKeyboard(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getSuppressFlags(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active(self):
    pass
  def get_area(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_frame(self):
    pass
  def get_keyboard(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setActive(self):
    pass
  def setFrame(self):
    pass
  def setKeyboard(self):
    pass
  def setName(self):
    pass
  def setSort(self):
    pass
  def setSuppressFlags(self):
    pass
  def set_active(self):
    pass
  def set_frame(self):
    pass
  def set_keyboard(self):
    pass
  def set_name(self):
    pass
  def set_sort(self):
    pass
  def set_suppress_flags(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
class PGMouseWatcherParameter:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getButton(self):
    pass
  def getCandidateStringEncoded(self):
    pass
  def get_class_type():
    pass
  def getCursorPos(self):
    pass
  def getHighlightEnd(self):
    pass
  def getHighlightStart(self):
    pass
  def getKeycode(self):
    pass
  def getModifierButtons(self):
    pass
  def getMouse(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_button(self):
    pass
  def get_candidate_string_encoded(self):
    pass
  def get_class_type():
    pass
  def get_cursor_pos(self):
    pass
  def get_highlight_end(self):
    pass
  def get_highlight_start(self):
    pass
  def get_keycode(self):
    pass
  def get_modifier_buttons(self):
    pass
  def get_mouse(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasButton(self):
    pass
  def hasCandidate(self):
    pass
  def hasKeycode(self):
    pass
  def hasMouse(self):
    pass
  def has_button(self):
    pass
  def has_candidate(self):
    pass
  def has_keycode(self):
    pass
  def has_mouse(self):
    pass
  def isExactType(self):
    pass
  def isKeyrepeat(self):
    pass
  def isOfType(self):
    pass
  def isOutside(self):
    pass
  def is_exact_type(self):
    pass
  def is_keyrepeat(self):
    pass
  def is_of_type(self):
    pass
  def is_outside(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToMouseWatcherParameter(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_MouseWatcherParameter(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class PGScrollFrame:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearClipFrame(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearHorizontalSlider(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clearVerticalSlider(self):
    pass
  def clearVirtualFrame(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_clip_frame(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_horizontal_slider(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def clear_vertical_slider(self):
    pass
  def clear_virtual_frame(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGScrollFrame(self):
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGScrollFrame(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getAutoHide(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCanvasNode(self):
    pass
  def getCanvasParent(self):
    pass
  def getCanvasTransform(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClipFrame(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getHorizontalSlider(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getManagePieces(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVerticalSlider(self):
    pass
  def getVirtualFrame(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_auto_hide(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_canvas_node(self):
    pass
  def get_canvas_parent(self):
    pass
  def get_canvas_transform(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clip_frame(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_horizontal_slider(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_manage_pieces(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_vertical_slider(self):
    pass
  def get_virtual_frame(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasClipFrame(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasVirtualFrame(self):
    pass
  def has_attrib(self):
    pass
  def has_clip_frame(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_virtual_frame(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def remanage(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setAutoHide(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCanvasTransform(self):
    pass
  def setClipFrame(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setHorizontalSlider(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setManagePieces(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVerticalSlider(self):
    pass
  def setVirtualFrame(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_auto_hide(self):
    pass
  def set_background_focus(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_canvas_transform(self):
    pass
  def set_clip_frame(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_horizontal_slider(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_manage_pieces(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_vertical_slider(self):
    pass
  def set_virtual_frame(self):
    pass
  def setup(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPGVirtualFrame(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PGVirtualFrame(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGSliderBar:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearLeftButton(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearRightButton(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearThumbButton(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_left_button(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_right_button(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_thumb_button(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def getAdjustEvent(self):
    pass
  def get_adjust_prefix():
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getAxis(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLeftButton(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getManagePieces(self):
    pass
  def getMaxValue(self):
    pass
  def getMinValue(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getPageSize(self):
    pass
  def getParent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRatio(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getResizeThumb(self):
    pass
  def getRightButton(self):
    pass
  def getScrollSize(self):
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getThumbButton(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getValue(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_adjust_event(self):
    pass
  def get_adjust_prefix():
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_axis(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_left_button(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_manage_pieces(self):
    pass
  def get_max_value(self):
    pass
  def get_min_value(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_page_size(self):
    pass
  def get_parent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ratio(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_resize_thumb(self):
    pass
  def get_right_button(self):
    pass
  def get_scroll_size(self):
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_thumb_button(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_value(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isButtonDown(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_button_down(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def remanage(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setAxis(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLeftButton(self):
    pass
  def setManagePieces(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPageSize(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setRange(self):
    pass
  def setRatio(self):
    pass
  def setResizeThumb(self):
    pass
  def setRightButton(self):
    pass
  def setScrollSize(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setThumbButton(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setValue(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_axis(self):
    pass
  def set_background_focus(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_left_button(self):
    pass
  def set_manage_pieces(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_page_size(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_range(self):
    pass
  def set_ratio(self):
    pass
  def set_resize_thumb(self):
    pass
  def set_right_button(self):
    pass
  def set_scroll_size(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_thumb_button(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_value(self):
    pass
  def setupScrollBar(self):
    pass
  def setupSlider(self):
    pass
  def setup_scroll_bar(self):
    pass
  def setup_slider(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPGItem(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PGItem(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGTop:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getGroup(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMouseWatcher(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStartSort(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_group(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_mouse_watcher(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_start_sort(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMouseWatcher(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setStartSort(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_mouse_watcher(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_start_sort(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGVirtualFrame:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearClipFrame(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_clip_frame(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGScrollFrame(self):
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGScrollFrame(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCanvasNode(self):
    pass
  def getCanvasParent(self):
    pass
  def getCanvasTransform(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClipFrame(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_canvas_node(self):
    pass
  def get_canvas_parent(self):
    pass
  def get_canvas_transform(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clip_frame(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasClipFrame(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_clip_frame(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCanvasTransform(self):
    pass
  def setClipFrame(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_background_focus(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_canvas_transform(self):
    pass
  def set_clip_frame(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def setup(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PGWaitBar:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFrame(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearSound(self):
    pass
  def clearState(self):
    pass
  def clearStateDef(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_frame(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_sound(self):
    pass
  def clear_state(self):
    pass
  def clear_state_def(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToPGSliderBar(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_PGSliderBar(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def getActive(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBackgroundFocus(self):
    pass
  def getBamModified(self):
    pass
  def getBarStyle(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEnterEvent(self):
    pass
  def get_enter_prefix():
    pass
  def getExitEvent(self):
    pass
  def get_exit_prefix():
    pass
  def getFancyBits(self):
    pass
  def getFocus(self):
    pass
  def getFocusInEvent(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def getFocusOutEvent(self):
    pass
  def get_focus_out_prefix():
    pass
  def getFrame(self):
    pass
  def getFrameInvXform(self):
    pass
  def getFrameStyle(self):
    pass
  def getId(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getKeystrokeEvent(self):
    pass
  def get_keystroke_prefix():
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumStateDefs(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPercent(self):
    pass
  def getPressEvent(self):
    pass
  def get_press_prefix():
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRange(self):
    pass
  def getRefCount(self):
    pass
  def getReleaseEvent(self):
    pass
  def get_release_prefix():
    pass
  def getRepeatEvent(self):
    pass
  def get_repeat_prefix():
    pass
  def getSound(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStateDef(self):
    pass
  def getStateDefs(self):
    pass
  def getSuppressFlags(self):
    pass
  def getTag(self):
    pass
  def get_text_node():
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getValue(self):
    pass
  def getWithinEvent(self):
    pass
  def get_within_prefix():
    pass
  def getWithoutEvent(self):
    pass
  def get_without_prefix():
    pass
  def get_active(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_background_focus(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bar_style(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_enter_event(self):
    pass
  def get_enter_prefix():
    pass
  def get_exit_event(self):
    pass
  def get_exit_prefix():
    pass
  def get_fancy_bits(self):
    pass
  def get_focus(self):
    pass
  def get_focus_in_event(self):
    pass
  def get_focus_in_prefix():
    pass
  def get_focus_item():
    pass
  def get_focus_out_event(self):
    pass
  def get_focus_out_prefix():
    pass
  def get_frame(self):
    pass
  def get_frame_inv_xform(self):
    pass
  def get_frame_style(self):
    pass
  def get_id(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_keystroke_event(self):
    pass
  def get_keystroke_prefix():
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_state_defs(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_percent(self):
    pass
  def get_press_event(self):
    pass
  def get_press_prefix():
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_range(self):
    pass
  def get_ref_count(self):
    pass
  def get_release_event(self):
    pass
  def get_release_prefix():
    pass
  def get_repeat_event(self):
    pass
  def get_repeat_prefix():
    pass
  def get_sound(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_state_def(self):
    pass
  def get_state_defs(self):
    pass
  def get_suppress_flags(self):
    pass
  def get_tag(self):
    pass
  def get_text_node():
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_value(self):
    pass
  def get_within_event(self):
    pass
  def get_within_prefix():
    pass
  def get_without_event(self):
    pass
  def get_without_prefix():
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasFrame(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasSound(self):
    pass
  def hasStateDef(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_frame(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_sound(self):
    pass
  def has_state_def(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def instanceToStateDef(self):
    pass
  def instance_to_state_def(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttrib(self):
    pass
  def setBackgroundFocus(self):
    pass
  def setBarStyle(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFocus(self):
    pass
  def setFrame(self):
    pass
  def setFrameStyle(self):
    pass
  def setId(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setRange(self):
    pass
  def setSound(self):
    pass
  def setState(self):
    pass
  def setSuppressFlags(self):
    pass
  def setTag(self):
    pass
  def set_text_node():
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setValue(self):
    pass
  def set_active(self):
    pass
  def set_attrib(self):
    pass
  def set_background_focus(self):
    pass
  def set_bar_style(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_focus(self):
    pass
  def set_frame(self):
    pass
  def set_frame_style(self):
    pass
  def set_id(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_range(self):
    pass
  def set_sound(self):
    pass
  def set_state(self):
    pass
  def set_suppress_flags(self):
    pass
  def set_tag(self):
    pass
  def set_text_node():
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_value(self):
    pass
  def setup(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PNMBrush:
  def __init__(self):
    pass
  BEBlend = int

  BEDarken = int

  BELighten = int

  BESet = int

  BE_blend = int

  BE_darken = int

  BE_lighten = int

  BE_set = int

  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def make_image():
    pass
  def make_pixel():
    pass
  def make_spot():
    pass
  def make_transparent():
    pass
  def make_image():
    pass
  def make_pixel():
    pass
  def make_spot():
    pass
  def make_transparent():
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class PNMFileType:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getExtension(self):
    pass
  def getExtensions(self):
    pass
  def getName(self):
    pass
  def getNumExtensions(self):
    pass
  def getSuggestedExtension(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_extension(self):
    pass
  def get_extensions(self):
    pass
  def get_name(self):
    pass
  def get_num_extensions(self):
    pass
  def get_suggested_extension(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
class PNMFileTypeRegistry:
  def __init__(self):
    pass
  def get_global_ptr():
    pass
  def getNumTypes(self):
    pass
  def getType(self):
    pass
  def getTypeByHandle(self):
    pass
  def getTypeFromExtension(self):
    pass
  def getTypeFromMagicNumber(self):
    pass
  def getTypes(self):
    pass
  def get_global_ptr():
    pass
  def get_num_types(self):
    pass
  def get_type(self):
    pass
  def get_type_by_handle(self):
    pass
  def get_type_from_extension(self):
    pass
  def get_type_from_magic_number(self):
    pass
  def get_types(self):
    pass
  def write(self):
    pass
class PNMImage:
  def __init__(self):
    pass
  CTColor = int

  CTFourChannel = int

  CTGrayscale = int

  CTInvalid = int

  CTTwoChannel = int

  CT_color = int

  CT_four_channel = int

  CT_grayscale = int

  CT_invalid = int

  CT_two_channel = int

  def addAlpha(self):
    pass
  def add_alpha(self):
    pass
  def alphaFill(self):
    pass
  def alphaFillVal(self):
    pass
  def alpha_fill(self):
    pass
  def alpha_fill_val(self):
    pass
  def applyExponent(self):
    pass
  def apply_exponent(self):
    pass
  def assign(self):
    pass
  def blend(self):
    pass
  def blendSubImage(self):
    pass
  def blend_sub_image(self):
    pass
  def boxFilter(self):
    pass
  def boxFilterFrom(self):
    pass
  def box_filter(self):
    pass
  def box_filter_from(self):
    pass
  def clampVal(self):
    pass
  def clamp_val(self):
    pass
  def clear(self):
    pass
  def clearReadSize(self):
    pass
  def clear_read_size(self):
    pass
  def copyChannel(self):
    pass
  def copyFrom(self):
    pass
  def copyHeaderFrom(self):
    pass
  def copySubImage(self):
    pass
  def copy_channel(self):
    pass
  def copy_from(self):
    pass
  def copy_header_from(self):
    pass
  def copy_sub_image(self):
    pass
  def darkenSubImage(self):
    pass
  def darken_sub_image(self):
    pass
  def expandBorder(self):
    pass
  def expand_border(self):
    pass
  def fill(self):
    pass
  def fillVal(self):
    pass
  def fill_val(self):
    pass
  def fromVal(self):
    pass
  def from_val(self):
    pass
  def gammaCorrect(self):
    pass
  def gammaCorrectAlpha(self):
    pass
  def gamma_correct(self):
    pass
  def gamma_correct_alpha(self):
    pass
  def gaussianFilter(self):
    pass
  def gaussianFilterFrom(self):
    pass
  def gaussian_filter(self):
    pass
  def gaussian_filter_from(self):
    pass
  def getAlpha(self):
    pass
  def getAlphaVal(self):
    pass
  def getAverageGray(self):
    pass
  def getAverageXel(self):
    pass
  def getAverageXelA(self):
    pass
  def getBlue(self):
    pass
  def getBlueVal(self):
    pass
  def getBright(self):
    pass
  def getChannel(self):
    pass
  def getChannelVal(self):
    pass
  def getColorType(self):
    pass
  def getComment(self):
    pass
  def getGray(self):
    pass
  def getGrayVal(self):
    pass
  def getGreen(self):
    pass
  def getGreenVal(self):
    pass
  def getMaxval(self):
    pass
  def getNumChannels(self):
    pass
  def getPixel(self):
    pass
  def getReadXSize(self):
    pass
  def getReadYSize(self):
    pass
  def getRed(self):
    pass
  def getRedVal(self):
    pass
  def getType(self):
    pass
  def getXSize(self):
    pass
  def getXel(self):
    pass
  def getXelA(self):
    pass
  def getXelVal(self):
    pass
  def getYSize(self):
    pass
  def get_alpha(self):
    pass
  def get_alpha_val(self):
    pass
  def get_average_gray(self):
    pass
  def get_average_xel(self):
    pass
  def get_average_xel_a(self):
    pass
  def get_blue(self):
    pass
  def get_blue_val(self):
    pass
  def get_bright(self):
    pass
  def get_channel(self):
    pass
  def get_channel_val(self):
    pass
  def get_color_type(self):
    pass
  def get_comment(self):
    pass
  def get_gray(self):
    pass
  def get_gray_val(self):
    pass
  def get_green(self):
    pass
  def get_green_val(self):
    pass
  def get_maxval(self):
    pass
  def get_num_channels(self):
    pass
  def get_pixel(self):
    pass
  def get_read_x_size(self):
    pass
  def get_read_y_size(self):
    pass
  def get_red(self):
    pass
  def get_red_val(self):
    pass
  def get_type(self):
    pass
  def get_x_size(self):
    pass
  def get_xel(self):
    pass
  def get_xel_a(self):
    pass
  def get_xel_val(self):
    pass
  def get_y_size(self):
    pass
  def hasAlpha(self):
    pass
  def hasReadSize(self):
    pass
  def hasType(self):
    pass
  def has_alpha(self):
    pass
  def has_read_size(self):
    pass
  def has_type(self):
    pass
  def isGrayscale(self):
    pass
  def isValid(self):
    pass
  def is_grayscale(self):
    pass
  def is_valid(self):
    pass
  def lightenSubImage(self):
    pass
  def lighten_sub_image(self):
    pass
  def makeGrayscale(self):
    pass
  def makeHistogram(self):
    pass
  def makeRgb(self):
    pass
  def make_grayscale(self):
    pass
  def make_histogram(self):
    pass
  def make_rgb(self):
    pass
  def output(self):
    pass
  def perlinNoiseFill(self):
    pass
  def perlin_noise_fill(self):
    pass
  def quickFilterFrom(self):
    pass
  def quick_filter_from(self):
    pass
  def read(self):
    pass
  def readHeader(self):
    pass
  def read_magic_number():
    pass
  def read_header(self):
    pass
  def read_magic_number():
    pass
  def remixChannels(self):
    pass
  def remix_channels(self):
    pass
  def removeAlpha(self):
    pass
  def remove_alpha(self):
    pass
  def renderSpot(self):
    pass
  def render_spot(self):
    pass
  def reverseRows(self):
    pass
  def reverse_rows(self):
    pass
  def setAlpha(self):
    pass
  def setAlphaVal(self):
    pass
  def setBlue(self):
    pass
  def setBlueVal(self):
    pass
  def setChannel(self):
    pass
  def setChannelVal(self):
    pass
  def setColorType(self):
    pass
  def setComment(self):
    pass
  def setGray(self):
    pass
  def setGrayVal(self):
    pass
  def setGreen(self):
    pass
  def setGreenVal(self):
    pass
  def setMaxval(self):
    pass
  def setNumChannels(self):
    pass
  def setPixel(self):
    pass
  def setReadSize(self):
    pass
  def setRed(self):
    pass
  def setRedVal(self):
    pass
  def setType(self):
    pass
  def setXel(self):
    pass
  def setXelA(self):
    pass
  def setXelVal(self):
    pass
  def set_alpha(self):
    pass
  def set_alpha_val(self):
    pass
  def set_blue(self):
    pass
  def set_blue_val(self):
    pass
  def set_channel(self):
    pass
  def set_channel_val(self):
    pass
  def set_color_type(self):
    pass
  def set_comment(self):
    pass
  def set_gray(self):
    pass
  def set_gray_val(self):
    pass
  def set_green(self):
    pass
  def set_green_val(self):
    pass
  def set_maxval(self):
    pass
  def set_num_channels(self):
    pass
  def set_pixel(self):
    pass
  def set_read_size(self):
    pass
  def set_red(self):
    pass
  def set_red_val(self):
    pass
  def set_type(self):
    pass
  def set_xel(self):
    pass
  def set_xel_a(self):
    pass
  def set_xel_val(self):
    pass
  def takeFrom(self):
    pass
  def take_from(self):
    pass
  def threshold(self):
    pass
  def toVal(self):
    pass
  def to_val(self):
    pass
  def write(self):
    pass
class PNMImageHeader:
  def __init__(self):
    pass
  CTColor = int

  CTFourChannel = int

  CTGrayscale = int

  CTInvalid = int

  CTTwoChannel = int

  CT_color = int

  CT_four_channel = int

  CT_grayscale = int

  CT_invalid = int

  CT_two_channel = int

  def assign(self):
    pass
  def getColorType(self):
    pass
  def getComment(self):
    pass
  def getMaxval(self):
    pass
  def getNumChannels(self):
    pass
  def getType(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_color_type(self):
    pass
  def get_comment(self):
    pass
  def get_maxval(self):
    pass
  def get_num_channels(self):
    pass
  def get_type(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasAlpha(self):
    pass
  def hasType(self):
    pass
  def has_alpha(self):
    pass
  def has_type(self):
    pass
  def isGrayscale(self):
    pass
  def is_grayscale(self):
    pass
  def output(self):
    pass
  def readHeader(self):
    pass
  def read_magic_number():
    pass
  def read_header(self):
    pass
  def read_magic_number():
    pass
  def setComment(self):
    pass
  def setType(self):
    pass
  def set_comment(self):
    pass
  def set_type(self):
    pass
class PNMPainter:
  def __init__(self):
    pass
  def drawLine(self):
    pass
  def drawPoint(self):
    pass
  def drawRectangle(self):
    pass
  def draw_line(self):
    pass
  def draw_point(self):
    pass
  def draw_rectangle(self):
    pass
  def getFill(self):
    pass
  def getPen(self):
    pass
  def get_fill(self):
    pass
  def get_pen(self):
    pass
  def setFill(self):
    pass
  def setPen(self):
    pass
  def set_fill(self):
    pass
  def set_pen(self):
    pass
class PNMTextGlyph:
  def __init__(self):
    pass
  def getAdvance(self):
    pass
  def getBottom(self):
    pass
  def getHeight(self):
    pass
  def getInteriorFlag(self):
    pass
  def getLeft(self):
    pass
  def getRight(self):
    pass
  def getTop(self):
    pass
  def getValue(self):
    pass
  def getWidth(self):
    pass
  def get_advance(self):
    pass
  def get_bottom(self):
    pass
  def get_height(self):
    pass
  def get_interior_flag(self):
    pass
  def get_left(self):
    pass
  def get_right(self):
    pass
  def get_top(self):
    pass
  def get_value(self):
    pass
  def get_width(self):
    pass
  def place(self):
    pass
class PNMTextMaker:
  def __init__(self):
    pass
  ACenter = int

  ALeft = int

  ARight = int

  A_center = int

  A_left = int

  A_right = int

  def assign(self):
    pass
  def calcWidth(self):
    pass
  def calc_width(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def generateInto(self):
    pass
  def generate_into(self):
    pass
  def getAlign(self):
    pass
  def get_class_type():
    pass
  def getFg(self):
    pass
  def getFontPixelSize(self):
    pass
  def getGlyph(self):
    pass
  def getInterior(self):
    pass
  def getInteriorFlag(self):
    pass
  def getLineHeight(self):
    pass
  def getName(self):
    pass
  def getNativeAntialias(self):
    pass
  def getPixelSize(self):
    pass
  def getPixelsPerUnit(self):
    pass
  def getPointSize(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def getScaleFactor(self):
    pass
  def getSpaceAdvance(self):
    pass
  def get_align(self):
    pass
  def get_class_type():
    pass
  def get_fg(self):
    pass
  def get_font_pixel_size(self):
    pass
  def get_glyph(self):
    pass
  def get_interior(self):
    pass
  def get_interior_flag(self):
    pass
  def get_line_height(self):
    pass
  def get_name(self):
    pass
  def get_native_antialias(self):
    pass
  def get_pixel_size(self):
    pass
  def get_pixels_per_unit(self):
    pass
  def get_point_size(self):
    pass
  def get_points_per_inch():
    pass
  def get_points_per_unit():
    pass
  def get_scale_factor(self):
    pass
  def get_space_advance(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isValid(self):
    pass
  def is_valid(self):
    pass
  def output(self):
    pass
  def setAlign(self):
    pass
  def setFg(self):
    pass
  def setInterior(self):
    pass
  def setInteriorFlag(self):
    pass
  def setName(self):
    pass
  def setNativeAntialias(self):
    pass
  def setPixelSize(self):
    pass
  def setPixelsPerUnit(self):
    pass
  def setPointSize(self):
    pass
  def setScaleFactor(self):
    pass
  def set_align(self):
    pass
  def set_fg(self):
    pass
  def set_interior(self):
    pass
  def set_interior_flag(self):
    pass
  def set_name(self):
    pass
  def set_native_antialias(self):
    pass
  def set_pixel_size(self):
    pass
  def set_pixels_per_unit(self):
    pass
  def set_point_size(self):
    pass
  def set_scale_factor(self):
    pass
class PStatClient:
  def __init__(self):
    pass
  def clientConnect(self):
    pass
  def clientDisconnect(self):
    pass
  def clientIsConnected(self):
    pass
  def clientMainTick(self):
    pass
  def clientResumeAfterPause(self):
    pass
  def clientThreadTick(self):
    pass
  def client_connect(self):
    pass
  def client_disconnect(self):
    pass
  def client_is_connected(self):
    pass
  def client_main_tick(self):
    pass
  def client_resume_after_pause(self):
    pass
  def client_thread_tick(self):
    pass
  def closeConnection(self):
    pass
  def close_connection(self):
    pass
  def connect():
    pass
  def disconnect():
    pass
  def downcastToQueuedConnectionManager(self):
    pass
  def downcast_to_QueuedConnectionManager(self):
    pass
  def getClientName(self):
    pass
  def getCollector(self):
    pass
  def getCollectorFullname(self):
    pass
  def getCollectorName(self):
    pass
  def getCollectors(self):
    pass
  def getCurrentThread(self):
    pass
  def get_global_pstats():
    pass
  def get_host_name():
    pass
  def getMainThread(self):
    pass
  def getMaxRate(self):
    pass
  def getNumCollectors(self):
    pass
  def getNumThreads(self):
    pass
  def getRealTime(self):
    pass
  def getThread(self):
    pass
  def getThreadName(self):
    pass
  def getThreadObject(self):
    pass
  def getThreadSyncName(self):
    pass
  def getThreads(self):
    pass
  def get_client_name(self):
    pass
  def get_collector(self):
    pass
  def get_collector_fullname(self):
    pass
  def get_collector_name(self):
    pass
  def get_collectors(self):
    pass
  def get_current_thread(self):
    pass
  def get_global_pstats():
    pass
  def get_host_name():
    pass
  def get_main_thread(self):
    pass
  def get_max_rate(self):
    pass
  def get_num_collectors(self):
    pass
  def get_num_threads(self):
    pass
  def get_real_time(self):
    pass
  def get_thread(self):
    pass
  def get_thread_name(self):
    pass
  def get_thread_object(self):
    pass
  def get_thread_sync_name(self):
    pass
  def get_threads(self):
    pass
  def is_connected():
    pass
  def is_connected():
    pass
  def main_tick():
    pass
  def main_tick():
    pass
  def openTCPClientConnection(self):
    pass
  def openTCPServerRendezvous(self):
    pass
  def openUDPConnection(self):
    pass
  def open_TCP_client_connection(self):
    pass
  def open_TCP_server_rendezvous(self):
    pass
  def open_UDP_connection(self):
    pass
  def resume_after_pause():
    pass
  def resume_after_pause():
    pass
  def setClientName(self):
    pass
  def setMaxRate(self):
    pass
  def set_client_name(self):
    pass
  def set_max_rate(self):
    pass
  def thread_tick():
    pass
  def thread_tick():
    pass
  def upcastToConnectionManager(self):
    pass
  def upcast_to_ConnectionManager(self):
    pass
  def waitForReaders(self):
    pass
  def wait_for_readers(self):
    pass
class PStatCollector:
  def __init__(self):
    pass
  def addLevel(self):
    pass
  def addLevelNow(self):
    pass
  def addThreadLevel(self):
    pass
  def add_level(self):
    pass
  def add_level_now(self):
    pass
  def add_thread_level(self):
    pass
  def assign(self):
    pass
  def clearLevel(self):
    pass
  def clearThreadLevel(self):
    pass
  def clear_level(self):
    pass
  def clear_thread_level(self):
    pass
  def flushLevel(self):
    pass
  def flush_level(self):
    pass
  def getFullname(self):
    pass
  def getIndex(self):
    pass
  def getLevel(self):
    pass
  def getName(self):
    pass
  def getThreadLevel(self):
    pass
  def get_fullname(self):
    pass
  def get_index(self):
    pass
  def get_level(self):
    pass
  def get_name(self):
    pass
  def get_thread_level(self):
    pass
  def isActive(self):
    pass
  def isStarted(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_started(self):
    pass
  def is_valid(self):
    pass
  def output(self):
    pass
  def setLevel(self):
    pass
  def setThreadLevel(self):
    pass
  def set_level(self):
    pass
  def set_thread_level(self):
    pass
  def start(self):
    pass
  def stop(self):
    pass
  def subLevel(self):
    pass
  def subLevelNow(self):
    pass
  def subThreadLevel(self):
    pass
  def sub_level(self):
    pass
  def sub_level_now(self):
    pass
  def sub_thread_level(self):
    pass
class PStatCollectorForward:
  def __init__(self):
    pass
  def addLevel(self):
    pass
  def add_level(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class PStatThread:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getIndex(self):
    pass
  def getThread(self):
    pass
  def get_index(self):
    pass
  def get_thread(self):
    pass
  def newFrame(self):
    pass
  def new_frame(self):
    pass
class PTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_ushort:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LMatrix4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase2f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase3f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4d:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_LVecBase4f:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PTA_ushort:
  def __init__(self):
    pass
  def Getitem(self):
    pass
  def Setitem(self):
    pass
  def clear(self):
    pass
  def empty_array():
    pass
  def empty_array():
    pass
  def getData(self):
    pass
  def getElement(self):
    pass
  def getHash(self):
    pass
  def getNodeRefCount(self):
    pass
  def getRefCount(self):
    pass
  def getSubdata(self):
    pass
  def get_data(self):
    pass
  def get_element(self):
    pass
  def get_hash(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_ref_count(self):
    pass
  def get_subdata(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def popBack(self):
    pass
  def pop_back(self):
    pass
  def pushBack(self):
    pass
  def push_back(self):
    pass
  def setData(self):
    pass
  def setElement(self):
    pass
  def setSubdata(self):
    pass
  def set_data(self):
    pass
  def set_element(self):
    pass
  def set_subdata(self):
    pass
  def size(self):
    pass
class PandaNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ParametricCurve:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjustPoint(self):
    pass
  def adjustPt(self):
    pass
  def adjustTangent(self):
    pass
  def adjust_draw_mask(self):
    pass
  def adjust_point(self):
    pass
  def adjust_pt(self):
    pass
  def adjust_tangent(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcLength(self):
    pass
  def calc_length(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findLength(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_length(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurveType(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxT(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDimensions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPt(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTangent(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve_type(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_t(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_dimensions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_pt(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tangent(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurveType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNumDimensions(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_num_dimensions(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeEgg(self):
    pass
  def write_egg(self):
    pass
class ParametricCurveCollection:
  def __init__(self):
    pass
  def addCurve(self):
    pass
  def addCurves(self):
    pass
  def add_curve(self):
    pass
  def add_curves(self):
    pass
  def adjustHpr(self):
    pass
  def adjustXyz(self):
    pass
  def adjust_hpr(self):
    pass
  def adjust_xyz(self):
    pass
  def clear(self):
    pass
  def clearTimewarps(self):
    pass
  def clear_timewarps(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def evaluate(self):
    pass
  def evaluateHpr(self):
    pass
  def evaluateT(self):
    pass
  def evaluateXyz(self):
    pass
  def evaluate_hpr(self):
    pass
  def evaluate_t(self):
    pass
  def evaluate_xyz(self):
    pass
  def faceForward(self):
    pass
  def face_forward(self):
    pass
  def get_class_type():
    pass
  def getCurve(self):
    pass
  def getCurves(self):
    pass
  def getDefaultCurve(self):
    pass
  def getHprCurve(self):
    pass
  def getMaxT(self):
    pass
  def getNumCurves(self):
    pass
  def getNumTimewarps(self):
    pass
  def getRefCount(self):
    pass
  def getTimewarpCurve(self):
    pass
  def getTimewarpCurves(self):
    pass
  def getXyzCurve(self):
    pass
  def get_class_type():
    pass
  def get_curve(self):
    pass
  def get_curves(self):
    pass
  def get_default_curve(self):
    pass
  def get_hpr_curve(self):
    pass
  def get_max_t(self):
    pass
  def get_num_curves(self):
    pass
  def get_num_timewarps(self):
    pass
  def get_ref_count(self):
    pass
  def get_timewarp_curve(self):
    pass
  def get_timewarp_curves(self):
    pass
  def get_xyz_curve(self):
    pass
  def hasCurve(self):
    pass
  def has_curve(self):
    pass
  def makeEven(self):
    pass
  def make_even(self):
    pass
  def output(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeCurve(self):
    pass
  def remove_curve(self):
    pass
  def resetMaxT(self):
    pass
  def reset_max_t(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def write(self):
    pass
  def writeEgg(self):
    pass
  def write_egg(self):
    pass
class ParasiteBuffer:
  def __init__(self):
    pass
  FMParasite = int

  FMRefresh = int

  FMRender = int

  FM_parasite = int

  FM_refresh = int

  FM_render = int

  RTMBindOrCopy = int

  RTMCopyRam = int

  RTMCopyTexture = int

  RTMNone = int

  RTMTriggeredCopyRam = int

  RTMTriggeredCopyTexture = int

  RTM_bind_or_copy = int

  RTM_copy_ram = int

  RTM_copy_texture = int

  RTM_none = int

  RTM_triggered_copy_ram = int

  RTM_triggered_copy_texture = int

  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def addRenderTexture(self):
    pass
  def add_render_texture(self):
    pass
  def clearChildSort(self):
    pass
  def clearDeleteFlag(self):
    pass
  def clearRenderTextures(self):
    pass
  def clear_child_sort(self):
    pass
  def clear_delete_flag(self):
    pass
  def clear_render_textures(self):
    pass
  def countTextures(self):
    pass
  def count_textures(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getActiveDisplayRegion(self):
    pass
  def getActiveDisplayRegions(self):
    pass
  def getBamModified(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getDeleteFlag(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getEngine(self):
    pass
  def getFbProperties(self):
    pass
  def getFbXSize(self):
    pass
  def getFbYSize(self):
    pass
  def getGsg(self):
    pass
  def getInverted(self):
    pass
  def getLeftEyeColorMask(self):
    pass
  def getName(self):
    pass
  def getNumActiveDisplayRegions(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getOneShot(self):
    pass
  def getOverlayDisplayRegion(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelZoom(self):
    pass
  def getRedBlueStereo(self):
    pass
  def getRefCount(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRightEyeColorMask(self):
    pass
  def getRtmMode(self):
    pass
  def getSbsLeftDimensions(self):
    pass
  def getSbsLeftXSize(self):
    pass
  def getSbsLeftYSize(self):
    pass
  def getSbsRightDimensions(self):
    pass
  def getSbsRightXSize(self):
    pass
  def getSbsRightYSize(self):
    pass
  def getScreenshot(self):
    pass
  def getSideBySideStereo(self):
    pass
  def getSort(self):
    pass
  def getSupportsRenderTexture(self):
    pass
  def getSwapEyes(self):
    pass
  def getTexture(self):
    pass
  def getTextureCard(self):
    pass
  def getTexturePlane(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def get_active_display_region(self):
    pass
  def get_active_display_regions(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_delete_flag(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_engine(self):
    pass
  def get_fb_properties(self):
    pass
  def get_fb_x_size(self):
    pass
  def get_fb_y_size(self):
    pass
  def get_gsg(self):
    pass
  def get_inverted(self):
    pass
  def get_left_eye_color_mask(self):
    pass
  def get_name(self):
    pass
  def get_num_active_display_regions(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_one_shot(self):
    pass
  def get_overlay_display_region(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_red_blue_stereo(self):
    pass
  def get_ref_count(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_right_eye_color_mask(self):
    pass
  def get_rtm_mode(self):
    pass
  def get_sbs_left_dimensions(self):
    pass
  def get_sbs_left_x_size(self):
    pass
  def get_sbs_left_y_size(self):
    pass
  def get_sbs_right_dimensions(self):
    pass
  def get_sbs_right_x_size(self):
    pass
  def get_sbs_right_y_size(self):
    pass
  def get_screenshot(self):
    pass
  def get_side_by_side_stereo(self):
    pass
  def get_sort(self):
    pass
  def get_supports_render_texture(self):
    pass
  def get_swap_eyes(self):
    pass
  def get_texture(self):
    pass
  def get_texture_card(self):
    pass
  def get_texture_plane(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def hasSize(self):
    pass
  def hasTexture(self):
    pass
  def has_size(self):
    pass
  def has_texture(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isExactType(self):
    pass
  def isNonzeroSize(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def isValid(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_nonzero_size(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def is_valid(self):
    pass
  def makeCubeMap(self):
    pass
  def makeDisplayRegion(self):
    pass
  def makeMonoDisplayRegion(self):
    pass
  def make_screenshot_filename():
    pass
  def makeStereoDisplayRegion(self):
    pass
  def makeTextureBuffer(self):
    pass
  def make_cube_map(self):
    pass
  def make_display_region(self):
    pass
  def make_mono_display_region(self):
    pass
  def make_screenshot_filename():
    pass
  def make_stereo_display_region(self):
    pass
  def make_texture_buffer(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def removeAllDisplayRegions(self):
    pass
  def removeDisplayRegion(self):
    pass
  def remove_all_display_regions(self):
    pass
  def remove_display_region(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setChildSort(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setInverted(self):
    pass
  def setOneShot(self):
    pass
  def setOverlayDisplayRegion(self):
    pass
  def setPixelZoom(self):
    pass
  def setRedBlueStereo(self):
    pass
  def setSideBySideStereo(self):
    pass
  def setSize(self):
    pass
  def setSort(self):
    pass
  def setSwapEyes(self):
    pass
  def set_active(self):
    pass
  def set_child_sort(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_inverted(self):
    pass
  def set_one_shot(self):
    pass
  def set_overlay_display_region(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_red_blue_stereo(self):
    pass
  def set_side_by_side_stereo(self):
    pass
  def set_size(self):
    pass
  def set_sort(self):
    pass
  def set_swap_eyes(self):
    pass
  def setupRenderTexture(self):
    pass
  def setup_render_texture(self):
    pass
  def shareDepthBuffer(self):
    pass
  def share_depth_buffer(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def triggerCopy(self):
    pass
  def trigger_copy(self):
    pass
  def unref(self):
    pass
  def unshareDepthBuffer(self):
    pass
  def unshare_depth_buffer(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToGraphicsOutputBase(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_GraphicsOutputBase(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class PartBundle:
  def __init__(self):
    pass
  BTComponentwise = int

  BTComponentwiseQuat = int

  BTLinear = int

  BTNormalizedLinear = int

  BT_componentwise = int

  BT_componentwise_quat = int

  BT_linear = int

  BT_normalized_linear = int

  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def applyTransform(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def apply_transform(self):
    pass
  def assign(self):
    pass
  def bindAnim(self):
    pass
  def bind_anim(self):
    pass
  def clearAnimPreload(self):
    pass
  def clearControlEffects(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_anim_preload(self):
    pass
  def clear_control_effects(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def controlJoint(self):
    pass
  def control_joint(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def freezeJoint(self):
    pass
  def freeze_joint(self):
    pass
  def getAnimBlendFlag(self):
    pass
  def getAnimPreload(self):
    pass
  def getBamModified(self):
    pass
  def getBlendType(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getControlEffect(self):
    pass
  def getForcedChannel(self):
    pass
  def getFrameBlendFlag(self):
    pass
  def getName(self):
    pass
  def getNode(self):
    pass
  def getNodes(self):
    pass
  def getNumChildren(self):
    pass
  def getNumNodes(self):
    pass
  def getRefCount(self):
    pass
  def getRootXform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_anim_blend_flag(self):
    pass
  def get_anim_preload(self):
    pass
  def get_bam_modified(self):
    pass
  def get_blend_type(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_control_effect(self):
    pass
  def get_forced_channel(self):
    pass
  def get_frame_blend_flag(self):
    pass
  def get_name(self):
    pass
  def get_node(self):
    pass
  def get_nodes(self):
    pass
  def get_num_children(self):
    pass
  def get_num_nodes(self):
    pass
  def get_ref_count(self):
    pass
  def get_root_xform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def loadBindAnim(self):
    pass
  def load_bind_anim(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mergeAnimPreloads(self):
    pass
  def merge_anim_preloads(self):
    pass
  def modifyAnimPreload(self):
    pass
  def modify_anim_preload(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def releaseJoint(self):
    pass
  def release_joint(self):
    pass
  def setAnimBlendFlag(self):
    pass
  def setAnimPreload(self):
    pass
  def setBlendType(self):
    pass
  def setControlEffect(self):
    pass
  def setFrameBlendFlag(self):
    pass
  def setName(self):
    pass
  def setRootXform(self):
    pass
  def set_anim_blend_flag(self):
    pass
  def set_anim_preload(self):
    pass
  def set_blend_type(self):
    pass
  def set_control_effect(self):
    pass
  def set_frame_blend_flag(self):
    pass
  def set_name(self):
    pass
  def set_root_xform(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def update(self):
    pass
  def waitPending(self):
    pass
  def wait_pending(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
  def xform(self):
    pass
class PartBundleHandle:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getBundle(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def get_bundle(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def ref(self):
    pass
  def setBundle(self):
    pass
  def set_bundle(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class PartBundleNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getBundle(self):
    pass
  def getBundleHandle(self):
    pass
  def getBundleHandles(self):
    pass
  def getBundles(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumBundles(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_bundle(self):
    pass
  def get_bundle_handle(self):
    pass
  def get_bundle_handles(self):
    pass
  def get_bundles(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_bundles(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PartGroup:
  def __init__(self):
    pass
  def applyControl(self):
    pass
  def applyFreeze(self):
    pass
  def applyFreezeMatrix(self):
    pass
  def applyFreezeScalar(self):
    pass
  def apply_control(self):
    pass
  def apply_freeze(self):
    pass
  def apply_freeze_matrix(self):
    pass
  def apply_freeze_scalar(self):
    pass
  def assign(self):
    pass
  def clearForcedChannel(self):
    pass
  def clearName(self):
    pass
  def clear_forced_channel(self):
    pass
  def clear_name(self):
    pass
  def copySubgraph(self):
    pass
  def copy_subgraph(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def find_child(self):
    pass
  def getBamModified(self):
    pass
  def getChild(self):
    pass
  def getChildNamed(self):
    pass
  def getChildren(self):
    pass
  def get_class_type():
    pass
  def getForcedChannel(self):
    pass
  def getName(self):
    pass
  def getNumChildren(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_child(self):
    pass
  def get_child_named(self):
    pass
  def get_children(self):
    pass
  def get_class_type():
    pass
  def get_forced_channel(self):
    pass
  def get_name(self):
    pass
  def get_num_children(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isCharacterJoint(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_character_joint(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def sortDescendants(self):
    pass
  def sort_descendants(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def write(self):
    pass
  def writeWithValue(self):
    pass
  def write_with_value(self):
    pass
class PartSubset:
  def __init__(self):
    pass
  def addExcludeJoint(self):
    pass
  def addIncludeJoint(self):
    pass
  def add_exclude_joint(self):
    pass
  def add_include_joint(self):
    pass
  def append(self):
    pass
  def assign(self):
    pass
  def isIncludeEmpty(self):
    pass
  def is_include_empty(self):
    pass
  def matchesExclude(self):
    pass
  def matchesInclude(self):
    pass
  def matches_exclude(self):
    pass
  def matches_include(self):
    pass
  def output(self):
    pass
class PerlinNoise:
  def __init__(self):
    pass
  def getSeed(self):
    pass
  def get_seed(self):
    pass
class PerlinNoise2:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getSeed(self):
    pass
  def get_seed(self):
    pass
  def noise(self):
    pass
  def setScale(self):
    pass
  def set_scale(self):
    pass
class PerlinNoise3:
  def __init__(self):
    pass
  def assign(self):
    pass
  def getSeed(self):
    pass
  def get_seed(self):
    pass
  def noise(self):
    pass
  def setScale(self):
    pass
  def set_scale(self):
    pass
class PerspectiveLens:
  def __init__(self):
    pass
  FCAspectRatio = int

  FCCameraPlane = int

  FCKeystone = int

  FCOffAxis = int

  FCRoll = int

  FCShear = int

  FC_aspect_ratio = int

  FC_camera_plane = int

  FC_keystone = int

  FC_off_axis = int

  FC_roll = int

  FC_shear = int

  SCLeft = int

  SCMono = int

  SCRight = int

  SCStereo = int

  SC_left = int

  SC_mono = int

  SC_right = int

  SC_stereo = int

  def clear(self):
    pass
  def clearKeystone(self):
    pass
  def clearViewMat(self):
    pass
  def clear_keystone(self):
    pass
  def clear_view_mat(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def extrude(self):
    pass
  def extrudeVec(self):
    pass
  def extrude_vec(self):
    pass
  def getAspectRatio(self):
    pass
  def getBamModified(self):
    pass
  def getChangeEvent(self):
    pass
  def get_class_type():
    pass
  def getConvergenceDistance(self):
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def getFar(self):
    pass
  def getFilmMat(self):
    pass
  def getFilmMatInv(self):
    pass
  def getFilmOffset(self):
    pass
  def getFilmSize(self):
    pass
  def getFocalLength(self):
    pass
  def getFov(self):
    pass
  def getHfov(self):
    pass
  def getInterocularDistance(self):
    pass
  def getKeystone(self):
    pass
  def getLastChange(self):
    pass
  def getLensMat(self):
    pass
  def getLensMatInv(self):
    pass
  def getMinFov(self):
    pass
  def getNear(self):
    pass
  def getNodalPoint(self):
    pass
  def getProjectionMat(self):
    pass
  def getProjectionMatInv(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUpVector(self):
    pass
  def getVfov(self):
    pass
  def getViewHpr(self):
    pass
  def getViewMat(self):
    pass
  def getViewVector(self):
    pass
  def get_aspect_ratio(self):
    pass
  def get_bam_modified(self):
    pass
  def get_change_event(self):
    pass
  def get_class_type():
    pass
  def get_convergence_distance(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_default_far():
    pass
  def get_default_near():
    pass
  def get_far(self):
    pass
  def get_film_mat(self):
    pass
  def get_film_mat_inv(self):
    pass
  def get_film_offset(self):
    pass
  def get_film_size(self):
    pass
  def get_focal_length(self):
    pass
  def get_fov(self):
    pass
  def get_hfov(self):
    pass
  def get_interocular_distance(self):
    pass
  def get_keystone(self):
    pass
  def get_last_change(self):
    pass
  def get_lens_mat(self):
    pass
  def get_lens_mat_inv(self):
    pass
  def get_min_fov(self):
    pass
  def get_near(self):
    pass
  def get_nodal_point(self):
    pass
  def get_projection_mat(self):
    pass
  def get_projection_mat_inv(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_up_vector(self):
    pass
  def get_vfov(self):
    pass
  def get_view_hpr(self):
    pass
  def get_view_mat(self):
    pass
  def get_view_vector(self):
    pass
  def isExactType(self):
    pass
  def isLinear(self):
    pass
  def isOfType(self):
    pass
  def isOrthographic(self):
    pass
  def isPerspective(self):
    pass
  def is_exact_type(self):
    pass
  def is_linear(self):
    pass
  def is_of_type(self):
    pass
  def is_orthographic(self):
    pass
  def is_perspective(self):
    pass
  def makeBounds(self):
    pass
  def makeCopy(self):
    pass
  def makeGeometry(self):
    pass
  def make_bounds(self):
    pass
  def make_copy(self):
    pass
  def make_geometry(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def recomputeAll(self):
    pass
  def recompute_all(self):
    pass
  def ref(self):
    pass
  def setAspectRatio(self):
    pass
  def setChangeEvent(self):
    pass
  def setConvergenceDistance(self):
    pass
  def setCoordinateSystem(self):
    pass
  def setFar(self):
    pass
  def setFilmOffset(self):
    pass
  def setFilmSize(self):
    pass
  def setFocalLength(self):
    pass
  def setFov(self):
    pass
  def setFrustumFromCorners(self):
    pass
  def setInterocularDistance(self):
    pass
  def setKeystone(self):
    pass
  def setMinFov(self):
    pass
  def setNear(self):
    pass
  def setNearFar(self):
    pass
  def setViewHpr(self):
    pass
  def setViewMat(self):
    pass
  def setViewVector(self):
    pass
  def set_aspect_ratio(self):
    pass
  def set_change_event(self):
    pass
  def set_convergence_distance(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_far(self):
    pass
  def set_film_offset(self):
    pass
  def set_film_size(self):
    pass
  def set_focal_length(self):
    pass
  def set_fov(self):
    pass
  def set_frustum_from_corners(self):
    pass
  def set_interocular_distance(self):
    pass
  def set_keystone(self):
    pass
  def set_min_fov(self):
    pass
  def set_near(self):
    pass
  def set_near_far(self):
    pass
  def set_view_hpr(self):
    pass
  def set_view_mat(self):
    pass
  def set_view_vector(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PfmFile:
  def __init__(self):
    pass
  MFBack = int

  MFBoth = int

  MFFront = int

  MF_back = int

  MF_both = int

  MF_front = int

  def assign(self):
    pass
  def calcAveragePoint(self):
    pass
  def calcMinMax(self):
    pass
  def calc_average_point(self):
    pass
  def calc_min_max(self):
    pass
  def clear(self):
    pass
  def clearFlatTexcoordName(self):
    pass
  def clear_flat_texcoord_name(self):
    pass
  def computePlanarBounds(self):
    pass
  def computeSamplePoint(self):
    pass
  def compute_planar_bounds(self):
    pass
  def compute_sample_point(self):
    pass
  def generateVisMesh(self):
    pass
  def generateVisPoints(self):
    pass
  def generate_vis_mesh(self):
    pass
  def generate_vis_points(self):
    pass
  def getFlatTexcoordName(self):
    pass
  def getNumChannels(self):
    pass
  def getPoint(self):
    pass
  def getScale(self):
    pass
  def getVis2d(self):
    pass
  def getVisInverse(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZeroSpecial(self):
    pass
  def get_flat_texcoord_name(self):
    pass
  def get_num_channels(self):
    pass
  def get_point(self):
    pass
  def get_scale(self):
    pass
  def get_vis_2d(self):
    pass
  def get_vis_inverse(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_zero_special(self):
    pass
  def hasPoint(self):
    pass
  def has_point(self):
    pass
  def isValid(self):
    pass
  def is_valid(self):
    pass
  def merge(self):
    pass
  def modifyPoint(self):
    pass
  def modify_point(self):
    pass
  def project(self):
    pass
  def read(self):
    pass
  def resize(self):
    pass
  def reverseRows(self):
    pass
  def reverse_rows(self):
    pass
  def setFlatTexcoordName(self):
    pass
  def setPoint(self):
    pass
  def setVis2d(self):
    pass
  def setVisInverse(self):
    pass
  def setZeroSpecial(self):
    pass
  def set_flat_texcoord_name(self):
    pass
  def set_point(self):
    pass
  def set_vis_2d(self):
    pass
  def set_vis_inverse(self):
    pass
  def set_zero_special(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class PiecewiseCurve:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjustPoint(self):
    pass
  def adjustPt(self):
    pass
  def adjustTangent(self):
    pass
  def adjust_draw_mask(self):
    pass
  def adjust_point(self):
    pass
  def adjust_pt(self):
    pass
  def adjust_tangent(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcLength(self):
    pass
  def calc_length(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToNurbsCurve(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_NurbsCurve(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findLength(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_length(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurveType(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxT(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDimensions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPt(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTangent(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_2ndtangent(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve_type(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_t(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_dimensions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_pt(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tangent(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def recompute(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurveType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNumDimensions(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_num_dimensions(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stitch(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeEgg(self):
    pass
  def write_egg(self):
    pass
class PipeOcclusionCullTraverser:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def drawBoundingVolume(self):
    pass
  def draw_bounding_volume(self):
    pass
  def endTraverse(self):
    pass
  def end_traverse(self):
    pass
  def flush_level():
    pass
  def flush_level():
    pass
  def getBuffer(self):
    pass
  def getCameraMask(self):
    pass
  def getCameraTransform(self):
    pass
  def get_class_type():
    pass
  def getCurrentThread(self):
    pass
  def getDepthOffsetDecals(self):
    pass
  def getEffectiveIncompleteRender(self):
    pass
  def getGsg(self):
    pass
  def getInitialState(self):
    pass
  def getOcclusionMask(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getTagStateKey(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getViewFrustum(self):
    pass
  def getWorldTransform(self):
    pass
  def get_buffer(self):
    pass
  def get_camera_mask(self):
    pass
  def get_camera_transform(self):
    pass
  def get_class_type():
    pass
  def get_current_thread(self):
    pass
  def get_depth_offset_decals(self):
    pass
  def get_effective_incomplete_render(self):
    pass
  def get_gsg(self):
    pass
  def get_initial_state(self):
    pass
  def get_occlusion_mask(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_view_frustum(self):
    pass
  def get_world_transform(self):
    pass
  def hasTagStateKey(self):
    pass
  def has_tag_state_key(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def setCameraMask(self):
    pass
  def setOcclusionMask(self):
    pass
  def setScene(self):
    pass
  def setViewFrustum(self):
    pass
  def set_camera_mask(self):
    pass
  def set_occlusion_mask(self):
    pass
  def set_scene(self):
    pass
  def set_view_frustum(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def traverse(self):
    pass
  def traverseBelow(self):
    pass
  def traverse_below(self):
    pass
  def unref(self):
    pass
  def upcastToCullTraverser(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_CullTraverser(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class pixel:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def size():
    pass
class LPlanef:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPlaned:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LPlanef:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def distToPlane(self):
    pass
  def dist_to_plane(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def flip(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNormal(self):
    pass
  def getNumComponents(self):
    pass
  def getPoint(self):
    pass
  def getReflectionMat(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_normal(self):
    pass
  def get_num_components(self):
    pass
  def get_point(self):
    pass
  def get_reflection_mat(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def intersectsLine(self):
    pass
  def intersectsPlane(self):
    pass
  def intersects_line(self):
    pass
  def intersects_plane(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def write(self):
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class PlaneNode:
  def __init__(self):
    pass
  CECollision = int

  CEVisible = int

  CE_collision = int

  CE_visible = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getClipEffect(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPlane(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVizScale(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_clip_effect(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_plane(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_viz_scale(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setClipEffect(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPlane(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVizScale(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_clip_effect(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_plane(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_viz_scale(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def origin():
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def rfu():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LPoint4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class PointLight:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def cleanupAuxSceneData(self):
    pass
  def cleanup_aux_scene_data(self):
    pass
  def clearAttrib(self):
    pass
  def clearAuxSceneData(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTagState(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_aux_scene_data(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_tag_state(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttenuation(self):
    pass
  def getAttrib(self):
    pass
  def getAuxSceneData(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCameraMask(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInitialState(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getLodCenter(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPoint(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getSpecularColor(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTagState(self):
    pass
  def getTagStateKey(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attenuation(self):
    pass
  def get_attrib(self):
    pass
  def get_aux_scene_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_camera_mask(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_initial_state(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_lod_center(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_point(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_specular_color(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tag_state(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTagState(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tag_state(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isActive(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isShadowCaster(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_active(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_shadow_caster(self):
    pass
  def is_under_scene_root(self):
    pass
  def listAuxSceneData(self):
    pass
  def listTags(self):
    pass
  def list_aux_scene_data(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttenuation(self):
    pass
  def setAttrib(self):
    pass
  def setAuxSceneData(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCameraMask(self):
    pass
  def setColor(self):
    pass
  def setCullBounds(self):
    pass
  def setCullCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setInitialState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setLodCenter(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPoint(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setScene(self):
    pass
  def setShadowCaster(self):
    pass
  def setSpecularColor(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTagState(self):
    pass
  def setTagStateKey(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attenuation(self):
    pass
  def set_attrib(self):
    pass
  def set_aux_scene_data(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_camera_mask(self):
    pass
  def set_color(self):
    pass
  def set_cull_bounds(self):
    pass
  def set_cull_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_initial_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_lod_center(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_point(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_scene(self):
    pass
  def set_shadow_caster(self):
    pass
  def set_specular_color(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tag_state(self):
    pass
  def set_tag_state_key(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToCamera(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Camera(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PointerEventList:
  def __init__(self):
    pass
  def addEvent(self):
    pass
  def add_event(self):
    pass
  def clear(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encircles(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getDirection(self):
    pass
  def getDx(self):
    pass
  def getDy(self):
    pass
  def getInWindow(self):
    pass
  def getLength(self):
    pass
  def getNumEvents(self):
    pass
  def getRefCount(self):
    pass
  def getRotation(self):
    pass
  def getSequence(self):
    pass
  def getTime(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getXpos(self):
    pass
  def getYpos(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_direction(self):
    pass
  def get_dx(self):
    pass
  def get_dy(self):
    pass
  def get_in_window(self):
    pass
  def get_length(self):
    pass
  def get_num_events(self):
    pass
  def get_ref_count(self):
    pass
  def get_rotation(self):
    pass
  def get_sequence(self):
    pass
  def get_time(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_xpos(self):
    pass
  def get_ypos(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def matchPattern(self):
    pass
  def match_pattern(self):
    pass
  def output(self):
    pass
  def popFront(self):
    pass
  def pop_front(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def totalTurns(self):
    pass
  def total_turns(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class PointerToArrayBase__LMatrix3d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LMatrix3f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase2d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase2f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase3d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase3f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLMatrix4d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLMatrix4f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLVecBase4d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLVecBase4f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__unsigned_short_int__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LMatrix3d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LMatrix3f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase2d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase2f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase3d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__LVecBase3f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLMatrix4d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLMatrix4f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLVecBase4d__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__UnalignedLVecBase4f__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToArrayBase__unsigned_short_int__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__Connection__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LMatrix3d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LMatrix3f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase2d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase2f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase3d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase3f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLMatrix4d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLMatrix4f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLVecBase4d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLVecBase4f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__unsigned_short_int____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__Connection__:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LMatrix3d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LMatrix3f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase2d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase2f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase3d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__LVecBase3f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLMatrix4d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLMatrix4f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLVecBase4d____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__UnalignedLVecBase4f____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerToBase__ReferenceCountedVector__unsigned_short_int____:
  def __init__(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
class PointerTo__Connection__:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def p(self):
    pass
class PointerTo__Connection__:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def getHash(self):
    pass
  def get_hash(self):
    pass
  def isNull(self):
    pass
  def is_null(self):
    pass
  def output(self):
    pass
  def p(self):
    pass
class PolylightEffect:
  def __init__(self):
    pass
  CTAll = int

  CTProximal = int

  CT_all = int

  CT_proximal = int

  def addLight(self):
    pass
  def add_light(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getContrib(self):
    pass
  def getEffectCenter(self):
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWeight(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_contrib(self):
    pass
  def get_effect_center(self):
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_weight(self):
    pass
  def hasLight(self):
    pass
  def has_light(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeLight(self):
    pass
  def remove_light(self):
    pass
  def setContrib(self):
    pass
  def setEffectCenter(self):
    pass
  def setWeight(self):
    pass
  def set_contrib(self):
    pass
  def set_effect_center(self):
    pass
  def set_weight(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class PolylightNode:
  def __init__(self):
    pass
  ALINEAR = int

  AQUADRATIC = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  FCUSTOM = int

  FRANDOM = int

  FSIN = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compareTo(self):
    pass
  def compare_tags(self):
    pass
  def compare_to(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def disable(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def enable(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def eq(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def flickerOff(self):
    pass
  def flickerOn(self):
    pass
  def flicker_off(self):
    pass
  def flicker_on(self):
    pass
  def getA0(self):
    pass
  def getA1(self):
    pass
  def getA2(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttenuation(self):
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getColorScenegraph(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getFlickerType(self):
    pass
  def getFreq(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOffset(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPos(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRadius(self):
    pass
  def getRefCount(self):
    pass
  def getScale(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getStepSize(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_a0(self):
    pass
  def get_a1(self):
    pass
  def get_a2(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attenuation(self):
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_color_scenegraph(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_flicker_type(self):
    pass
  def get_freq(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_offset(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_pos(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_radius(self):
    pass
  def get_ref_count(self):
    pass
  def get_scale(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_step_size(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isEnabled(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isFlickering(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_enabled(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_flickering(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def lessThan(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setA0(self):
    pass
  def setA1(self):
    pass
  def setA2(self):
    pass
  def setAttenuation(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setColor(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFlickerType(self):
    pass
  def setFreq(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOffset(self):
    pass
  def setOverallHidden(self):
    pass
  def setPos(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setRadius(self):
    pass
  def setScale(self):
    pass
  def setState(self):
    pass
  def setStepSize(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_a0(self):
    pass
  def set_a1(self):
    pass
  def set_a2(self):
    pass
  def set_attenuation(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_color(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_flicker_type(self):
    pass
  def set_freq(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_offset(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_pos(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_radius(self):
    pass
  def set_scale(self):
    pass
  def set_state(self):
    pass
  def set_step_size(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class BitMask32:
  def __init__(self):
    pass
  def allOff():
    pass
  def allOn():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def floodBitsDown(self):
    pass
  def floodBitsUp(self):
    pass
  def floodDownInPlace(self):
    pass
  def floodUpInPlace(self):
    pass
  def flood_bits_down(self):
    pass
  def flood_bits_up(self):
    pass
  def flood_down_in_place(self):
    pass
  def flood_up_in_place(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getKey(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getWord(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_key(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_word(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def keepNextHighestBit(self):
    pass
  def keepNextLowestBit(self):
    pass
  def keep_next_highest_bit(self):
    pass
  def keep_next_lowest_bit(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def setWord(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def set_word(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class PortalNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def addVertex(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def add_vertex(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clearVertices(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def clear_vertices(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCellIn(self):
    pass
  def getCellOut(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getFromPortalMask(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getIntoPortalMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMaxDepth(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumVertices(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPortalGeom(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_cell_in(self):
    pass
  def get_cell_out(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_from_portal_mask(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_into_portal_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_max_depth(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_vertices(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_portal_geom(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isClipPlane(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOpen(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isVisible(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_clip_plane(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_open(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_visible(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCellIn(self):
    pass
  def setCellOut(self):
    pass
  def setClipPlane(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFromPortalMask(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setIntoPortalMask(self):
    pass
  def setMaxDepth(self):
    pass
  def setName(self):
    pass
  def setOpen(self):
    pass
  def setOverallHidden(self):
    pass
  def setPortalGeom(self):
    pass
  def setPortalMask(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVisible(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_cell_in(self):
    pass
  def set_cell_out(self):
    pass
  def set_clip_plane(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_from_portal_mask(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_into_portal_mask(self):
    pass
  def set_max_depth(self):
    pass
  def set_name(self):
    pass
  def set_open(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_portal_geom(self):
    pass
  def set_portal_mask(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_visible(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class PreparedGraphicsObjects:
  def __init__(self):
    pass
  def dequeueGeom(self):
    pass
  def dequeueIndexBuffer(self):
    pass
  def dequeueShader(self):
    pass
  def dequeueTexture(self):
    pass
  def dequeueVertexBuffer(self):
    pass
  def dequeue_geom(self):
    pass
  def dequeue_index_buffer(self):
    pass
  def dequeue_shader(self):
    pass
  def dequeue_texture(self):
    pass
  def dequeue_vertex_buffer(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def enqueueGeom(self):
    pass
  def enqueueIndexBuffer(self):
    pass
  def enqueueShader(self):
    pass
  def enqueueTexture(self):
    pass
  def enqueueVertexBuffer(self):
    pass
  def enqueue_geom(self):
    pass
  def enqueue_index_buffer(self):
    pass
  def enqueue_shader(self):
    pass
  def enqueue_texture(self):
    pass
  def enqueue_vertex_buffer(self):
    pass
  def get_class_type():
    pass
  def getGraphicsMemoryLimit(self):
    pass
  def getName(self):
    pass
  def getNumPrepared(self):
    pass
  def getNumPreparedGeoms(self):
    pass
  def getNumPreparedIndexBuffers(self):
    pass
  def getNumPreparedShaders(self):
    pass
  def getNumPreparedTextures(self):
    pass
  def getNumPreparedVertexBuffers(self):
    pass
  def getNumQueued(self):
    pass
  def getNumQueuedGeoms(self):
    pass
  def getNumQueuedIndexBuffers(self):
    pass
  def getNumQueuedShaders(self):
    pass
  def getNumQueuedTextures(self):
    pass
  def getNumQueuedVertexBuffers(self):
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_graphics_memory_limit(self):
    pass
  def get_name(self):
    pass
  def get_num_prepared(self):
    pass
  def get_num_prepared_geoms(self):
    pass
  def get_num_prepared_index_buffers(self):
    pass
  def get_num_prepared_shaders(self):
    pass
  def get_num_prepared_textures(self):
    pass
  def get_num_prepared_vertex_buffers(self):
    pass
  def get_num_queued(self):
    pass
  def get_num_queued_geoms(self):
    pass
  def get_num_queued_index_buffers(self):
    pass
  def get_num_queued_shaders(self):
    pass
  def get_num_queued_textures(self):
    pass
  def get_num_queued_vertex_buffers(self):
    pass
  def get_ref_count(self):
    pass
  def isGeomPrepared(self):
    pass
  def isGeomQueued(self):
    pass
  def isIndexBufferPrepared(self):
    pass
  def isIndexBufferQueued(self):
    pass
  def isShaderPrepared(self):
    pass
  def isShaderQueued(self):
    pass
  def isTexturePrepared(self):
    pass
  def isTextureQueued(self):
    pass
  def isVertexBufferPrepared(self):
    pass
  def isVertexBufferQueued(self):
    pass
  def is_geom_prepared(self):
    pass
  def is_geom_queued(self):
    pass
  def is_index_buffer_prepared(self):
    pass
  def is_index_buffer_queued(self):
    pass
  def is_shader_prepared(self):
    pass
  def is_shader_queued(self):
    pass
  def is_texture_prepared(self):
    pass
  def is_texture_queued(self):
    pass
  def is_vertex_buffer_prepared(self):
    pass
  def is_vertex_buffer_queued(self):
    pass
  def prepareGeomNow(self):
    pass
  def prepareIndexBufferNow(self):
    pass
  def prepareShaderNow(self):
    pass
  def prepareTextureNow(self):
    pass
  def prepareVertexBufferNow(self):
    pass
  def prepare_geom_now(self):
    pass
  def prepare_index_buffer_now(self):
    pass
  def prepare_shader_now(self):
    pass
  def prepare_texture_now(self):
    pass
  def prepare_vertex_buffer_now(self):
    pass
  def ref(self):
    pass
  def releaseAll(self):
    pass
  def releaseAllGeoms(self):
    pass
  def releaseAllIndexBuffers(self):
    pass
  def releaseAllShaders(self):
    pass
  def releaseAllTextures(self):
    pass
  def releaseAllVertexBuffers(self):
    pass
  def releaseGeom(self):
    pass
  def releaseIndexBuffer(self):
    pass
  def releaseShader(self):
    pass
  def releaseTexture(self):
    pass
  def releaseVertexBuffer(self):
    pass
  def release_all(self):
    pass
  def release_all_geoms(self):
    pass
  def release_all_index_buffers(self):
    pass
  def release_all_shaders(self):
    pass
  def release_all_textures(self):
    pass
  def release_all_vertex_buffers(self):
    pass
  def release_geom(self):
    pass
  def release_index_buffer(self):
    pass
  def release_shader(self):
    pass
  def release_texture(self):
    pass
  def release_vertex_buffer(self):
    pass
  def setGraphicsMemoryLimit(self):
    pass
  def set_graphics_memory_limit(self):
    pass
  def showGraphicsMemoryLru(self):
    pass
  def showResidencyTrackers(self):
    pass
  def show_graphics_memory_lru(self):
    pass
  def show_residency_trackers(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class PythonCallbackObject:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getFunction(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_function(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setFunction(self):
    pass
  def set_function(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class PythonTask:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  def Getattr(self):
    pass
  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def Setattr(self):
    pass
  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getArgs(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getFunction(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getOwner(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUponDeath(self):
    pass
  def getWakeTime(self):
    pass
  def get_args(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_function(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_owner(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_upon_death(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setArgs(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setFunction(self):
    pass
  def setName(self):
    pass
  def setOwner(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def setUponDeath(self):
    pass
  def set_args(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_function(self):
    pass
  def set_name(self):
    pass
  def set_owner(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def set_upon_death(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class PythonThread:
  def __init__(self):
    pass
  def assign(self):
    pass
  def bind_thread():
    pass
  def bind_thread():
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def consider_yield():
    pass
  def consider_yield():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def force_yield():
    pass
  def force_yield():
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def getCurrentTask(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def getName(self):
    pass
  def getPipelineStage(self):
    pass
  def getPstatsIndex(self):
    pass
  def getPythonData(self):
    pass
  def getRefCount(self):
    pass
  def getSyncName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUniqueId(self):
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def get_current_task(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def get_name(self):
    pass
  def get_pipeline_stage(self):
    pass
  def get_pstats_index(self):
    pass
  def get_python_data(self):
    pass
  def get_ref_count(self):
    pass
  def get_sync_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique_id(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isJoinable(self):
    pass
  def isOfType(self):
    pass
  def is_simple_threads():
    pass
  def isStarted(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def is_exact_type(self):
    pass
  def is_joinable(self):
    pass
  def is_of_type(self):
    pass
  def is_simple_threads():
    pass
  def is_started(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def join(self):
    pass
  def output(self):
    pass
  def outputBlocker(self):
    pass
  def output_blocker(self):
    pass
  def preempt(self):
    pass
  def prepare_for_exit():
    pass
  def prepare_for_exit():
    pass
  def ref(self):
    pass
  def setMinPipelineStage(self):
    pass
  def setName(self):
    pass
  def setPipelineStage(self):
    pass
  def setPythonData(self):
    pass
  def set_min_pipeline_stage(self):
    pass
  def set_name(self):
    pass
  def set_pipeline_stage(self):
    pass
  def set_python_data(self):
    pass
  def sleep():
    pass
  def start(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write_status():
    pass
  def write_status():
    pass
class QuadBitMaskNative:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def extract(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def get_num_bits():
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits():
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_zero(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def outputBinary(self):
    pass
  def outputHex(self):
    pass
  def output_binary(self):
    pass
  def output_hex(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
  def store(self):
    pass
  def write(self):
    pass
class LQuaternionf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LQuaterniond:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class LQuaternionf:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almostSameDirection(self):
    pass
  def almost_equal(self):
    pass
  def almost_same_direction(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def conjugate(self):
    pass
  def conjugateFrom(self):
    pass
  def conjugateInPlace(self):
    pass
  def conjugate_from(self):
    pass
  def conjugate_in_place(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def extractToMatrix(self):
    pass
  def extract_to_matrix(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getAngle(self):
    pass
  def getAngleRad(self):
    pass
  def getAxis(self):
    pass
  def getAxisNormalized(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getForward(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getI(self):
    pass
  def getJ(self):
    pass
  def getK(self):
    pass
  def getNumComponents(self):
    pass
  def getR(self):
    pass
  def getRight(self):
    pass
  def getUp(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_angle(self):
    pass
  def get_angle_rad(self):
    pass
  def get_axis(self):
    pass
  def get_axis_normalized(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_forward(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_i(self):
    pass
  def get_j(self):
    pass
  def get_k(self):
    pass
  def get_num_components(self):
    pass
  def get_r(self):
    pass
  def get_right(self):
    pass
  def get_up(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def ident_quat():
    pass
  def ident_quat():
    pass
  def invertFrom(self):
    pass
  def invertInPlace(self):
    pass
  def invert_from(self):
    pass
  def invert_in_place(self):
    pass
  def isAlmostIdentity(self):
    pass
  def isIdentity(self):
    pass
  def isNan(self):
    pass
  def isSameDirection(self):
    pass
  def is_almost_identity(self):
    pass
  def is_identity(self):
    pass
  def is_nan(self):
    pass
  def is_same_direction(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def multiply(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pure_imaginary():
    pass
  def pure_imaginary():
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setFromAxisAngle(self):
    pass
  def setFromAxisAngleRad(self):
    pass
  def setFromMatrix(self):
    pass
  def setHpr(self):
    pass
  def setI(self):
    pass
  def setJ(self):
    pass
  def setK(self):
    pass
  def setR(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_from_axis_angle(self):
    pass
  def set_from_axis_angle_rad(self):
    pass
  def set_from_matrix(self):
    pass
  def set_hpr(self):
    pass
  def set_i(self):
    pass
  def set_j(self):
    pass
  def set_k(self):
    pass
  def set_r(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def xform(self):
    pass
  def zero():
    pass
class QueuedConnectionListener:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionListener(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionListener(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getManager(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getNewConnection(self):
    pass
  def getNumThreads(self):
    pass
  def getOverflowFlag(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_manager(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_new_connection(self):
    pass
  def get_num_threads(self):
    pass
  def get_overflow_flag(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isConnectionOk(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_polling(self):
    pass
  def newConnectionAvailable(self):
    pass
  def new_connection_available(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
  def upcastToConnectionListener(self):
    pass
  def upcastToQueuedReturnConnectionListenerData(self):
    pass
  def upcast_to_ConnectionListener(self):
    pass
  def upcast_to_QueuedReturn_ConnectionListenerData(self):
    pass
class QueuedConnectionManager:
  def __init__(self):
    pass
  def closeConnection(self):
    pass
  def close_connection(self):
    pass
  def downcastToQueuedConnectionManager(self):
    pass
  def downcast_to_QueuedConnectionManager(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def get_host_name():
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def getResetConnection(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_host_name():
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def get_reset_connection(self):
    pass
  def openTCPClientConnection(self):
    pass
  def openTCPServerRendezvous(self):
    pass
  def openUDPConnection(self):
    pass
  def open_TCP_client_connection(self):
    pass
  def open_TCP_server_rendezvous(self):
    pass
  def open_UDP_connection(self):
    pass
  def resetConnectionAvailable(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_connection_available(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def upcastToConnectionManager(self):
    pass
  def upcastToQueuedReturnPointerToConnection(self):
    pass
  def upcast_to_ConnectionManager(self):
    pass
  def upcast_to_QueuedReturn_PointerTo_Connection(self):
    pass
  def waitForReaders(self):
    pass
  def wait_for_readers(self):
    pass
class QueuedConnectionReader:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def dataAvailable(self):
    pass
  def data_available(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getData(self):
    pass
  def getManager(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getNumThreads(self):
    pass
  def getOverflowFlag(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_data(self):
    pass
  def get_manager(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_num_threads(self):
    pass
  def get_overflow_flag(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isConnectionOk(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_polling(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_max_queue_size(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
  def upcastToConnectionReader(self):
    pass
  def upcastToQueuedReturnNetDatagram(self):
    pass
  def upcast_to_ConnectionReader(self):
    pass
  def upcast_to_QueuedReturn_NetDatagram(self):
    pass
class QueuedReturn__ConnectionListenerData__:
  def __init__(self):
    pass
  def downcastToQueuedConnectionListener(self):
    pass
  def downcast_to_QueuedConnectionListener(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__Datagram__:
  def __init__(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__NetDatagram__:
  def __init__(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__PointerTo__Connection____:
  def __init__(self):
    pass
  def downcastToQueuedConnectionManager(self):
    pass
  def downcast_to_QueuedConnectionManager(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__ConnectionListenerData__:
  def __init__(self):
    pass
  def downcastToQueuedConnectionListener(self):
    pass
  def downcast_to_QueuedConnectionListener(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__Datagram__:
  def __init__(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__NetDatagram__:
  def __init__(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class QueuedReturn__PointerTo__Connection____:
  def __init__(self):
    pass
  def downcastToQueuedConnectionManager(self):
    pass
  def downcast_to_QueuedConnectionManager(self):
    pass
  def getCurrentQueueSize(self):
    pass
  def getMaxQueueSize(self):
    pass
  def getOverflowFlag(self):
    pass
  def get_current_queue_size(self):
    pass
  def get_max_queue_size(self):
    pass
  def get_overflow_flag(self):
    pass
  def resetOverflowFlag(self):
    pass
  def reset_overflow_flag(self):
    pass
  def setMaxQueueSize(self):
    pass
  def set_max_queue_size(self):
    pass
class Randomizer:
  def __init__(self):
    pass
  def assign(self):
    pass
  def get_next_seed():
    pass
  def getSeed(self):
    pass
  def get_next_seed():
    pass
  def get_seed(self):
    pass
  def randomInt(self):
    pass
  def randomReal(self):
    pass
  def randomRealUnit(self):
    pass
  def random_int(self):
    pass
  def random_real(self):
    pass
  def random_real_unit(self):
    pass
class ReMutex:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def elevateLock(self):
    pass
  def elevate_lock(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def tryAcquire(self):
    pass
  def try_acquire(self):
    pass
class ReMutexDirect:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def debugIsLocked(self):
    pass
  def debug_is_locked(self):
    pass
  def elevateLock(self):
    pass
  def elevate_lock(self):
    pass
  def getName(self):
    pass
  def get_name(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def tryAcquire(self):
    pass
  def try_acquire(self):
    pass
class RecentConnectionReader:
  def __init__(self):
    pass
  def addConnection(self):
    pass
  def add_connection(self):
    pass
  def dataAvailable(self):
    pass
  def data_available(self):
    pass
  def downcastToDatagramGeneratorNet(self):
    pass
  def downcastToQueuedConnectionReader(self):
    pass
  def downcast_to_DatagramGeneratorNet(self):
    pass
  def downcast_to_QueuedConnectionReader(self):
    pass
  def getData(self):
    pass
  def getManager(self):
    pass
  def getNumThreads(self):
    pass
  def getRawMode(self):
    pass
  def getTcpHeaderSize(self):
    pass
  def get_data(self):
    pass
  def get_manager(self):
    pass
  def get_num_threads(self):
    pass
  def get_raw_mode(self):
    pass
  def get_tcp_header_size(self):
    pass
  def isConnectionOk(self):
    pass
  def isPolling(self):
    pass
  def is_connection_ok(self):
    pass
  def is_polling(self):
    pass
  def poll(self):
    pass
  def removeConnection(self):
    pass
  def remove_connection(self):
    pass
  def setRawMode(self):
    pass
  def setTcpHeaderSize(self):
    pass
  def set_raw_mode(self):
    pass
  def set_tcp_header_size(self):
    pass
  def shutdown(self):
    pass
class RecorderBase:
  def __init__(self):
    pass
  def downcastToMouseRecorder(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_MouseRecorder(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def isPlaying(self):
    pass
  def isRecording(self):
    pass
  def is_playing(self):
    pass
  def is_recording(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
class RecorderController:
  def __init__(self):
    pass
  def addRecorder(self):
    pass
  def add_recorder(self):
    pass
  def beginPlayback(self):
    pass
  def beginRecord(self):
    pass
  def begin_playback(self):
    pass
  def begin_record(self):
    pass
  def close(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getClockOffset(self):
    pass
  def getFilename(self):
    pass
  def getFrameOffset(self):
    pass
  def getFrameTie(self):
    pass
  def getRandomSeed(self):
    pass
  def getRecorder(self):
    pass
  def getRefCount(self):
    pass
  def getStartTime(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_clock_offset(self):
    pass
  def get_filename(self):
    pass
  def get_frame_offset(self):
    pass
  def get_frame_tie(self):
    pass
  def get_random_seed(self):
    pass
  def get_recorder(self):
    pass
  def get_ref_count(self):
    pass
  def get_start_time(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasRecorder(self):
    pass
  def has_recorder(self):
    pass
  def isError(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isOpen(self):
    pass
  def isPlaying(self):
    pass
  def isRecording(self):
    pass
  def is_error(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_open(self):
    pass
  def is_playing(self):
    pass
  def is_recording(self):
    pass
  def playFrame(self):
    pass
  def play_frame(self):
    pass
  def recordFrame(self):
    pass
  def record_frame(self):
    pass
  def ref(self):
    pass
  def removeRecorder(self):
    pass
  def remove_recorder(self):
    pass
  def setFrameTie(self):
    pass
  def setRandomSeed(self):
    pass
  def set_frame_tie(self):
    pass
  def set_random_seed(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class RenderAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class RenderAttribRegistry:
  def __init__(self):
    pass
  def get_global_ptr():
    pass
  def getMaxSlots(self):
    pass
  def getNumSlots(self):
    pass
  def getNumSortedSlots(self):
    pass
  def getSlot(self):
    pass
  def getSlotDefault(self):
    pass
  def getSlotSort(self):
    pass
  def getSlotType(self):
    pass
  def getSortedSlot(self):
    pass
  def get_global_ptr():
    pass
  def get_max_slots(self):
    pass
  def get_num_slots(self):
    pass
  def get_num_sorted_slots(self):
    pass
  def get_slot(self):
    pass
  def get_slot_default(self):
    pass
  def get_slot_sort(self):
    pass
  def get_slot_type(self):
    pass
  def get_sorted_slot(self):
    pass
  def setSlotSort(self):
    pass
  def set_slot_sort(self):
    pass
class RenderEffect:
  def __init__(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class RenderEffects:
  def __init__(self):
    pass
  def addEffect(self):
    pass
  def add_effect(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findEffect(self):
    pass
  def find_effect(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getEffect(self):
    pass
  def getNumEffects(self):
    pass
  def get_num_states():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_effect(self):
    pass
  def get_num_effects(self):
    pass
  def get_num_states():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def lessThan(self):
    pass
  def list_states():
    pass
  def list_states():
    pass
  def make():
    pass
  def make_empty():
    pass
  def make_empty():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeEffect(self):
    pass
  def remove_effect(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_states():
    pass
  def validate_states():
    pass
  def write(self):
    pass
class RenderModeAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MFilled = int

  MFilledFlat = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPoint = int

  MPointSprite = int

  MUnchanged = int

  MUnused = int

  MWireframe = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_filled = int

  M_filled_flat = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point = int

  M_point_sprite = int

  M_unchanged = int

  M_unused = int

  M_wireframe = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getGeomRendering(self):
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getPerspective(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getThickness(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_geom_rendering(self):
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_perspective(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_thickness(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class RenderState:
  def __init__(self):
    pass
  RCache = int

  RNode = int

  R_cache = int

  R_node = int

  def addAttrib(self):
    pass
  def add_attrib(self):
    pass
  def adjustAllPriorities(self):
    pass
  def adjust_all_priorities(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clear_cache():
    pass
  def clear_munger_cache():
    pass
  def clear_cache():
    pass
  def clear_munger_cache():
    pass
  def compareSort(self):
    pass
  def compareTo(self):
    pass
  def compare_sort(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def cullCallback(self):
    pass
  def cull_callback(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAttrib(self):
    pass
  def getAttribDef(self):
    pass
  def getAutoShaderState(self):
    pass
  def getBamModified(self):
    pass
  def getBinIndex(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCompositionCache(self):
    pass
  def getCompositionCacheNumEntries(self):
    pass
  def getCompositionCacheResult(self):
    pass
  def getCompositionCacheSize(self):
    pass
  def getCompositionCacheSource(self):
    pass
  def getDrawOrder(self):
    pass
  def getGeomRendering(self):
    pass
  def getHash(self):
    pass
  def getInvertCompositionCache(self):
    pass
  def getInvertCompositionCacheNumEntries(self):
    pass
  def getInvertCompositionCacheResult(self):
    pass
  def getInvertCompositionCacheSize(self):
    pass
  def getInvertCompositionCacheSource(self):
    pass
  def get_max_priority():
    pass
  def getNodeRefCount(self):
    pass
  def get_num_states():
    pass
  def get_num_unused_states():
    pass
  def getOverride(self):
    pass
  def getRefCount(self):
    pass
  def getReferencedBits(self):
    pass
  def get_states():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_attrib(self):
    pass
  def get_attrib_def(self):
    pass
  def get_auto_shader_state(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bin_index(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_composition_cache(self):
    pass
  def get_composition_cache_num_entries(self):
    pass
  def get_composition_cache_result(self):
    pass
  def get_composition_cache_size(self):
    pass
  def get_composition_cache_source(self):
    pass
  def get_draw_order(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_hash(self):
    pass
  def get_invert_composition_cache(self):
    pass
  def get_invert_composition_cache_num_entries(self):
    pass
  def get_invert_composition_cache_result(self):
    pass
  def get_invert_composition_cache_size(self):
    pass
  def get_invert_composition_cache_source(self):
    pass
  def get_max_priority():
    pass
  def get_node_ref_count(self):
    pass
  def get_num_states():
    pass
  def get_num_unused_states():
    pass
  def get_override(self):
    pass
  def get_ref_count(self):
    pass
  def get_referenced_bits(self):
    pass
  def get_states():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasAttrib(self):
    pass
  def hasCullCallback(self):
    pass
  def has_attrib(self):
    pass
  def has_cull_callback(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_cycles():
    pass
  def list_states():
    pass
  def list_cycles():
    pass
  def list_states():
    pass
  def make():
    pass
  def make_empty():
    pass
  def make_full_default():
    pass
  def make_empty():
    pass
  def make_full_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def nodeRef(self):
    pass
  def nodeUnref(self):
    pass
  def node_ref(self):
    pass
  def node_unref(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeAttrib(self):
    pass
  def remove_attrib(self):
    pass
  def setAttrib(self):
    pass
  def set_attrib(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_states():
    pass
  def validate_states():
    pass
  def write(self):
    pass
class RescaleNormalAttrib:
  def __init__(self):
    pass
  MAlways = int

  MAuto = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNormalize = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MRescale = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_auto = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_normalize = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_rescale = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class RigidBodyCombiner:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def collect(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalScene(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_scene(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class RopeNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  NMNone = int

  NMVertex = int

  NM_none = int

  NM_vertex = int

  RMBillboard = int

  RMTape = int

  RMThread = int

  RMTube = int

  RM_billboard = int

  RM_tape = int

  RM_thread = int

  RM_tube = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  UVDistance = int

  UVDistance2 = int

  UVNone = int

  UVParametric = int

  UV_distance = int

  UV_distance2 = int

  UV_none = int

  UV_parametric = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearMatrix(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_matrix(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCurve(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMatrix(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNormalMode(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumSlices(self):
    pass
  def getNumStashed(self):
    pass
  def getNumSubdiv(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRenderMode(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getThickness(self):
    pass
  def getTransform(self):
    pass
  def getTubeUp(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getUseVertexColor(self):
    pass
  def getUseVertexThickness(self):
    pass
  def getUvDirection(self):
    pass
  def getUvMode(self):
    pass
  def getUvScale(self):
    pass
  def get_vertex_color_dimension():
    pass
  def get_vertex_thickness_dimension():
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_curve(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_matrix(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_normal_mode(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_slices(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_subdiv(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_mode(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_thickness(self):
    pass
  def get_transform(self):
    pass
  def get_tube_up(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_use_vertex_color(self):
    pass
  def get_use_vertex_thickness(self):
    pass
  def get_uv_direction(self):
    pass
  def get_uv_mode(self):
    pass
  def get_uv_scale(self):
    pass
  def get_vertex_color_dimension():
    pass
  def get_vertex_thickness_dimension():
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasMatrix(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_matrix(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetBound(self):
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_bound(self):
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCurve(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMatrix(self):
    pass
  def setName(self):
    pass
  def setNormalMode(self):
    pass
  def setNumSlices(self):
    pass
  def setNumSubdiv(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setRenderMode(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setThickness(self):
    pass
  def setTransform(self):
    pass
  def setTubeUp(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setUseVertexColor(self):
    pass
  def setUseVertexThickness(self):
    pass
  def setUvDirection(self):
    pass
  def setUvMode(self):
    pass
  def setUvScale(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_curve(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_matrix(self):
    pass
  def set_name(self):
    pass
  def set_normal_mode(self):
    pass
  def set_num_slices(self):
    pass
  def set_num_subdiv(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_render_mode(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_thickness(self):
    pass
  def set_transform(self):
    pass
  def set_tube_up(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_use_vertex_color(self):
    pass
  def set_use_vertex_thickness(self):
    pass
  def set_uv_direction(self):
    pass
  def set_uv_mode(self):
    pass
  def set_uv_scale(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
SUTAdvanced = int

SUTBasic = int

SUTNone = int

SUTUnspecified = int

SUT_advanced = int

SUT_basic = int

SUT_none = int

SUT_unspecified = int

class SavedContext:
  def __init__(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class SceneGraphAnalyzer:
  def __init__(self):
    pass
  LMAll = int

  LMHighest = int

  LMLowest = int

  LMNone = int

  LM_all = int

  LM_highest = int

  LM_lowest = int

  LM_none = int

  def addNode(self):
    pass
  def add_node(self):
    pass
  def clear(self):
    pass
  def getLodMode(self):
    pass
  def getNumColors(self):
    pass
  def getNumGeomNodes(self):
    pass
  def getNumGeomVertexDatas(self):
    pass
  def getNumGeomVertexFormats(self):
    pass
  def getNumGeoms(self):
    pass
  def getNumIndividualTris(self):
    pass
  def getNumInstances(self):
    pass
  def getNumLines(self):
    pass
  def getNumLodNodes(self):
    pass
  def getNumLongNormals(self):
    pass
  def getNumNodes(self):
    pass
  def getNumNodesWithAttribs(self):
    pass
  def getNumNormals(self):
    pass
  def getNumPoints(self):
    pass
  def getNumShortNormals(self):
    pass
  def getNumTexcoords(self):
    pass
  def getNumTransforms(self):
    pass
  def getNumTrianglesInFans(self):
    pass
  def getNumTrianglesInStrips(self):
    pass
  def getNumTrifans(self):
    pass
  def getNumTris(self):
    pass
  def getNumTristrips(self):
    pass
  def getNumVertices(self):
    pass
  def getTextureBytes(self):
    pass
  def getTotalNormalLength(self):
    pass
  def getVertexDataSize(self):
    pass
  def get_lod_mode(self):
    pass
  def get_num_colors(self):
    pass
  def get_num_geom_nodes(self):
    pass
  def get_num_geom_vertex_datas(self):
    pass
  def get_num_geom_vertex_formats(self):
    pass
  def get_num_geoms(self):
    pass
  def get_num_individual_tris(self):
    pass
  def get_num_instances(self):
    pass
  def get_num_lines(self):
    pass
  def get_num_lod_nodes(self):
    pass
  def get_num_long_normals(self):
    pass
  def get_num_nodes(self):
    pass
  def get_num_nodes_with_attribs(self):
    pass
  def get_num_normals(self):
    pass
  def get_num_points(self):
    pass
  def get_num_short_normals(self):
    pass
  def get_num_texcoords(self):
    pass
  def get_num_transforms(self):
    pass
  def get_num_triangles_in_fans(self):
    pass
  def get_num_triangles_in_strips(self):
    pass
  def get_num_trifans(self):
    pass
  def get_num_tris(self):
    pass
  def get_num_tristrips(self):
    pass
  def get_num_vertices(self):
    pass
  def get_texture_bytes(self):
    pass
  def get_total_normal_length(self):
    pass
  def get_vertex_data_size(self):
    pass
  def setLodMode(self):
    pass
  def set_lod_mode(self):
    pass
  def write(self):
    pass
class SceneGraphAnalyzerMeter:
  def __init__(self):
    pass
  ABoxedCenter = int

  ABoxedLeft = int

  ABoxedRight = int

  ACenter = int

  ALeft = int

  ARight = int

  A_boxed_center = int

  A_boxed_left = int

  A_boxed_right = int

  A_center = int

  A_left = int

  A_right = int

  EIso8859 = int

  EUnicode = int

  EUtf8 = int

  E_iso8859 = int

  E_unicode = int

  E_utf8 = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  FFDynamicMerge = int

  FFLight = int

  FFMedium = int

  FFNone = int

  FFStrong = int

  FF_dynamic_merge = int

  FF_light = int

  FF_medium = int

  FF_none = int

  FF_strong = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addProperties(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_properties(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def appendText(self):
    pass
  def appendUnicodeChar(self):
    pass
  def appendWtext(self):
    pass
  def append_text(self):
    pass
  def append_unicode_char(self):
    pass
  def append_wtext(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcWidth(self):
    pass
  def calc_width(self):
    pass
  def clear(self):
    pass
  def clearAlign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBin(self):
    pass
  def clearBounds(self):
    pass
  def clearCard(self):
    pass
  def clearCardBorder(self):
    pass
  def clearCardTexture(self):
    pass
  def clearDrawOrder(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFont(self):
    pass
  def clearFrame(self):
    pass
  def clearGlyphScale(self):
    pass
  def clearGlyphShift(self):
    pass
  def clearIndent(self):
    pass
  def clearMaxRows(self):
    pass
  def clearName(self):
    pass
  def clearPreserveTrailingWhitespace(self):
    pass
  def clearPythonTag(self):
    pass
  def clearShadow(self):
    pass
  def clearShadowColor(self):
    pass
  def clearSlant(self):
    pass
  def clearSmallCaps(self):
    pass
  def clearSmallCapsScale(self):
    pass
  def clearState(self):
    pass
  def clearTabWidth(self):
    pass
  def clearTag(self):
    pass
  def clearText(self):
    pass
  def clearTextColor(self):
    pass
  def clearTextScale(self):
    pass
  def clearTransform(self):
    pass
  def clearUnderscore(self):
    pass
  def clearUnderscoreHeight(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clearWindow(self):
    pass
  def clearWordwrap(self):
    pass
  def clear_align(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bin(self):
    pass
  def clear_bounds(self):
    pass
  def clear_card(self):
    pass
  def clear_card_border(self):
    pass
  def clear_card_texture(self):
    pass
  def clear_draw_order(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_font(self):
    pass
  def clear_frame(self):
    pass
  def clear_glyph_scale(self):
    pass
  def clear_glyph_shift(self):
    pass
  def clear_indent(self):
    pass
  def clear_max_rows(self):
    pass
  def clear_name(self):
    pass
  def clear_preserve_trailing_whitespace(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_shadow(self):
    pass
  def clear_shadow_color(self):
    pass
  def clear_slant(self):
    pass
  def clear_small_caps(self):
    pass
  def clear_small_caps_scale(self):
    pass
  def clear_state(self):
    pass
  def clear_tab_width(self):
    pass
  def clear_tag(self):
    pass
  def clear_text(self):
    pass
  def clear_text_color(self):
    pass
  def clear_text_scale(self):
    pass
  def clear_transform(self):
    pass
  def clear_underscore(self):
    pass
  def clear_underscore_height(self):
    pass
  def clear_unexpected_change(self):
    pass
  def clear_window(self):
    pass
  def clear_wordwrap(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decodeText(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_text(self):
    pass
  def downcastToTextNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TextNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_wchar():
    pass
  def encodeWtext(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def encode_wchar():
    pass
  def encode_wtext(self):
    pass
  def eq(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def generate(self):
    pass
  def getAlign(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBin(self):
    pass
  def getBottom(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCardActual(self):
    pass
  def getCardAsSet(self):
    pass
  def getCardBorderSize(self):
    pass
  def getCardBorderUvPortion(self):
    pass
  def getCardColor(self):
    pass
  def getCardDecal(self):
    pass
  def getCardTexture(self):
    pass
  def getCardTransformed(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def getDisplayRegion(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawOrder(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEncodedChar(self):
    pass
  def getEncoding(self):
    pass
  def getFancyBits(self):
    pass
  def getFlattenFlags(self):
    pass
  def getFont(self):
    pass
  def getFrameActual(self):
    pass
  def getFrameAsSet(self):
    pass
  def getFrameColor(self):
    pass
  def getFrameCorners(self):
    pass
  def getFrameLineWidth(self):
    pass
  def getGlyphScale(self):
    pass
  def getGlyphShift(self):
    pass
  def getHeight(self):
    pass
  def getIndent(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalGeom(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLeft(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLineHeight(self):
    pass
  def getLowerRight3d(self):
    pass
  def getMaxRows(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNode(self):
    pass
  def getNumChars(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumRows(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserveTrailingWhitespace(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRight(self):
    pass
  def getShadow(self):
    pass
  def getShadowColor(self):
    pass
  def getSlant(self):
    pass
  def getSmallCaps(self):
    pass
  def getSmallCapsScale(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTabWidth(self):
    pass
  def getTag(self):
    pass
  def getText(self):
    pass
  def getTextAsAscii(self):
    pass
  def getTextColor(self):
    pass
  def getTextScale(self):
    pass
  def getTop(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnderscore(self):
    pass
  def getUnderscoreHeight(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getUnicodeChar(self):
    pass
  def getUpdateInterval(self):
    pass
  def getUpperLeft3d(self):
    pass
  def getUsageHint(self):
    pass
  def getWidth(self):
    pass
  def getWindow(self):
    pass
  def getWordwrap(self):
    pass
  def getWordwrappedText(self):
    pass
  def getWordwrappedWtext(self):
    pass
  def getWtext(self):
    pass
  def getWtextAsAscii(self):
    pass
  def get_align(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bin(self):
    pass
  def get_bottom(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_card_actual(self):
    pass
  def get_card_as_set(self):
    pass
  def get_card_border_size(self):
    pass
  def get_card_border_uv_portion(self):
    pass
  def get_card_color(self):
    pass
  def get_card_decal(self):
    pass
  def get_card_texture(self):
    pass
  def get_card_transformed(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_coordinate_system(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def get_display_region(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_order(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_encoded_char(self):
    pass
  def get_encoding(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_flatten_flags(self):
    pass
  def get_font(self):
    pass
  def get_frame_actual(self):
    pass
  def get_frame_as_set(self):
    pass
  def get_frame_color(self):
    pass
  def get_frame_corners(self):
    pass
  def get_frame_line_width(self):
    pass
  def get_glyph_scale(self):
    pass
  def get_glyph_shift(self):
    pass
  def get_height(self):
    pass
  def get_indent(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_geom(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_left(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_line_height(self):
    pass
  def get_lower_right_3d(self):
    pass
  def get_max_rows(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_node(self):
    pass
  def get_num_chars(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_rows(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserve_trailing_whitespace(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_right(self):
    pass
  def get_shadow(self):
    pass
  def get_shadow_color(self):
    pass
  def get_slant(self):
    pass
  def get_small_caps(self):
    pass
  def get_small_caps_scale(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tab_width(self):
    pass
  def get_tag(self):
    pass
  def get_text(self):
    pass
  def get_text_as_ascii(self):
    pass
  def get_text_color(self):
    pass
  def get_text_scale(self):
    pass
  def get_top(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_underscore(self):
    pass
  def get_underscore_height(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_unicode_char(self):
    pass
  def get_update_interval(self):
    pass
  def get_upper_left_3d(self):
    pass
  def get_usage_hint(self):
    pass
  def get_width(self):
    pass
  def get_window(self):
    pass
  def get_wordwrap(self):
    pass
  def get_wordwrapped_text(self):
    pass
  def get_wordwrapped_wtext(self):
    pass
  def get_wtext(self):
    pass
  def get_wtext_as_ascii(self):
    pass
  def hasAlign(self):
    pass
  def hasAttrib(self):
    pass
  def hasBin(self):
    pass
  def hasCard(self):
    pass
  def hasCardBorder(self):
    pass
  def hasCardTexture(self):
    pass
  def hasCharacter(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasDrawOrder(self):
    pass
  def hasEffect(self):
    pass
  def hasExactCharacter(self):
    pass
  def hasFont(self):
    pass
  def hasFrame(self):
    pass
  def hasGlyphScale(self):
    pass
  def hasGlyphShift(self):
    pass
  def hasIndent(self):
    pass
  def hasMaxRows(self):
    pass
  def hasName(self):
    pass
  def hasOverflow(self):
    pass
  def hasPreserveTrailingWhitespace(self):
    pass
  def hasPythonTag(self):
    pass
  def hasShadow(self):
    pass
  def hasShadowColor(self):
    pass
  def hasSlant(self):
    pass
  def hasSmallCaps(self):
    pass
  def hasSmallCapsScale(self):
    pass
  def hasTabWidth(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasText(self):
    pass
  def hasTextColor(self):
    pass
  def hasTextScale(self):
    pass
  def hasUnderscore(self):
    pass
  def hasUnderscoreHeight(self):
    pass
  def hasWordwrap(self):
    pass
  def has_align(self):
    pass
  def has_attrib(self):
    pass
  def has_bin(self):
    pass
  def has_card(self):
    pass
  def has_card_border(self):
    pass
  def has_card_texture(self):
    pass
  def has_character(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_draw_order(self):
    pass
  def has_effect(self):
    pass
  def has_exact_character(self):
    pass
  def has_font(self):
    pass
  def has_frame(self):
    pass
  def has_glyph_scale(self):
    pass
  def has_glyph_shift(self):
    pass
  def has_indent(self):
    pass
  def has_max_rows(self):
    pass
  def has_name(self):
    pass
  def has_overflow(self):
    pass
  def has_preserve_trailing_whitespace(self):
    pass
  def has_python_tag(self):
    pass
  def has_shadow(self):
    pass
  def has_shadow_color(self):
    pass
  def has_slant(self):
    pass
  def has_small_caps(self):
    pass
  def has_small_caps_scale(self):
    pass
  def has_tab_width(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_text(self):
    pass
  def has_text_color(self):
    pass
  def has_text_scale(self):
    pass
  def has_underscore(self):
    pass
  def has_underscore_height(self):
    pass
  def has_wordwrap(self):
    pass
  def isAmbientLight(self):
    pass
  def isAnySpecified(self):
    pass
  def isBoundsStale(self):
    pass
  def isCardAsMargin(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isFrameAsMargin(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isWhitespace(self):
    pass
  def isWtext(self):
    pass
  def is_ambient_light(self):
    pass
  def is_any_specified(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_card_as_margin(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_frame_as_margin(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_whitespace(self):
    pass
  def is_wtext(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def lower():
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def makeLower(self):
    pass
  def makeUpper(self):
    pass
  def make_copy(self):
    pass
  def make_lower(self):
    pass
  def make_upper(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def reencode_text():
    pass
  def reencode_text():
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAlign(self):
    pass
  def setAttrib(self):
    pass
  def setBin(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCardActual(self):
    pass
  def setCardAsMargin(self):
    pass
  def setCardBorder(self):
    pass
  def setCardColor(self):
    pass
  def setCardDecal(self):
    pass
  def setCardTexture(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def setDrawOrder(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setEncoding(self):
    pass
  def setFinal(self):
    pass
  def setFlattenFlags(self):
    pass
  def setFont(self):
    pass
  def setFrameActual(self):
    pass
  def setFrameAsMargin(self):
    pass
  def setFrameColor(self):
    pass
  def setFrameCorners(self):
    pass
  def setFrameLineWidth(self):
    pass
  def setGlyphScale(self):
    pass
  def setGlyphShift(self):
    pass
  def setIndent(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMaxRows(self):
    pass
  def setName(self):
    pass
  def setNode(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserveTrailingWhitespace(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setShadow(self):
    pass
  def setShadowColor(self):
    pass
  def setSlant(self):
    pass
  def setSmallCaps(self):
    pass
  def setSmallCapsScale(self):
    pass
  def setState(self):
    pass
  def setTabWidth(self):
    pass
  def setTag(self):
    pass
  def setText(self):
    pass
  def setTextColor(self):
    pass
  def setTextScale(self):
    pass
  def setTransform(self):
    pass
  def setUnderscore(self):
    pass
  def setUnderscoreHeight(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setUnicodeChar(self):
    pass
  def setUpdateInterval(self):
    pass
  def setUsageHint(self):
    pass
  def setWordwrap(self):
    pass
  def setWtext(self):
    pass
  def set_align(self):
    pass
  def set_attrib(self):
    pass
  def set_bin(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_card_actual(self):
    pass
  def set_card_as_margin(self):
    pass
  def set_card_border(self):
    pass
  def set_card_color(self):
    pass
  def set_card_decal(self):
    pass
  def set_card_texture(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def set_draw_order(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_encoding(self):
    pass
  def set_final(self):
    pass
  def set_flatten_flags(self):
    pass
  def set_font(self):
    pass
  def set_frame_actual(self):
    pass
  def set_frame_as_margin(self):
    pass
  def set_frame_color(self):
    pass
  def set_frame_corners(self):
    pass
  def set_frame_line_width(self):
    pass
  def set_glyph_scale(self):
    pass
  def set_glyph_shift(self):
    pass
  def set_indent(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_max_rows(self):
    pass
  def set_name(self):
    pass
  def set_node(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserve_trailing_whitespace(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_shadow(self):
    pass
  def set_shadow_color(self):
    pass
  def set_slant(self):
    pass
  def set_small_caps(self):
    pass
  def set_small_caps_scale(self):
    pass
  def set_state(self):
    pass
  def set_tab_width(self):
    pass
  def set_tag(self):
    pass
  def set_text(self):
    pass
  def set_text_color(self):
    pass
  def set_text_scale(self):
    pass
  def set_transform(self):
    pass
  def set_underscore(self):
    pass
  def set_underscore_height(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_unicode_char(self):
    pass
  def set_update_interval(self):
    pass
  def set_usage_hint(self):
    pass
  def set_wordwrap(self):
    pass
  def set_wtext(self):
    pass
  def setupWindow(self):
    pass
  def setup_window(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTextEncoder(self):
    pass
  def upcastToTextProperties(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TextEncoder(self):
    pass
  def upcast_to_TextProperties(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def update(self):
    pass
  def upper():
    pass
  def write(self):
    pass
class SceneGraphReducer:
  def __init__(self):
    pass
  CSGeomNode = int

  CSOther = int

  CSRecurse = int

  CSWithinRadius = int

  CS_geom_node = int

  CS_other = int

  CS_recurse = int

  CS_within_radius = int

  CVDAnimationType = int

  CVDAvoidDynamic = int

  CVDFormat = int

  CVDModel = int

  CVDName = int

  CVDOneNodeOnly = int

  CVDTransform = int

  CVDUsageHint = int

  CVD_animation_type = int

  CVD_avoid_dynamic = int

  CVD_format = int

  CVD_model = int

  CVD_name = int

  CVD_one_node_only = int

  CVD_transform = int

  CVD_usage_hint = int

  MNAvoidAnimated = int

  MNAvoidDynamic = int

  MNCompositeOnly = int

  MN_avoid_animated = int

  MN_avoid_dynamic = int

  MN_composite_only = int

  TTApplyTextureColor = int

  TTClipPlane = int

  TTColor = int

  TTColorScale = int

  TTCullFace = int

  TTOther = int

  TTTexMatrix = int

  TTTransform = int

  TT_apply_texture_color = int

  TT_clip_plane = int

  TT_color = int

  TT_color_scale = int

  TT_cull_face = int

  TT_other = int

  TT_tex_matrix = int

  TT_transform = int

  def applyAttribs(self):
    pass
  def apply_attribs(self):
    pass
  def checkLiveFlatten(self):
    pass
  def check_live_flatten(self):
    pass
  def clearGsg(self):
    pass
  def clear_gsg(self):
    pass
  def collectVertexData(self):
    pass
  def collect_vertex_data(self):
    pass
  def decompose(self):
    pass
  def flatten(self):
    pass
  def getCombineRadius(self):
    pass
  def getGsg(self):
    pass
  def get_combine_radius(self):
    pass
  def get_gsg(self):
    pass
  def makeCompatibleFormat(self):
    pass
  def makeCompatibleState(self):
    pass
  def makeNonindexed(self):
    pass
  def make_compatible_format(self):
    pass
  def make_compatible_state(self):
    pass
  def make_nonindexed(self):
    pass
  def premunge(self):
    pass
  def removeColumn(self):
    pass
  def removeUnusedVertices(self):
    pass
  def remove_column(self):
    pass
  def remove_unused_vertices(self):
    pass
  def setCombineRadius(self):
    pass
  def setGsg(self):
    pass
  def set_combine_radius(self):
    pass
  def set_gsg(self):
    pass
  def unify(self):
    pass
class SceneSetup:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getCameraNode(self):
    pass
  def getCameraPath(self):
    pass
  def getCameraTransform(self):
    pass
  def get_class_type():
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDisplayRegion(self):
    pass
  def getInitialState(self):
    pass
  def getInverted(self):
    pass
  def getLens(self):
    pass
  def getRefCount(self):
    pass
  def getSceneRoot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getViewportHeight(self):
    pass
  def getViewportWidth(self):
    pass
  def getWorldTransform(self):
    pass
  def get_camera_node(self):
    pass
  def get_camera_path(self):
    pass
  def get_camera_transform(self):
    pass
  def get_class_type():
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_display_region(self):
    pass
  def get_initial_state(self):
    pass
  def get_inverted(self):
    pass
  def get_lens(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene_root(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_viewport_height(self):
    pass
  def get_viewport_width(self):
    pass
  def get_world_transform(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def ref(self):
    pass
  def setCameraNode(self):
    pass
  def setCameraPath(self):
    pass
  def setCameraTransform(self):
    pass
  def setDisplayRegion(self):
    pass
  def setInitialState(self):
    pass
  def setInverted(self):
    pass
  def setLens(self):
    pass
  def setSceneRoot(self):
    pass
  def setViewportSize(self):
    pass
  def setWorldTransform(self):
    pass
  def set_camera_node(self):
    pass
  def set_camera_path(self):
    pass
  def set_camera_transform(self):
    pass
  def set_display_region(self):
    pass
  def set_initial_state(self):
    pass
  def set_inverted(self):
    pass
  def set_lens(self):
    pass
  def set_scene_root(self):
    pass
  def set_viewport_size(self):
    pass
  def set_world_transform(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class ScissorAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getFrame(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_frame(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ScissorEffect:
  def __init__(self):
    pass
  def addPoint(self):
    pass
  def add_point(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getClip(self):
    pass
  def getFrame(self):
    pass
  def getNode(self):
    pass
  def getNodes(self):
    pass
  def get_num_effects():
    pass
  def getNumPoints(self):
    pass
  def getPoint(self):
    pass
  def getPoints(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_clip(self):
    pass
  def get_frame(self):
    pass
  def get_node(self):
    pass
  def get_nodes(self):
    pass
  def get_num_effects():
    pass
  def get_num_points(self):
    pass
  def get_point(self):
    pass
  def get_points(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isScreen(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_screen(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make_node():
    pass
  def make_screen():
    pass
  def make_node():
    pass
  def make_screen():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class SelectiveChildNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToSequenceNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_SequenceNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class Semaphore:
  def __init__(self):
    pass
  def acquire(self):
    pass
  def getCount(self):
    pass
  def get_count(self):
    pass
  def output(self):
    pass
  def release(self):
    pass
  def tryAcquire(self):
    pass
  def try_acquire(self):
    pass
class SequenceNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToSequenceNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_SequenceNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getFrac(self):
    pass
  def getFrame(self):
    pass
  def getFrameRate(self):
    pass
  def getFullFframe(self):
    pass
  def getFullFrame(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNextFrame(self):
    pass
  def getNumChildren(self):
    pass
  def getNumFrames(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPlayRate(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_frac(self):
    pass
  def get_frame(self):
    pass
  def get_frame_rate(self):
    pass
  def get_full_fframe(self):
    pass
  def get_full_frame(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_next_frame(self):
    pass
  def get_num_children(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_play_rate(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isPlaying(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_playing(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def loop(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def pingpong(self):
    pass
  def play(self):
    pass
  def pose(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setFrameRate(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPlayRate(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_frame_rate(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_play_rate(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def stop(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToAnimInterface(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToSelectiveChildNode(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_AnimInterface(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_SelectiveChildNode(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ShadeModelAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MFlat = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MSmooth = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_flat = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_smooth = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class Shader:
  def __init__(self):
    pass
  ASGloss = int

  ASGlow = int

  ASNormal = int

  ASRamp = int

  ASShadow = int

  AS_gloss = int

  AS_glow = int

  AS_normal = int

  AS_ramp = int

  AS_shadow = int

  BitAutoShaderGloss = int

  BitAutoShaderGlow = int

  BitAutoShaderNormal = int

  BitAutoShaderRamp = int

  BitAutoShaderShadow = int

  SLCg = int

  SLGLSL = int

  SLNone = int

  SL_Cg = int

  SL_GLSL = int

  SL_none = int

  STFragment = int

  STGeometry = int

  STNone = int

  STVertex = int

  ST_fragment = int

  ST_geometry = int

  ST_none = int

  ST_vertex = int

  bit_AutoShaderGloss = int

  bit_AutoShaderGlow = int

  bit_AutoShaderNormal = int

  bit_AutoShaderRamp = int

  bit_AutoShaderShadow = int

  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getErrorFlag(self):
    pass
  def getFilename(self):
    pass
  def getLanguage(self):
    pass
  def getRefCount(self):
    pass
  def get_shader_utilization():
    pass
  def getText(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_error_flag(self):
    pass
  def get_filename(self):
    pass
  def get_language(self):
    pass
  def get_ref_count(self):
    pass
  def get_shader_utilization():
    pass
  def get_text(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def have_shader_utilization():
    pass
  def have_shader_utilization():
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def load():
    pass
  def make():
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def set_shader_utilization():
    pass
  def set_shader_utilization():
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class ShaderAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def autoGlossOn(self):
    pass
  def autoGlowOn(self):
    pass
  def autoNormalOn(self):
    pass
  def autoRampOn(self):
    pass
  def autoShader(self):
    pass
  def autoShadowOn(self):
    pass
  def auto_gloss_on(self):
    pass
  def auto_glow_on(self):
    pass
  def auto_normal_on(self):
    pass
  def auto_ramp_on(self):
    pass
  def auto_shader(self):
    pass
  def auto_shadow_on(self):
    pass
  def clearAllShaderInputs(self):
    pass
  def clearFlag(self):
    pass
  def clearShader(self):
    pass
  def clearShaderInput(self):
    pass
  def clear_all_shader_inputs(self):
    pass
  def clear_flag(self):
    pass
  def clear_shader(self):
    pass
  def clear_shader_input(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getFlag(self):
    pass
  def getHash(self):
    pass
  def getInstanceCount(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getShader(self):
    pass
  def getShaderInput(self):
    pass
  def getShaderInputNodepath(self):
    pass
  def getShaderInputTexture(self):
    pass
  def getShaderInputVector(self):
    pass
  def getShaderPriority(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_flag(self):
    pass
  def get_hash(self):
    pass
  def get_instance_count(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_shader(self):
    pass
  def get_shader_input(self):
    pass
  def get_shader_input_nodepath(self):
    pass
  def get_shader_input_texture(self):
    pass
  def get_shader_input_vector(self):
    pass
  def get_shader_priority(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasShader(self):
    pass
  def has_shader(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def register_with_read_factory():
    pass
  def register_with_read_factory():
    pass
  def setFlag(self):
    pass
  def setInstanceCount(self):
    pass
  def setShader(self):
    pass
  def setShaderAuto(self):
    pass
  def setShaderInput(self):
    pass
  def setShaderOff(self):
    pass
  def set_flag(self):
    pass
  def set_instance_count(self):
    pass
  def set_shader(self):
    pass
  def set_shader_auto(self):
    pass
  def set_shader_input(self):
    pass
  def set_shader_off(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class ShaderContext:
  def __init__(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getShader(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_shader(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class ShaderGenerator:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def synthesizeShader(self):
    pass
  def synthesize_shader(self):
    pass
class ShaderInput:
  def __init__(self):
    pass
  MInvalid = int

  MNodepath = int

  MNumeric = int

  MTexture = int

  M_invalid = int

  M_nodepath = int

  M_numeric = int

  M_texture = int

  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_blank():
    pass
  def get_class_type():
    pass
  def getName(self):
    pass
  def getNodepath(self):
    pass
  def getPriority(self):
    pass
  def getRefCount(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getValueType(self):
    pass
  def getVector(self):
    pass
  def get_bam_modified(self):
    pass
  def get_blank():
    pass
  def get_class_type():
    pass
  def get_name(self):
    pass
  def get_nodepath(self):
    pass
  def get_priority(self):
    pass
  def get_ref_count(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_value_type(self):
    pass
  def get_vector(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class ShaderPool:
  def __init__(self):
    pass
  def add_shader():
    pass
  def add_shader():
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def has_shader():
    pass
  def has_shader():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def load_shader():
    pass
  def load_shader():
    pass
  def release_all_shaders():
    pass
  def release_shader():
    pass
  def release_all_shaders():
    pass
  def release_shader():
    pass
  def verify_shader():
    pass
  def verify_shader():
    pass
  def write():
    pass
class SheetNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getNumUSubdiv(self):
    pass
  def getNumVSubdiv(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getSurface(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getUseVertexColor(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_num_u_subdiv(self):
    pass
  def get_num_v_subdiv(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_surface(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_use_vertex_color(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetBound(self):
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_bound(self):
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNumUSubdiv(self):
    pass
  def setNumVSubdiv(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setSurface(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setUseVertexColor(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_num_u_subdiv(self):
    pass
  def set_num_v_subdiv(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_surface(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_use_vertex_color(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class ShowBoundsEffect:
  def __init__(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getTight(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_tight(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class SimpleAllocator:
  def __init__(self):
    pass
  def alloc(self):
    pass
  def downcastToVertexDataPage(self):
    pass
  def downcast_to_VertexDataPage(self):
    pass
  def getContiguous(self):
    pass
  def getFirstBlock(self):
    pass
  def getMaxSize(self):
    pass
  def getTotalSize(self):
    pass
  def get_contiguous(self):
    pass
  def get_first_block(self):
    pass
  def get_max_size(self):
    pass
  def get_total_size(self):
    pass
  def isEmpty(self):
    pass
  def is_empty(self):
    pass
  def output(self):
    pass
  def setMaxSize(self):
    pass
  def set_max_size(self):
    pass
  def write(self):
    pass
class SimpleAllocatorBlock:
  def __init__(self):
    pass
  def downcastToVertexDataBlock(self):
    pass
  def downcast_to_VertexDataBlock(self):
    pass
  def free(self):
    pass
  def getAllocator(self):
    pass
  def getMaxSize(self):
    pass
  def getNextBlock(self):
    pass
  def getSize(self):
    pass
  def getStart(self):
    pass
  def get_allocator(self):
    pass
  def get_max_size(self):
    pass
  def get_next_block(self):
    pass
  def get_size(self):
    pass
  def get_start(self):
    pass
  def isFree(self):
    pass
  def is_free(self):
    pass
  def output(self):
    pass
  def realloc(self):
    pass
class SimpleLru:
  def __init__(self):
    pass
  def assign(self):
    pass
  def beginEpoch(self):
    pass
  def begin_epoch(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def considerEvict(self):
    pass
  def consider_evict(self):
    pass
  def countActiveSize(self):
    pass
  def count_active_size(self):
    pass
  def evictTo(self):
    pass
  def evict_to(self):
    pass
  def get_class_type():
    pass
  def getMaxSize(self):
    pass
  def getName(self):
    pass
  def getTotalSize(self):
    pass
  def get_class_type():
    pass
  def get_max_size(self):
    pass
  def get_name(self):
    pass
  def get_total_size(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def output(self):
    pass
  def setMaxSize(self):
    pass
  def setName(self):
    pass
  def set_max_size(self):
    pass
  def set_name(self):
    pass
  def upcastToNamable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def validate(self):
    pass
  def write(self):
    pass
class SimpleLruPage:
  def __init__(self):
    pass
  def assign(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToVertexDataPage(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_VertexDataPage(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def setLruSize(self):
    pass
  def set_lru_size(self):
    pass
  def write(self):
    pass
class SliderTable:
  def __init__(self):
    pass
  def addSlider(self):
    pass
  def add_slider(self):
    pass
  def assign(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findSliders(self):
    pass
  def find_sliders(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getNumSliders(self):
    pass
  def getRefCount(self):
    pass
  def getSlider(self):
    pass
  def getSliderRows(self):
    pass
  def getSliders(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_num_sliders(self):
    pass
  def get_ref_count(self):
    pass
  def get_slider(self):
    pass
  def get_slider_rows(self):
    pass
  def get_sliders(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasSlider(self):
    pass
  def has_slider(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isRegistered(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_registered(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def register_table():
    pass
  def register_table():
    pass
  def removeSlider(self):
    pass
  def remove_slider(self):
    pass
  def setSlider(self):
    pass
  def setSliderRows(self):
    pass
  def set_slider(self):
    pass
  def set_slider_rows(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class Socket_Address:
  def __init__(self):
    pass
  def GetIPAddressRaw(self):
    pass
  def clear(self):
    pass
  def eq(self):
    pass
  def getIp(self):
    pass
  def getIpPort(self):
    pass
  def getPort(self):
    pass
  def get_ip(self):
    pass
  def get_ip_port(self):
    pass
  def get_port(self):
    pass
  def isMcastRange(self):
    pass
  def lessThan(self):
    pass
  def setAnyIP(self):
    pass
  def setBroadcast(self):
    pass
  def setHost(self):
    pass
  def setPort(self):
    pass
  def set_any_IP(self):
    pass
  def set_broadcast(self):
    pass
  def set_host(self):
    pass
  def set_port(self):
    pass
class Socket_fdset:
  def __init__(self):
    pass
  def IsSetFor(self):
    pass
  def WaitForError(self):
    pass
  def WaitForRead(self):
    pass
  def WaitForWrite(self):
    pass
  def clear(self):
    pass
  def setForSocket(self):
    pass
class Socket_IP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class SocketStreamRecorder:
  def __init__(self):
    pass
  def close(self):
    pass
  def considerFlush(self):
    pass
  def consider_flush(self):
    pass
  def downcastToMouseRecorder(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_MouseRecorder(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def flush(self):
    pass
  def get_class_type():
    pass
  def getCollectTcp(self):
    pass
  def getCollectTcpInterval(self):
    pass
  def getRefCount(self):
    pass
  def get_class_type():
    pass
  def get_collect_tcp(self):
    pass
  def get_collect_tcp_interval(self):
    pass
  def get_ref_count(self):
    pass
  def isClosed(self):
    pass
  def isPlaying(self):
    pass
  def isRecording(self):
    pass
  def is_closed(self):
    pass
  def is_playing(self):
    pass
  def is_recording(self):
    pass
  def receiveDatagram(self):
    pass
  def receive_datagram(self):
    pass
  def ref(self):
    pass
  def sendDatagram(self):
    pass
  def send_datagram(self):
    pass
  def setCollectTcp(self):
    pass
  def setCollectTcpInterval(self):
    pass
  def set_collect_tcp(self):
    pass
  def set_collect_tcp_interval(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
class Socket_TCP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def ActiveOpen(self):
    pass
  def ActiveOpenNonBlocking(self):
    pass
  def Close(self):
    pass
  def DontLinger(self):
    pass
  def ErrorIsWouldBlocking(self):
    pass
  def ErrorIs_WouldBlocking(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def RecvData(self):
    pass
  def SendData(self):
    pass
  def SetBlocking(self):
    pass
  def SetLinger(self):
    pass
  def SetNoDelay(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSendBufferSize(self):
    pass
  def SetSocket(self):
    pass
  def ShutdownSend(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_TCP_Listen:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetIncomingConnection(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def OpenForListen(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def InitToAddress(self):
    pass
  def OpenForInput(self):
    pass
  def OpenForInputMCast(self):
    pass
  def Send(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP_Incoming:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def OpenForInput(self):
    pass
  def OpenForInputMCast(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP_Outgoing:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def InitToAddress(self):
    pass
  def Send(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_Address:
  def __init__(self):
    pass
  def GetIPAddressRaw(self):
    pass
  def clear(self):
    pass
  def eq(self):
    pass
  def getIp(self):
    pass
  def getIpPort(self):
    pass
  def getPort(self):
    pass
  def get_ip(self):
    pass
  def get_ip_port(self):
    pass
  def get_port(self):
    pass
  def isMcastRange(self):
    pass
  def lessThan(self):
    pass
  def setAnyIP(self):
    pass
  def setBroadcast(self):
    pass
  def setHost(self):
    pass
  def setPort(self):
    pass
  def set_any_IP(self):
    pass
  def set_broadcast(self):
    pass
  def set_host(self):
    pass
  def set_port(self):
    pass
class Socket_IP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_TCP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def ActiveOpen(self):
    pass
  def ActiveOpenNonBlocking(self):
    pass
  def Close(self):
    pass
  def DontLinger(self):
    pass
  def ErrorIsWouldBlocking(self):
    pass
  def ErrorIs_WouldBlocking(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def RecvData(self):
    pass
  def SendData(self):
    pass
  def SetBlocking(self):
    pass
  def SetLinger(self):
    pass
  def SetNoDelay(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSendBufferSize(self):
    pass
  def SetSocket(self):
    pass
  def ShutdownSend(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_TCP_Listen:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetIncomingConnection(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def OpenForListen(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def InitToAddress(self):
    pass
  def OpenForInput(self):
    pass
  def OpenForInputMCast(self):
    pass
  def Send(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP_Incoming:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def OpenForInput(self):
    pass
  def OpenForInputMCast(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_UDP_Outgoing:
  def __init__(self):
    pass
  def Active(self):
    pass
  def Close(self):
    pass
  def GetLastError():
    pass
  def GetPeerName(self):
    pass
  def GetSocket(self):
    pass
  def InitNetworkDriver():
    pass
  def InitNoAddress(self):
    pass
  def InitToAddress(self):
    pass
  def Send(self):
    pass
  def SendTo(self):
    pass
  def SetBlocking(self):
    pass
  def SetNonBlocking(self):
    pass
  def SetRecvBufferSize(self):
    pass
  def SetReuseAddress(self):
    pass
  def SetSocket(self):
    pass
  def SetToBroadCast(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
class Socket_fdset:
  def __init__(self):
    pass
  def IsSetFor(self):
    pass
  def WaitForError(self):
    pass
  def WaitForRead(self):
    pass
  def WaitForWrite(self):
    pass
  def clear(self):
    pass
  def setForSocket(self):
    pass
class SparseArray:
  def __init__(self):
    pass
  def all_off():
    pass
  def all_on():
    pass
  def all_off():
    pass
  def all_on():
    pass
  def assign(self):
    pass
  def bit():
    pass
  def clear(self):
    pass
  def clearBit(self):
    pass
  def clearRange(self):
    pass
  def clear_bit(self):
    pass
  def clear_range(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def getBit(self):
    pass
  def get_class_type():
    pass
  def getHighestBits(self):
    pass
  def getHighestOffBit(self):
    pass
  def getHighestOnBit(self):
    pass
  def getLowestOffBit(self):
    pass
  def getLowestOnBit(self):
    pass
  def get_max_num_bits():
    pass
  def getNextHigherDifferentBit(self):
    pass
  def getNumBits(self):
    pass
  def getNumOffBits(self):
    pass
  def getNumOnBits(self):
    pass
  def getNumSubranges(self):
    pass
  def getSubrangeBegin(self):
    pass
  def getSubrangeEnd(self):
    pass
  def get_bit(self):
    pass
  def get_class_type():
    pass
  def get_highest_bits(self):
    pass
  def get_highest_off_bit(self):
    pass
  def get_highest_on_bit(self):
    pass
  def get_lowest_off_bit(self):
    pass
  def get_lowest_on_bit(self):
    pass
  def get_max_num_bits():
    pass
  def get_next_higher_different_bit(self):
    pass
  def get_num_bits(self):
    pass
  def get_num_off_bits(self):
    pass
  def get_num_on_bits(self):
    pass
  def get_num_subranges(self):
    pass
  def get_subrange_begin(self):
    pass
  def get_subrange_end(self):
    pass
  def hasAllOf(self):
    pass
  def hasAnyOf(self):
    pass
  def hasBitsInCommon(self):
    pass
  def has_max_num_bits():
    pass
  def has_all_of(self):
    pass
  def has_any_of(self):
    pass
  def has_bits_in_common(self):
    pass
  def has_max_num_bits():
    pass
  def invertInPlace(self):
    pass
  def invert_in_place(self):
    pass
  def isAllOn(self):
    pass
  def isInverse(self):
    pass
  def isZero(self):
    pass
  def is_all_on(self):
    pass
  def is_inverse(self):
    pass
  def is_zero(self):
    pass
  def lessThan(self):
    pass
  def lower_on():
    pass
  def lower_on():
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def range():
    pass
  def setBit(self):
    pass
  def setBitTo(self):
    pass
  def setRange(self):
    pass
  def setRangeTo(self):
    pass
  def set_bit(self):
    pass
  def set_bit_to(self):
    pass
  def set_range(self):
    pass
  def set_range_to(self):
    pass
class Spotlight:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def activateLens(self):
    pass
  def activate_lens(self):
    pass
  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def asNode(self):
    pass
  def as_light(self):
    pass
  def as_node(self):
    pass
  def assign(self):
    pass
  def cleanupAuxSceneData(self):
    pass
  def cleanup_aux_scene_data(self):
    pass
  def clearAttrib(self):
    pass
  def clearAuxSceneData(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTagState(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_aux_scene_data(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_tag_state(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copyLens(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_lens(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def deactivateLens(self):
    pass
  def deactivate_lens(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttenuation(self):
    pass
  def getAttrib(self):
    pass
  def getAuxSceneData(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCameraMask(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def getClassPriority(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getCullBounds(self):
    pass
  def getCullCenter(self):
    pass
  def getDisplayRegion(self):
    pass
  def getDisplayRegions(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getExponent(self):
    pass
  def getFancyBits(self):
    pass
  def getInitialState(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLens(self):
    pass
  def getLensActive(self):
    pass
  def getLodCenter(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumDisplayRegions(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPriority(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getScene(self):
    pass
  def getSpecularColor(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTagState(self):
    pass
  def getTagStateKey(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attenuation(self):
    pass
  def get_attrib(self):
    pass
  def get_aux_scene_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_camera_mask(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_priority(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_cull_bounds(self):
    pass
  def get_cull_center(self):
    pass
  def get_display_region(self):
    pass
  def get_display_regions(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_exponent(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_initial_state(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_lens(self):
    pass
  def get_lens_active(self):
    pass
  def get_lod_center(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_display_regions(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_priority(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_scene(self):
    pass
  def get_specular_color(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_tag_state(self):
    pass
  def get_tag_state_key(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTagState(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tag_state(self):
    pass
  def has_tags(self):
    pass
  def hideFrustum(self):
    pass
  def hide_frustum(self):
    pass
  def isActive(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isInView(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isShadowCaster(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_active(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_in_view(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_shadow_caster(self):
    pass
  def is_under_scene_root(self):
    pass
  def listAuxSceneData(self):
    pass
  def listTags(self):
    pass
  def list_aux_scene_data(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_spot():
    pass
  def make_copy(self):
    pass
  def make_spot():
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setActive(self):
    pass
  def setAttenuation(self):
    pass
  def setAttrib(self):
    pass
  def setAuxSceneData(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCameraMask(self):
    pass
  def setColor(self):
    pass
  def setCullBounds(self):
    pass
  def setCullCenter(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setExponent(self):
    pass
  def setFinal(self):
    pass
  def setInitialState(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setLens(self):
    pass
  def setLensActive(self):
    pass
  def setLodCenter(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPriority(self):
    pass
  def setPythonTag(self):
    pass
  def setScene(self):
    pass
  def setShadowCaster(self):
    pass
  def setSpecularColor(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTagState(self):
    pass
  def setTagStateKey(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_active(self):
    pass
  def set_attenuation(self):
    pass
  def set_attrib(self):
    pass
  def set_aux_scene_data(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_camera_mask(self):
    pass
  def set_color(self):
    pass
  def set_cull_bounds(self):
    pass
  def set_cull_center(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_exponent(self):
    pass
  def set_final(self):
    pass
  def set_initial_state(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_lens(self):
    pass
  def set_lens_active(self):
    pass
  def set_lod_center(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_priority(self):
    pass
  def set_python_tag(self):
    pass
  def set_scene(self):
    pass
  def set_shadow_caster(self):
    pass
  def set_specular_color(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tag_state(self):
    pass
  def set_tag_state_key(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def showFrustum(self):
    pass
  def show_frustum(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToCamera(self):
    pass
  def upcastToLight(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Camera(self):
    pass
  def upcast_to_Light(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class StackedPerlinNoise2:
  def __init__(self):
    pass
  def addLevel(self):
    pass
  def add_level(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def noise(self):
    pass
class StackedPerlinNoise3:
  def __init__(self):
    pass
  def addLevel(self):
    pass
  def add_level(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def noise(self):
    pass
class StaticTextFont:
  def __init__(self):
    pass
  RMExtruded = int

  RMInvalid = int

  RMPolygon = int

  RMSolid = int

  RMTexture = int

  RMWireframe = int

  RM_extruded = int

  RM_invalid = int

  RM_polygon = int

  RM_solid = int

  RM_texture = int

  RM_wireframe = int

  WODefault = int

  WOInvalid = int

  WOLeft = int

  WORight = int

  WO_default = int

  WO_invalid = int

  WO_left = int

  WO_right = int

  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToDynamicTextFont(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_DynamicTextFont(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getLineHeight(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSpaceAdvance(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_line_height(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_space_advance(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setLineHeight(self):
    pass
  def setName(self):
    pass
  def setSpaceAdvance(self):
    pass
  def set_line_height(self):
    pass
  def set_name(self):
    pass
  def set_space_advance(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write(self):
    pass
class StencilAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  SCFAlways = int

  SCFEqual = int

  SCFGreaterThan = int

  SCFGreaterThanOrEqual = int

  SCFLessThan = int

  SCFLessThanOrEqual = int

  SCFNever = int

  SCFNotEqual = int

  SCF_always = int

  SCF_equal = int

  SCF_greater_than = int

  SCF_greater_than_or_equal = int

  SCF_less_than = int

  SCF_less_than_or_equal = int

  SCF_never = int

  SCF_not_equal = int

  SMDefault = int

  SM_default = int

  SODecrement = int

  SODecrementSaturate = int

  SOIncrement = int

  SOIncrementSaturate = int

  SOInvert = int

  SOKeep = int

  SOReplace = int

  SOZero = int

  SO_decrement = int

  SO_decrement_saturate = int

  SO_increment = int

  SO_increment_saturate = int

  SO_invert = int

  SO_keep = int

  SO_replace = int

  SO_zero = int

  SRSBackComparisonFunction = int

  SRSBackEnable = int

  SRSBackStencilFailOperation = int

  SRSBackStencilPassZFailOperation = int

  SRSBackStencilPassZPassOperation = int

  SRSClear = int

  SRSClearValue = int

  SRSFirst = int

  SRSFrontComparisonFunction = int

  SRSFrontEnable = int

  SRSFrontStencilFailOperation = int

  SRSFrontStencilPassZFailOperation = int

  SRSFrontStencilPassZPassOperation = int

  SRSReadMask = int

  SRSReference = int

  SRSTotal = int

  SRSWriteMask = int

  SRS_back_comparison_function = int

  SRS_back_enable = int

  SRS_back_stencil_fail_operation = int

  SRS_back_stencil_pass_z_fail_operation = int

  SRS_back_stencil_pass_z_pass_operation = int

  SRS_clear = int

  SRS_clear_value = int

  SRS_first = int

  SRS_front_comparison_function = int

  SRS_front_enable = int

  SRS_front_stencil_fail_operation = int

  SRS_front_stencil_pass_z_fail_operation = int

  SRS_front_stencil_pass_z_pass_operation = int

  SRS_read_mask = int

  SRS_reference = int

  SRS_total = int

  SRS_write_mask = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getRenderState(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_render_state(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_2_sided():
    pass
  def make_2_sided_with_clear():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_with_clear():
    pass
  def make_2_sided():
    pass
  def make_2_sided_with_clear():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_with_clear():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class StencilRenderStates:
  def __init__(self):
    pass
  SCFAlways = int

  SCFEqual = int

  SCFGreaterThan = int

  SCFGreaterThanOrEqual = int

  SCFLessThan = int

  SCFLessThanOrEqual = int

  SCFNever = int

  SCFNotEqual = int

  SCF_always = int

  SCF_equal = int

  SCF_greater_than = int

  SCF_greater_than_or_equal = int

  SCF_less_than = int

  SCF_less_than_or_equal = int

  SCF_never = int

  SCF_not_equal = int

  SODecrement = int

  SODecrementSaturate = int

  SOIncrement = int

  SOIncrementSaturate = int

  SOInvert = int

  SOKeep = int

  SOReplace = int

  SOZero = int

  SO_decrement = int

  SO_decrement_saturate = int

  SO_increment = int

  SO_increment_saturate = int

  SO_invert = int

  SO_keep = int

  SO_replace = int

  SO_zero = int

  SRSBackComparisonFunction = int

  SRSBackEnable = int

  SRSBackStencilFailOperation = int

  SRSBackStencilPassZFailOperation = int

  SRSBackStencilPassZPassOperation = int

  SRSClear = int

  SRSClearValue = int

  SRSFirst = int

  SRSFrontComparisonFunction = int

  SRSFrontEnable = int

  SRSFrontStencilFailOperation = int

  SRSFrontStencilPassZFailOperation = int

  SRSFrontStencilPassZPassOperation = int

  SRSReadMask = int

  SRSReference = int

  SRSTotal = int

  SRSWriteMask = int

  SRS_back_comparison_function = int

  SRS_back_enable = int

  SRS_back_stencil_fail_operation = int

  SRS_back_stencil_pass_z_fail_operation = int

  SRS_back_stencil_pass_z_pass_operation = int

  SRS_clear = int

  SRS_clear_value = int

  SRS_first = int

  SRS_front_comparison_function = int

  SRS_front_enable = int

  SRS_front_stencil_fail_operation = int

  SRS_front_stencil_pass_z_fail_operation = int

  SRS_front_stencil_pass_z_pass_operation = int

  SRS_read_mask = int

  SRS_reference = int

  SRS_total = int

  SRS_write_mask = int

class StereoDisplayRegion:
  def __init__(self):
    pass
  RTPAuxFloat0 = int

  RTPAuxFloat1 = int

  RTPAuxFloat2 = int

  RTPAuxFloat3 = int

  RTPAuxHrgba0 = int

  RTPAuxHrgba1 = int

  RTPAuxHrgba2 = int

  RTPAuxHrgba3 = int

  RTPAuxRgba0 = int

  RTPAuxRgba1 = int

  RTPAuxRgba2 = int

  RTPAuxRgba3 = int

  RTPCOUNT = int

  RTPColor = int

  RTPDepth = int

  RTPDepthStencil = int

  RTPStencil = int

  RTP_COUNT = int

  RTP_aux_float_0 = int

  RTP_aux_float_1 = int

  RTP_aux_float_2 = int

  RTP_aux_float_3 = int

  RTP_aux_hrgba_0 = int

  RTP_aux_hrgba_1 = int

  RTP_aux_hrgba_2 = int

  RTP_aux_hrgba_3 = int

  RTP_aux_rgba_0 = int

  RTP_aux_rgba_1 = int

  RTP_aux_rgba_2 = int

  RTP_aux_rgba_3 = int

  RTP_color = int

  RTP_depth = int

  RTP_depth_stencil = int

  RTP_stencil = int

  def clearCullCallback(self):
    pass
  def clearDrawCallback(self):
    pass
  def clear_cull_callback(self):
    pass
  def clear_draw_callback(self):
    pass
  def disableClears(self):
    pass
  def disable_clears(self):
    pass
  def downcastToDisplayRegion(self):
    pass
  def downcastToGraphicsOutput(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_DisplayRegion(self):
    pass
  def downcast_to_GraphicsOutput(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getBottom(self):
    pass
  def getCamera(self):
    pass
  def get_class_type():
    pass
  def getClearActive(self):
    pass
  def getClearColor(self):
    pass
  def getClearColorActive(self):
    pass
  def getClearDepth(self):
    pass
  def getClearDepthActive(self):
    pass
  def getClearStencil(self):
    pass
  def getClearStencilActive(self):
    pass
  def getClearValue(self):
    pass
  def getCubeMapIndex(self):
    pass
  def getCullCallback(self):
    pass
  def getCullTraverser(self):
    pass
  def getDimensions(self):
    pass
  def getDrawCallback(self):
    pass
  def getIncompleteRender(self):
    pass
  def getLeft(self):
    pass
  def getLeftEye(self):
    pass
  def getLensIndex(self):
    pass
  def getPipe(self):
    pass
  def getPixelFactor(self):
    pass
  def getPixelHeight(self):
    pass
  def getPixelWidth(self):
    pass
  def getPixelZoom(self):
    pass
  def getRefCount(self):
    pass
  def get_renderbuffer_type():
    pass
  def getRight(self):
    pass
  def getRightEye(self):
    pass
  def getScreenshot(self):
    pass
  def getSort(self):
    pass
  def getStereoChannel(self):
    pass
  def getTexViewOffset(self):
    pass
  def getTextureReloadPriority(self):
    pass
  def getTop(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWindow(self):
    pass
  def get_bottom(self):
    pass
  def get_camera(self):
    pass
  def get_class_type():
    pass
  def get_clear_active(self):
    pass
  def get_clear_color(self):
    pass
  def get_clear_color_active(self):
    pass
  def get_clear_depth(self):
    pass
  def get_clear_depth_active(self):
    pass
  def get_clear_stencil(self):
    pass
  def get_clear_stencil_active(self):
    pass
  def get_clear_value(self):
    pass
  def get_cube_map_index(self):
    pass
  def get_cull_callback(self):
    pass
  def get_cull_traverser(self):
    pass
  def get_dimensions(self):
    pass
  def get_draw_callback(self):
    pass
  def get_incomplete_render(self):
    pass
  def get_left(self):
    pass
  def get_left_eye(self):
    pass
  def get_lens_index(self):
    pass
  def get_pipe(self):
    pass
  def get_pixel_factor(self):
    pass
  def get_pixel_height(self):
    pass
  def get_pixel_width(self):
    pass
  def get_pixel_zoom(self):
    pass
  def get_ref_count(self):
    pass
  def get_renderbuffer_type():
    pass
  def get_right(self):
    pass
  def get_right_eye(self):
    pass
  def get_screenshot(self):
    pass
  def get_sort(self):
    pass
  def get_stereo_channel(self):
    pass
  def get_tex_view_offset(self):
    pass
  def get_texture_reload_priority(self):
    pass
  def get_top(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_window(self):
    pass
  def isActive(self):
    pass
  def isAnyClearActive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isStereo(self):
    pass
  def is_active(self):
    pass
  def is_any_clear_active(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_stereo(self):
    pass
  def makeCullResultGraph(self):
    pass
  def make_screenshot_filename():
    pass
  def make_cull_result_graph(self):
    pass
  def make_screenshot_filename():
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def saveScreenshot(self):
    pass
  def saveScreenshotDefault(self):
    pass
  def save_screenshot(self):
    pass
  def save_screenshot_default(self):
    pass
  def setActive(self):
    pass
  def setCamera(self):
    pass
  def setClearActive(self):
    pass
  def setClearColor(self):
    pass
  def setClearColorActive(self):
    pass
  def setClearDepth(self):
    pass
  def setClearDepthActive(self):
    pass
  def setClearStencil(self):
    pass
  def setClearStencilActive(self):
    pass
  def setClearValue(self):
    pass
  def setCubeMapIndex(self):
    pass
  def setCullCallback(self):
    pass
  def setCullTraverser(self):
    pass
  def setDimensions(self):
    pass
  def setDrawCallback(self):
    pass
  def setIncompleteRender(self):
    pass
  def setLensIndex(self):
    pass
  def setPixelZoom(self):
    pass
  def setSort(self):
    pass
  def setStereoChannel(self):
    pass
  def setTexViewOffset(self):
    pass
  def setTextureReloadPriority(self):
    pass
  def set_active(self):
    pass
  def set_camera(self):
    pass
  def set_clear_active(self):
    pass
  def set_clear_color(self):
    pass
  def set_clear_color_active(self):
    pass
  def set_clear_depth(self):
    pass
  def set_clear_depth_active(self):
    pass
  def set_clear_stencil(self):
    pass
  def set_clear_stencil_active(self):
    pass
  def set_clear_value(self):
    pass
  def set_cube_map_index(self):
    pass
  def set_cull_callback(self):
    pass
  def set_cull_traverser(self):
    pass
  def set_dimensions(self):
    pass
  def set_draw_callback(self):
    pass
  def set_incomplete_render(self):
    pass
  def set_lens_index(self):
    pass
  def set_pixel_zoom(self):
    pass
  def set_sort(self):
    pass
  def set_stereo_channel(self):
    pass
  def set_tex_view_offset(self):
    pass
  def set_texture_reload_priority(self):
    pass
  def supportsPixelZoom(self):
    pass
  def supports_pixel_zoom(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToDisplayRegionBase(self):
    pass
  def upcastToDrawableRegion(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_DisplayRegionBase(self):
    pass
  def upcast_to_DrawableRegion(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class SwitchNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToSequenceNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_SequenceNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVisibleChild(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_visible_child(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVisibleChild(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_visible_child(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
TINYXMLINCLUDED = str

TINYXML_INCLUDED = str

TIXMLENCODINGLEGACY = int

TIXMLENCODINGUNKNOWN = int

TIXMLENCODINGUTF8 = int

TIXMLSAFE = str

TIXMLSNPRINTF = str

TIXMLSSCANF = str

TIXMLSTRING = str

TIXML_ENCODING_LEGACY = int

TIXML_ENCODING_UNKNOWN = int

TIXML_ENCODING_UTF8 = int

TIXML_SAFE = str

TIXML_SNPRINTF = str

TIXML_SSCANF = str

TIXML_STRING = str

TPHigh = int

TPLow = int

TPNormal = int

TPUrgent = int

TP_high = int

TP_low = int

TP_normal = int

TP_urgent = int

class TexGenAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def addStage(self):
    pass
  def add_stage(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getConstantValue(self):
    pass
  def getGeomRendering(self):
    pass
  def getHash(self):
    pass
  def getLight(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getSourceName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_constant_value(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_hash(self):
    pass
  def get_light(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_source_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasGenTexcoordStage(self):
    pass
  def hasStage(self):
    pass
  def has_gen_texcoord_stage(self):
    pass
  def has_stage(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeStage(self):
    pass
  def remove_stage(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class TexMatrixAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def addStage(self):
    pass
  def add_stage(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getGeomRendering(self):
    pass
  def getHash(self):
    pass
  def getMat(self):
    pass
  def get_num_attribs():
    pass
  def getNumStages(self):
    pass
  def getOverride(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getStage(self):
    pass
  def getStages(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_geom_rendering(self):
    pass
  def get_hash(self):
    pass
  def get_mat(self):
    pass
  def get_num_attribs():
    pass
  def get_num_stages(self):
    pass
  def get_override(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_stage(self):
    pass
  def get_stages(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasStage(self):
    pass
  def has_stage(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeStage(self):
    pass
  def remove_stage(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class TexProjectorEffect:
  def __init__(self):
    pass
  def addStage(self):
    pass
  def add_stage(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFrom(self):
    pass
  def get_num_effects():
    pass
  def getRefCount(self):
    pass
  def getTo(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_from(self):
    pass
  def get_num_effects():
    pass
  def get_ref_count(self):
    pass
  def get_to(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasStage(self):
    pass
  def has_stage(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_effects():
    pass
  def list_effects():
    pass
  def make():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeStage(self):
    pass
  def remove_stage(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_effects():
    pass
  def validate_effects():
    pass
  def write(self):
    pass
class TextAssembler:
  def __init__(self):
    pass
  def assembleText(self):
    pass
  def assemble_text(self):
    pass
  def assign(self):
    pass
  def calcC(self):
    pass
  def calcIndex(self):
    pass
  def calcR(self):
    pass
  def calc_width():
    pass
  def calc_c(self):
    pass
  def calc_index(self):
    pass
  def calc_r(self):
    pass
  def calc_width():
    pass
  def clear(self):
    pass
  def getCharacter(self):
    pass
  def getDynamicMerge(self):
    pass
  def getGraphic(self):
    pass
  def getLr(self):
    pass
  def getMaxRows(self):
    pass
  def getMultilineMode(self):
    pass
  def getNumCharacters(self):
    pass
  def getNumCols(self):
    pass
  def getNumRows(self):
    pass
  def getPlainWtext(self):
    pass
  def getProperties(self):
    pass
  def getUl(self):
    pass
  def getUsageHint(self):
    pass
  def getWidth(self):
    pass
  def getWordwrappedPlainWtext(self):
    pass
  def getWordwrappedWtext(self):
    pass
  def getWtext(self):
    pass
  def getXpos(self):
    pass
  def getYpos(self):
    pass
  def get_character(self):
    pass
  def get_dynamic_merge(self):
    pass
  def get_graphic(self):
    pass
  def get_lr(self):
    pass
  def get_max_rows(self):
    pass
  def get_multiline_mode(self):
    pass
  def get_num_characters(self):
    pass
  def get_num_cols(self):
    pass
  def get_num_rows(self):
    pass
  def get_plain_wtext(self):
    pass
  def get_properties(self):
    pass
  def get_ul(self):
    pass
  def get_usage_hint(self):
    pass
  def get_width(self):
    pass
  def get_wordwrapped_plain_wtext(self):
    pass
  def get_wordwrapped_wtext(self):
    pass
  def get_wtext(self):
    pass
  def get_xpos(self):
    pass
  def get_ypos(self):
    pass
  def has_character():
    pass
  def has_exact_character():
    pass
  def has_character():
    pass
  def has_exact_character():
    pass
  def is_whitespace():
    pass
  def is_whitespace():
    pass
  def setDynamicMerge(self):
    pass
  def setMaxRows(self):
    pass
  def setMultilineMode(self):
    pass
  def setProperties(self):
    pass
  def setUsageHint(self):
    pass
  def setWsubstr(self):
    pass
  def setWtext(self):
    pass
  def set_dynamic_merge(self):
    pass
  def set_max_rows(self):
    pass
  def set_multiline_mode(self):
    pass
  def set_properties(self):
    pass
  def set_usage_hint(self):
    pass
  def set_wsubstr(self):
    pass
  def set_wtext(self):
    pass
class TextFont:
  def __init__(self):
    pass
  RMExtruded = int

  RMInvalid = int

  RMPolygon = int

  RMSolid = int

  RMTexture = int

  RMWireframe = int

  RM_extruded = int

  RM_invalid = int

  RM_polygon = int

  RM_solid = int

  RM_texture = int

  RM_wireframe = int

  WODefault = int

  WOInvalid = int

  WOLeft = int

  WORight = int

  WO_default = int

  WO_invalid = int

  WO_left = int

  WO_right = int

  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def downcastToDynamicTextFont(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_DynamicTextFont(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getLineHeight(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSpaceAdvance(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_line_height(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_space_advance(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setLineHeight(self):
    pass
  def setName(self):
    pass
  def setSpaceAdvance(self):
    pass
  def set_line_height(self):
    pass
  def set_name(self):
    pass
  def set_space_advance(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write(self):
    pass
class TextGraphic:
  def __init__(self):
    pass
  def getFrame(self):
    pass
  def getInstanceFlag(self):
    pass
  def getModel(self):
    pass
  def get_frame(self):
    pass
  def get_instance_flag(self):
    pass
  def get_model(self):
    pass
  def setFrame(self):
    pass
  def setInstanceFlag(self):
    pass
  def setModel(self):
    pass
  def set_frame(self):
    pass
  def set_instance_flag(self):
    pass
  def set_model(self):
    pass
class TextNode:
  def __init__(self):
    pass
  ABoxedCenter = int

  ABoxedLeft = int

  ABoxedRight = int

  ACenter = int

  ALeft = int

  ARight = int

  A_boxed_center = int

  A_boxed_left = int

  A_boxed_right = int

  A_center = int

  A_left = int

  A_right = int

  EIso8859 = int

  EUnicode = int

  EUtf8 = int

  E_iso8859 = int

  E_unicode = int

  E_utf8 = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  FFDynamicMerge = int

  FFLight = int

  FFMedium = int

  FFNone = int

  FFStrong = int

  FF_dynamic_merge = int

  FF_light = int

  FF_medium = int

  FF_none = int

  FF_strong = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addProperties(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_properties(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def appendText(self):
    pass
  def appendUnicodeChar(self):
    pass
  def appendWtext(self):
    pass
  def append_text(self):
    pass
  def append_unicode_char(self):
    pass
  def append_wtext(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def calcWidth(self):
    pass
  def calc_width(self):
    pass
  def clear(self):
    pass
  def clearAlign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBin(self):
    pass
  def clearBounds(self):
    pass
  def clearCard(self):
    pass
  def clearCardBorder(self):
    pass
  def clearCardTexture(self):
    pass
  def clearDrawOrder(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearFont(self):
    pass
  def clearFrame(self):
    pass
  def clearGlyphScale(self):
    pass
  def clearGlyphShift(self):
    pass
  def clearIndent(self):
    pass
  def clearMaxRows(self):
    pass
  def clearName(self):
    pass
  def clearPreserveTrailingWhitespace(self):
    pass
  def clearPythonTag(self):
    pass
  def clearShadow(self):
    pass
  def clearShadowColor(self):
    pass
  def clearSlant(self):
    pass
  def clearSmallCaps(self):
    pass
  def clearSmallCapsScale(self):
    pass
  def clearState(self):
    pass
  def clearTabWidth(self):
    pass
  def clearTag(self):
    pass
  def clearText(self):
    pass
  def clearTextColor(self):
    pass
  def clearTextScale(self):
    pass
  def clearTransform(self):
    pass
  def clearUnderscore(self):
    pass
  def clearUnderscoreHeight(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clearWordwrap(self):
    pass
  def clear_align(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bin(self):
    pass
  def clear_bounds(self):
    pass
  def clear_card(self):
    pass
  def clear_card_border(self):
    pass
  def clear_card_texture(self):
    pass
  def clear_draw_order(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_font(self):
    pass
  def clear_frame(self):
    pass
  def clear_glyph_scale(self):
    pass
  def clear_glyph_shift(self):
    pass
  def clear_indent(self):
    pass
  def clear_max_rows(self):
    pass
  def clear_name(self):
    pass
  def clear_preserve_trailing_whitespace(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_shadow(self):
    pass
  def clear_shadow_color(self):
    pass
  def clear_slant(self):
    pass
  def clear_small_caps(self):
    pass
  def clear_small_caps_scale(self):
    pass
  def clear_state(self):
    pass
  def clear_tab_width(self):
    pass
  def clear_tag(self):
    pass
  def clear_text(self):
    pass
  def clear_text_color(self):
    pass
  def clear_text_scale(self):
    pass
  def clear_transform(self):
    pass
  def clear_underscore(self):
    pass
  def clear_underscore_height(self):
    pass
  def clear_unexpected_change(self):
    pass
  def clear_wordwrap(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decodeText(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_text(self):
    pass
  def downcastToTextNode(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TextNode(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_wchar():
    pass
  def encodeWtext(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def encode_wchar():
    pass
  def encode_wtext(self):
    pass
  def eq(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def forceUpdate(self):
    pass
  def force_update(self):
    pass
  def generate(self):
    pass
  def getAlign(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBin(self):
    pass
  def getBottom(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getCardActual(self):
    pass
  def getCardAsSet(self):
    pass
  def getCardBorderSize(self):
    pass
  def getCardBorderUvPortion(self):
    pass
  def getCardColor(self):
    pass
  def getCardDecal(self):
    pass
  def getCardTexture(self):
    pass
  def getCardTransformed(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getCoordinateSystem(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawOrder(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getEncodedChar(self):
    pass
  def getEncoding(self):
    pass
  def getFancyBits(self):
    pass
  def getFlattenFlags(self):
    pass
  def getFont(self):
    pass
  def getFrameActual(self):
    pass
  def getFrameAsSet(self):
    pass
  def getFrameColor(self):
    pass
  def getFrameCorners(self):
    pass
  def getFrameLineWidth(self):
    pass
  def getGlyphScale(self):
    pass
  def getGlyphShift(self):
    pass
  def getHeight(self):
    pass
  def getIndent(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalGeom(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLeft(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getLineHeight(self):
    pass
  def getLowerRight3d(self):
    pass
  def getMaxRows(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChars(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumRows(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPreserveTrailingWhitespace(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getRight(self):
    pass
  def getShadow(self):
    pass
  def getShadowColor(self):
    pass
  def getSlant(self):
    pass
  def getSmallCaps(self):
    pass
  def getSmallCapsScale(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTabWidth(self):
    pass
  def getTag(self):
    pass
  def getText(self):
    pass
  def getTextAsAscii(self):
    pass
  def getTextColor(self):
    pass
  def getTextScale(self):
    pass
  def getTop(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnderscore(self):
    pass
  def getUnderscoreHeight(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getUnicodeChar(self):
    pass
  def getUpperLeft3d(self):
    pass
  def getUsageHint(self):
    pass
  def getWidth(self):
    pass
  def getWordwrap(self):
    pass
  def getWordwrappedText(self):
    pass
  def getWordwrappedWtext(self):
    pass
  def getWtext(self):
    pass
  def getWtextAsAscii(self):
    pass
  def get_align(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bin(self):
    pass
  def get_bottom(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_card_actual(self):
    pass
  def get_card_as_set(self):
    pass
  def get_card_border_size(self):
    pass
  def get_card_border_uv_portion(self):
    pass
  def get_card_color(self):
    pass
  def get_card_decal(self):
    pass
  def get_card_texture(self):
    pass
  def get_card_transformed(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_coordinate_system(self):
    pass
  def get_default_encoding():
    pass
  def get_default_font():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_order(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_encoded_char(self):
    pass
  def get_encoding(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_flatten_flags(self):
    pass
  def get_font(self):
    pass
  def get_frame_actual(self):
    pass
  def get_frame_as_set(self):
    pass
  def get_frame_color(self):
    pass
  def get_frame_corners(self):
    pass
  def get_frame_line_width(self):
    pass
  def get_glyph_scale(self):
    pass
  def get_glyph_shift(self):
    pass
  def get_height(self):
    pass
  def get_indent(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_geom(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_left(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_line_height(self):
    pass
  def get_lower_right_3d(self):
    pass
  def get_max_rows(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_chars(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_rows(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_preserve_trailing_whitespace(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_right(self):
    pass
  def get_shadow(self):
    pass
  def get_shadow_color(self):
    pass
  def get_slant(self):
    pass
  def get_small_caps(self):
    pass
  def get_small_caps_scale(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tab_width(self):
    pass
  def get_tag(self):
    pass
  def get_text(self):
    pass
  def get_text_as_ascii(self):
    pass
  def get_text_color(self):
    pass
  def get_text_scale(self):
    pass
  def get_top(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_underscore(self):
    pass
  def get_underscore_height(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_unicode_char(self):
    pass
  def get_upper_left_3d(self):
    pass
  def get_usage_hint(self):
    pass
  def get_width(self):
    pass
  def get_wordwrap(self):
    pass
  def get_wordwrapped_text(self):
    pass
  def get_wordwrapped_wtext(self):
    pass
  def get_wtext(self):
    pass
  def get_wtext_as_ascii(self):
    pass
  def hasAlign(self):
    pass
  def hasAttrib(self):
    pass
  def hasBin(self):
    pass
  def hasCard(self):
    pass
  def hasCardBorder(self):
    pass
  def hasCardTexture(self):
    pass
  def hasCharacter(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasDrawOrder(self):
    pass
  def hasEffect(self):
    pass
  def hasExactCharacter(self):
    pass
  def hasFont(self):
    pass
  def hasFrame(self):
    pass
  def hasGlyphScale(self):
    pass
  def hasGlyphShift(self):
    pass
  def hasIndent(self):
    pass
  def hasMaxRows(self):
    pass
  def hasName(self):
    pass
  def hasOverflow(self):
    pass
  def hasPreserveTrailingWhitespace(self):
    pass
  def hasPythonTag(self):
    pass
  def hasShadow(self):
    pass
  def hasShadowColor(self):
    pass
  def hasSlant(self):
    pass
  def hasSmallCaps(self):
    pass
  def hasSmallCapsScale(self):
    pass
  def hasTabWidth(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasText(self):
    pass
  def hasTextColor(self):
    pass
  def hasTextScale(self):
    pass
  def hasUnderscore(self):
    pass
  def hasUnderscoreHeight(self):
    pass
  def hasWordwrap(self):
    pass
  def has_align(self):
    pass
  def has_attrib(self):
    pass
  def has_bin(self):
    pass
  def has_card(self):
    pass
  def has_card_border(self):
    pass
  def has_card_texture(self):
    pass
  def has_character(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_draw_order(self):
    pass
  def has_effect(self):
    pass
  def has_exact_character(self):
    pass
  def has_font(self):
    pass
  def has_frame(self):
    pass
  def has_glyph_scale(self):
    pass
  def has_glyph_shift(self):
    pass
  def has_indent(self):
    pass
  def has_max_rows(self):
    pass
  def has_name(self):
    pass
  def has_overflow(self):
    pass
  def has_preserve_trailing_whitespace(self):
    pass
  def has_python_tag(self):
    pass
  def has_shadow(self):
    pass
  def has_shadow_color(self):
    pass
  def has_slant(self):
    pass
  def has_small_caps(self):
    pass
  def has_small_caps_scale(self):
    pass
  def has_tab_width(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_text(self):
    pass
  def has_text_color(self):
    pass
  def has_text_scale(self):
    pass
  def has_underscore(self):
    pass
  def has_underscore_height(self):
    pass
  def has_wordwrap(self):
    pass
  def isAmbientLight(self):
    pass
  def isAnySpecified(self):
    pass
  def isBoundsStale(self):
    pass
  def isCardAsMargin(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isFrameAsMargin(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isWhitespace(self):
    pass
  def isWtext(self):
    pass
  def is_ambient_light(self):
    pass
  def is_any_specified(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_card_as_margin(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_frame_as_margin(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_whitespace(self):
    pass
  def is_wtext(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def lower():
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def makeLower(self):
    pass
  def makeUpper(self):
    pass
  def make_copy(self):
    pass
  def make_lower(self):
    pass
  def make_upper(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def reencode_text():
    pass
  def reencode_text():
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAlign(self):
    pass
  def setAttrib(self):
    pass
  def setBin(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setCardActual(self):
    pass
  def setCardAsMargin(self):
    pass
  def setCardBorder(self):
    pass
  def setCardColor(self):
    pass
  def setCardDecal(self):
    pass
  def setCardTexture(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def setDrawOrder(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setEncoding(self):
    pass
  def setFinal(self):
    pass
  def setFlattenFlags(self):
    pass
  def setFont(self):
    pass
  def setFrameActual(self):
    pass
  def setFrameAsMargin(self):
    pass
  def setFrameColor(self):
    pass
  def setFrameCorners(self):
    pass
  def setFrameLineWidth(self):
    pass
  def setGlyphScale(self):
    pass
  def setGlyphShift(self):
    pass
  def setIndent(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMaxRows(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPreserveTrailingWhitespace(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setShadow(self):
    pass
  def setShadowColor(self):
    pass
  def setSlant(self):
    pass
  def setSmallCaps(self):
    pass
  def setSmallCapsScale(self):
    pass
  def setState(self):
    pass
  def setTabWidth(self):
    pass
  def setTag(self):
    pass
  def setText(self):
    pass
  def setTextColor(self):
    pass
  def setTextScale(self):
    pass
  def setTransform(self):
    pass
  def setUnderscore(self):
    pass
  def setUnderscoreHeight(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setUnicodeChar(self):
    pass
  def setUsageHint(self):
    pass
  def setWordwrap(self):
    pass
  def setWtext(self):
    pass
  def set_align(self):
    pass
  def set_attrib(self):
    pass
  def set_bin(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_card_actual(self):
    pass
  def set_card_as_margin(self):
    pass
  def set_card_border(self):
    pass
  def set_card_color(self):
    pass
  def set_card_decal(self):
    pass
  def set_card_texture(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_default_encoding():
    pass
  def set_default_font():
    pass
  def set_draw_order(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_encoding(self):
    pass
  def set_final(self):
    pass
  def set_flatten_flags(self):
    pass
  def set_font(self):
    pass
  def set_frame_actual(self):
    pass
  def set_frame_as_margin(self):
    pass
  def set_frame_color(self):
    pass
  def set_frame_corners(self):
    pass
  def set_frame_line_width(self):
    pass
  def set_glyph_scale(self):
    pass
  def set_glyph_shift(self):
    pass
  def set_indent(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_max_rows(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_preserve_trailing_whitespace(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_shadow(self):
    pass
  def set_shadow_color(self):
    pass
  def set_slant(self):
    pass
  def set_small_caps(self):
    pass
  def set_small_caps_scale(self):
    pass
  def set_state(self):
    pass
  def set_tab_width(self):
    pass
  def set_tag(self):
    pass
  def set_text(self):
    pass
  def set_text_color(self):
    pass
  def set_text_scale(self):
    pass
  def set_transform(self):
    pass
  def set_underscore(self):
    pass
  def set_underscore_height(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_unicode_char(self):
    pass
  def set_usage_hint(self):
    pass
  def set_wordwrap(self):
    pass
  def set_wtext(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unicode_isalpha():
    pass
  def unicode_isdigit():
    pass
  def unicode_islower():
    pass
  def unicode_ispunct():
    pass
  def unicode_isspace():
    pass
  def unicode_isupper():
    pass
  def unicode_tolower():
    pass
  def unicode_toupper():
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToPandaNode(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTextEncoder(self):
    pass
  def upcastToTextProperties(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_PandaNode(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TextEncoder(self):
    pass
  def upcast_to_TextProperties(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def update(self):
    pass
  def upper():
    pass
  def write(self):
    pass
class TextProperties:
  def __init__(self):
    pass
  ABoxedCenter = int

  ABoxedLeft = int

  ABoxedRight = int

  ACenter = int

  ALeft = int

  ARight = int

  A_boxed_center = int

  A_boxed_left = int

  A_boxed_right = int

  A_center = int

  A_left = int

  A_right = int

  def addProperties(self):
    pass
  def add_properties(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def clearAlign(self):
    pass
  def clearBin(self):
    pass
  def clearDrawOrder(self):
    pass
  def clearFont(self):
    pass
  def clearGlyphScale(self):
    pass
  def clearGlyphShift(self):
    pass
  def clearIndent(self):
    pass
  def clearPreserveTrailingWhitespace(self):
    pass
  def clearShadow(self):
    pass
  def clearShadowColor(self):
    pass
  def clearSlant(self):
    pass
  def clearSmallCaps(self):
    pass
  def clearSmallCapsScale(self):
    pass
  def clearTabWidth(self):
    pass
  def clearTextColor(self):
    pass
  def clearTextScale(self):
    pass
  def clearUnderscore(self):
    pass
  def clearUnderscoreHeight(self):
    pass
  def clearWordwrap(self):
    pass
  def clear_align(self):
    pass
  def clear_bin(self):
    pass
  def clear_draw_order(self):
    pass
  def clear_font(self):
    pass
  def clear_glyph_scale(self):
    pass
  def clear_glyph_shift(self):
    pass
  def clear_indent(self):
    pass
  def clear_preserve_trailing_whitespace(self):
    pass
  def clear_shadow(self):
    pass
  def clear_shadow_color(self):
    pass
  def clear_slant(self):
    pass
  def clear_small_caps(self):
    pass
  def clear_small_caps_scale(self):
    pass
  def clear_tab_width(self):
    pass
  def clear_text_color(self):
    pass
  def clear_text_scale(self):
    pass
  def clear_underscore(self):
    pass
  def clear_underscore_height(self):
    pass
  def clear_wordwrap(self):
    pass
  def downcastToTextNode(self):
    pass
  def downcast_to_TextNode(self):
    pass
  def eq(self):
    pass
  def getAlign(self):
    pass
  def getBin(self):
    pass
  def get_class_type():
    pass
  def get_default_font():
    pass
  def getDrawOrder(self):
    pass
  def getFont(self):
    pass
  def getGlyphScale(self):
    pass
  def getGlyphShift(self):
    pass
  def getIndent(self):
    pass
  def getPreserveTrailingWhitespace(self):
    pass
  def getShadow(self):
    pass
  def getShadowColor(self):
    pass
  def getSlant(self):
    pass
  def getSmallCaps(self):
    pass
  def getSmallCapsScale(self):
    pass
  def getTabWidth(self):
    pass
  def getTextColor(self):
    pass
  def getTextScale(self):
    pass
  def getUnderscore(self):
    pass
  def getUnderscoreHeight(self):
    pass
  def getWordwrap(self):
    pass
  def get_align(self):
    pass
  def get_bin(self):
    pass
  def get_class_type():
    pass
  def get_default_font():
    pass
  def get_draw_order(self):
    pass
  def get_font(self):
    pass
  def get_glyph_scale(self):
    pass
  def get_glyph_shift(self):
    pass
  def get_indent(self):
    pass
  def get_preserve_trailing_whitespace(self):
    pass
  def get_shadow(self):
    pass
  def get_shadow_color(self):
    pass
  def get_slant(self):
    pass
  def get_small_caps(self):
    pass
  def get_small_caps_scale(self):
    pass
  def get_tab_width(self):
    pass
  def get_text_color(self):
    pass
  def get_text_scale(self):
    pass
  def get_underscore(self):
    pass
  def get_underscore_height(self):
    pass
  def get_wordwrap(self):
    pass
  def hasAlign(self):
    pass
  def hasBin(self):
    pass
  def hasDrawOrder(self):
    pass
  def hasFont(self):
    pass
  def hasGlyphScale(self):
    pass
  def hasGlyphShift(self):
    pass
  def hasIndent(self):
    pass
  def hasPreserveTrailingWhitespace(self):
    pass
  def hasShadow(self):
    pass
  def hasShadowColor(self):
    pass
  def hasSlant(self):
    pass
  def hasSmallCaps(self):
    pass
  def hasSmallCapsScale(self):
    pass
  def hasTabWidth(self):
    pass
  def hasTextColor(self):
    pass
  def hasTextScale(self):
    pass
  def hasUnderscore(self):
    pass
  def hasUnderscoreHeight(self):
    pass
  def hasWordwrap(self):
    pass
  def has_align(self):
    pass
  def has_bin(self):
    pass
  def has_draw_order(self):
    pass
  def has_font(self):
    pass
  def has_glyph_scale(self):
    pass
  def has_glyph_shift(self):
    pass
  def has_indent(self):
    pass
  def has_preserve_trailing_whitespace(self):
    pass
  def has_shadow(self):
    pass
  def has_shadow_color(self):
    pass
  def has_slant(self):
    pass
  def has_small_caps(self):
    pass
  def has_small_caps_scale(self):
    pass
  def has_tab_width(self):
    pass
  def has_text_color(self):
    pass
  def has_text_scale(self):
    pass
  def has_underscore(self):
    pass
  def has_underscore_height(self):
    pass
  def has_wordwrap(self):
    pass
  def isAnySpecified(self):
    pass
  def is_any_specified(self):
    pass
  def ne(self):
    pass
  def setAlign(self):
    pass
  def setBin(self):
    pass
  def set_default_font():
    pass
  def setDrawOrder(self):
    pass
  def setFont(self):
    pass
  def setGlyphScale(self):
    pass
  def setGlyphShift(self):
    pass
  def setIndent(self):
    pass
  def setPreserveTrailingWhitespace(self):
    pass
  def setShadow(self):
    pass
  def setShadowColor(self):
    pass
  def setSlant(self):
    pass
  def setSmallCaps(self):
    pass
  def setSmallCapsScale(self):
    pass
  def setTabWidth(self):
    pass
  def setTextColor(self):
    pass
  def setTextScale(self):
    pass
  def setUnderscore(self):
    pass
  def setUnderscoreHeight(self):
    pass
  def setWordwrap(self):
    pass
  def set_align(self):
    pass
  def set_bin(self):
    pass
  def set_default_font():
    pass
  def set_draw_order(self):
    pass
  def set_font(self):
    pass
  def set_glyph_scale(self):
    pass
  def set_glyph_shift(self):
    pass
  def set_indent(self):
    pass
  def set_preserve_trailing_whitespace(self):
    pass
  def set_shadow(self):
    pass
  def set_shadow_color(self):
    pass
  def set_slant(self):
    pass
  def set_small_caps(self):
    pass
  def set_small_caps_scale(self):
    pass
  def set_tab_width(self):
    pass
  def set_text_color(self):
    pass
  def set_text_scale(self):
    pass
  def set_underscore(self):
    pass
  def set_underscore_height(self):
    pass
  def set_wordwrap(self):
    pass
  def write(self):
    pass
class TextPropertiesManager:
  def __init__(self):
    pass
  def clearGraphic(self):
    pass
  def clearProperties(self):
    pass
  def clear_graphic(self):
    pass
  def clear_properties(self):
    pass
  def get_global_ptr():
    pass
  def getGraphic(self):
    pass
  def getProperties(self):
    pass
  def get_global_ptr():
    pass
  def get_graphic(self):
    pass
  def get_properties(self):
    pass
  def hasGraphic(self):
    pass
  def hasProperties(self):
    pass
  def has_graphic(self):
    pass
  def has_properties(self):
    pass
  def setGraphic(self):
    pass
  def setProperties(self):
    pass
  def set_graphic(self):
    pass
  def set_properties(self):
    pass
  def write(self):
    pass
class Texture:
  def __init__(self):
    pass
  CMDefault = int

  CMDxt1 = int

  CMDxt2 = int

  CMDxt3 = int

  CMDxt4 = int

  CMDxt5 = int

  CMFxt1 = int

  CMOff = int

  CMOn = int

  CMPvr12bpp = int

  CMPvr14bpp = int

  CM_default = int

  CM_dxt1 = int

  CM_dxt2 = int

  CM_dxt3 = int

  CM_dxt4 = int

  CM_dxt5 = int

  CM_fxt1 = int

  CM_off = int

  CM_on = int

  CM_pvr1_2bpp = int

  CM_pvr1_4bpp = int

  FAlpha = int

  FBlue = int

  FColorIndex = int

  FDepthComponent = int

  FDepthComponent16 = int

  FDepthComponent24 = int

  FDepthComponent32 = int

  FDepthStencil = int

  FGreen = int

  FLuminance = int

  FLuminanceAlpha = int

  FLuminanceAlphamask = int

  FRed = int

  FRgb = int

  FRgb12 = int

  FRgb332 = int

  FRgb5 = int

  FRgb8 = int

  FRgba = int

  FRgba12 = int

  FRgba16 = int

  FRgba32 = int

  FRgba4 = int

  FRgba5 = int

  FRgba8 = int

  FRgbm = int

  FTDefault = int

  FTInvalid = int

  FTLinear = int

  FTLinearMipmapLinear = int

  FTLinearMipmapNearest = int

  FTNearest = int

  FTNearestMipmapLinear = int

  FTNearestMipmapNearest = int

  FTShadow = int

  FT_default = int

  FT_invalid = int

  FT_linear = int

  FT_linear_mipmap_linear = int

  FT_linear_mipmap_nearest = int

  FT_nearest = int

  FT_nearest_mipmap_linear = int

  FT_nearest_mipmap_nearest = int

  FT_shadow = int

  F_alpha = int

  F_blue = int

  F_color_index = int

  F_depth_component = int

  F_depth_component16 = int

  F_depth_component24 = int

  F_depth_component32 = int

  F_depth_stencil = int

  F_green = int

  F_luminance = int

  F_luminance_alpha = int

  F_luminance_alphamask = int

  F_red = int

  F_rgb = int

  F_rgb12 = int

  F_rgb332 = int

  F_rgb5 = int

  F_rgb8 = int

  F_rgba = int

  F_rgba12 = int

  F_rgba16 = int

  F_rgba32 = int

  F_rgba4 = int

  F_rgba5 = int

  F_rgba8 = int

  F_rgbm = int

  QLBest = int

  QLDefault = int

  QLFastest = int

  QLNormal = int

  QL_best = int

  QL_default = int

  QL_fastest = int

  QL_normal = int

  TFloat = int

  TT1dTexture = int

  TT2dTexture = int

  TT2dTextureArray = int

  TT3dTexture = int

  TTCubeMap = int

  TT_1d_texture = int

  TT_2d_texture = int

  TT_2d_texture_array = int

  TT_3d_texture = int

  TT_cube_map = int

  TUnsignedByte = int

  TUnsignedInt248 = int

  TUnsignedShort = int

  T_float = int

  T_unsigned_byte = int

  T_unsigned_int_24_8 = int

  T_unsigned_short = int

  WMBorderColor = int

  WMClamp = int

  WMInvalid = int

  WMMirror = int

  WMMirrorOnce = int

  WMRepeat = int

  WM_border_color = int

  WM_clamp = int

  WM_invalid = int

  WM_mirror = int

  WM_mirror_once = int

  WM_repeat = int

  def assign(self):
    pass
  def clear(self):
    pass
  def clearAlphaFilename(self):
    pass
  def clearAlphaFullpath(self):
    pass
  def clearAuxData(self):
    pass
  def clearFilename(self):
    pass
  def clearFullpath(self):
    pass
  def clearName(self):
    pass
  def clearRamImage(self):
    pass
  def clearRamMipmapImage(self):
    pass
  def clearRamMipmapImages(self):
    pass
  def clearSimpleRamImage(self):
    pass
  def clear_alpha_filename(self):
    pass
  def clear_alpha_fullpath(self):
    pass
  def clear_aux_data(self):
    pass
  def clear_filename(self):
    pass
  def clear_fullpath(self):
    pass
  def clear_name(self):
    pass
  def clear_ram_image(self):
    pass
  def clear_ram_mipmap_image(self):
    pass
  def clear_ram_mipmap_images(self):
    pass
  def clear_simple_ram_image(self):
    pass
  def compressRamImage(self):
    pass
  def compress_ram_image(self):
    pass
  def considerRescale(self):
    pass
  def consider_rescale(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def down_to_power_2():
    pass
  def down_to_power_2():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcastToVideoTexture(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def downcast_to_VideoTexture(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def estimateTextureMemory(self):
    pass
  def estimate_texture_memory(self):
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def generateAlphaScaleMap(self):
    pass
  def generateNormalizationCubeMap(self):
    pass
  def generateRamMipmapImages(self):
    pass
  def generateSimpleRamImage(self):
    pass
  def generate_alpha_scale_map(self):
    pass
  def generate_normalization_cube_map(self):
    pass
  def generate_ram_mipmap_images(self):
    pass
  def generate_simple_ram_image(self):
    pass
  def getActive(self):
    pass
  def getAlphaFilename(self):
    pass
  def getAlphaFullpath(self):
    pass
  def getAnisotropicDegree(self):
    pass
  def getAutoTextureScale(self):
    pass
  def getAuxData(self):
    pass
  def getBamModified(self):
    pass
  def getBorderColor(self):
    pass
  def get_class_type():
    pass
  def getComponentType(self):
    pass
  def getComponentWidth(self):
    pass
  def getCompression(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getEffectiveAnisotropicDegree(self):
    pass
  def getEffectiveMagfilter(self):
    pass
  def getEffectiveMinfilter(self):
    pass
  def getEffectiveQualityLevel(self):
    pass
  def getExpectedMipmapNumPages(self):
    pass
  def getExpectedMipmapXSize(self):
    pass
  def getExpectedMipmapYSize(self):
    pass
  def getExpectedMipmapZSize(self):
    pass
  def getExpectedNumMipmapLevels(self):
    pass
  def getExpectedRamImageSize(self):
    pass
  def getExpectedRamMipmapImageSize(self):
    pass
  def getExpectedRamMipmapPageSize(self):
    pass
  def getExpectedRamMipmapViewSize(self):
    pass
  def getExpectedRamPageSize(self):
    pass
  def getFilename(self):
    pass
  def getFormat(self):
    pass
  def getFullpath(self):
    pass
  def getImageModified(self):
    pass
  def getKeepRamImage(self):
    pass
  def getLoadedFromImage(self):
    pass
  def getLoadedFromTxo(self):
    pass
  def getMagfilter(self):
    pass
  def getMatchFramebufferFormat(self):
    pass
  def getMinfilter(self):
    pass
  def getName(self):
    pass
  def getNumComponents(self):
    pass
  def getNumLoadableRamMipmapImages(self):
    pass
  def getNumPages(self):
    pass
  def getNumRamMipmapImages(self):
    pass
  def getNumViews(self):
    pass
  def getOrigFileXSize(self):
    pass
  def getOrigFileYSize(self):
    pass
  def getOrigFileZSize(self):
    pass
  def getPadXSize(self):
    pass
  def getPadYSize(self):
    pass
  def getPadZSize(self):
    pass
  def getPostLoadStoreCache(self):
    pass
  def getPropertiesModified(self):
    pass
  def getQualityLevel(self):
    pass
  def getRamImage(self):
    pass
  def getRamImageAs(self):
    pass
  def getRamImageCompression(self):
    pass
  def getRamImageSize(self):
    pass
  def getRamMipmapImage(self):
    pass
  def getRamMipmapImageSize(self):
    pass
  def getRamMipmapPageSize(self):
    pass
  def getRamMipmapViewSize(self):
    pass
  def getRamPageSize(self):
    pass
  def getRamViewSize(self):
    pass
  def getRefCount(self):
    pass
  def getRenderToTexture(self):
    pass
  def getResident(self):
    pass
  def getSimpleImageModified(self):
    pass
  def getSimpleRamImage(self):
    pass
  def getSimpleRamImageSize(self):
    pass
  def getSimpleXSize(self):
    pass
  def getSimpleYSize(self):
    pass
  def getTexScale(self):
    pass
  def getTextureType(self):
    pass
  def get_textures_power_2():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUncompressedRamImage(self):
    pass
  def getWrapU(self):
    pass
  def getWrapV(self):
    pass
  def getWrapW(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZSize(self):
    pass
  def get_active(self):
    pass
  def get_alpha_filename(self):
    pass
  def get_alpha_fullpath(self):
    pass
  def get_anisotropic_degree(self):
    pass
  def get_auto_texture_scale(self):
    pass
  def get_aux_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_border_color(self):
    pass
  def get_class_type():
    pass
  def get_component_type(self):
    pass
  def get_component_width(self):
    pass
  def get_compression(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_effective_anisotropic_degree(self):
    pass
  def get_effective_magfilter(self):
    pass
  def get_effective_minfilter(self):
    pass
  def get_effective_quality_level(self):
    pass
  def get_expected_mipmap_num_pages(self):
    pass
  def get_expected_mipmap_x_size(self):
    pass
  def get_expected_mipmap_y_size(self):
    pass
  def get_expected_mipmap_z_size(self):
    pass
  def get_expected_num_mipmap_levels(self):
    pass
  def get_expected_ram_image_size(self):
    pass
  def get_expected_ram_mipmap_image_size(self):
    pass
  def get_expected_ram_mipmap_page_size(self):
    pass
  def get_expected_ram_mipmap_view_size(self):
    pass
  def get_expected_ram_page_size(self):
    pass
  def get_filename(self):
    pass
  def get_format(self):
    pass
  def get_fullpath(self):
    pass
  def get_image_modified(self):
    pass
  def get_keep_ram_image(self):
    pass
  def get_loaded_from_image(self):
    pass
  def get_loaded_from_txo(self):
    pass
  def get_magfilter(self):
    pass
  def get_match_framebuffer_format(self):
    pass
  def get_minfilter(self):
    pass
  def get_name(self):
    pass
  def get_num_components(self):
    pass
  def get_num_loadable_ram_mipmap_images(self):
    pass
  def get_num_pages(self):
    pass
  def get_num_ram_mipmap_images(self):
    pass
  def get_num_views(self):
    pass
  def get_orig_file_x_size(self):
    pass
  def get_orig_file_y_size(self):
    pass
  def get_orig_file_z_size(self):
    pass
  def get_pad_x_size(self):
    pass
  def get_pad_y_size(self):
    pass
  def get_pad_z_size(self):
    pass
  def get_post_load_store_cache(self):
    pass
  def get_properties_modified(self):
    pass
  def get_quality_level(self):
    pass
  def get_ram_image(self):
    pass
  def get_ram_image_as(self):
    pass
  def get_ram_image_compression(self):
    pass
  def get_ram_image_size(self):
    pass
  def get_ram_mipmap_image(self):
    pass
  def get_ram_mipmap_image_size(self):
    pass
  def get_ram_mipmap_page_size(self):
    pass
  def get_ram_mipmap_view_size(self):
    pass
  def get_ram_page_size(self):
    pass
  def get_ram_view_size(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_to_texture(self):
    pass
  def get_resident(self):
    pass
  def get_simple_image_modified(self):
    pass
  def get_simple_ram_image(self):
    pass
  def get_simple_ram_image_size(self):
    pass
  def get_simple_x_size(self):
    pass
  def get_simple_y_size(self):
    pass
  def get_tex_scale(self):
    pass
  def get_texture_type(self):
    pass
  def get_textures_power_2():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_uncompressed_ram_image(self):
    pass
  def get_wrap_u(self):
    pass
  def get_wrap_v(self):
    pass
  def get_wrap_w(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_z_size(self):
    pass
  def hasAllRamMipmapImages(self):
    pass
  def hasAlphaFilename(self):
    pass
  def hasAlphaFullpath(self):
    pass
  def hasAutoTextureScale(self):
    pass
  def hasCompression(self):
    pass
  def hasFilename(self):
    pass
  def hasFullpath(self):
    pass
  def hasName(self):
    pass
  def hasRamImage(self):
    pass
  def hasRamMipmapImage(self):
    pass
  def hasSimpleRamImage(self):
    pass
  def has_textures_power_2():
    pass
  def hasUncompressedRamImage(self):
    pass
  def has_all_ram_mipmap_images(self):
    pass
  def has_alpha_filename(self):
    pass
  def has_alpha_fullpath(self):
    pass
  def has_auto_texture_scale(self):
    pass
  def has_compression(self):
    pass
  def has_filename(self):
    pass
  def has_fullpath(self):
    pass
  def has_name(self):
    pass
  def has_ram_image(self):
    pass
  def has_ram_mipmap_image(self):
    pass
  def has_simple_ram_image(self):
    pass
  def has_textures_power_2():
    pass
  def has_uncompressed_ram_image(self):
    pass
  def isCacheable(self):
    pass
  def isExactType(self):
    pass
  def is_mipmap():
    pass
  def isOfType(self):
    pass
  def isPrepared(self):
    pass
  def is_cacheable(self):
    pass
  def is_exact_type(self):
    pass
  def is_mipmap():
    pass
  def is_of_type(self):
    pass
  def is_prepared(self):
    pass
  def load(self):
    pass
  def loadRelated(self):
    pass
  def load_related(self):
    pass
  def makeCopy(self):
    pass
  def make_from_txo():
    pass
  def makeRamImage(self):
    pass
  def makeRamMipmapImage(self):
    pass
  def make_copy(self):
    pass
  def make_from_txo():
    pass
  def make_ram_image(self):
    pass
  def make_ram_mipmap_image(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mightHaveRamImage(self):
    pass
  def might_have_ram_image(self):
    pass
  def modifyRamImage(self):
    pass
  def modifyRamMipmapImage(self):
    pass
  def modifySimpleRamImage(self):
    pass
  def modify_ram_image(self):
    pass
  def modify_ram_mipmap_image(self):
    pass
  def modify_simple_ram_image(self):
    pass
  def newSimpleRamImage(self):
    pass
  def new_simple_ram_image(self):
    pass
  def output(self):
    pass
  def peek(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def read(self):
    pass
  def readDds(self):
    pass
  def readTxo(self):
    pass
  def read_dds(self):
    pass
  def read_txo(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def reload(self):
    pass
  def rescaleTexture(self):
    pass
  def rescale_texture(self):
    pass
  def setAlphaFilename(self):
    pass
  def setAlphaFullpath(self):
    pass
  def setAnisotropicDegree(self):
    pass
  def setAutoTextureScale(self):
    pass
  def setAuxData(self):
    pass
  def setBorderColor(self):
    pass
  def setComponentType(self):
    pass
  def setCompression(self):
    pass
  def setFilename(self):
    pass
  def setFormat(self):
    pass
  def setFullpath(self):
    pass
  def setKeepRamImage(self):
    pass
  def setLoadedFromImage(self):
    pass
  def setLoadedFromTxo(self):
    pass
  def setMagfilter(self):
    pass
  def setMatchFramebufferFormat(self):
    pass
  def setMinfilter(self):
    pass
  def setName(self):
    pass
  def setNumViews(self):
    pass
  def setOrigFileSize(self):
    pass
  def setPadSize(self):
    pass
  def setPostLoadStoreCache(self):
    pass
  def setQualityLevel(self):
    pass
  def setRamImage(self):
    pass
  def setRamImageAs(self):
    pass
  def setRamMipmapImage(self):
    pass
  def setRamMipmapPointerFromInt(self):
    pass
  def setRenderToTexture(self):
    pass
  def setSimpleRamImage(self):
    pass
  def setSizePadded(self):
    pass
  def set_textures_power_2():
    pass
  def setWrapU(self):
    pass
  def setWrapV(self):
    pass
  def setWrapW(self):
    pass
  def setXSize(self):
    pass
  def setYSize(self):
    pass
  def setZSize(self):
    pass
  def set_alpha_filename(self):
    pass
  def set_alpha_fullpath(self):
    pass
  def set_anisotropic_degree(self):
    pass
  def set_auto_texture_scale(self):
    pass
  def set_aux_data(self):
    pass
  def set_border_color(self):
    pass
  def set_component_type(self):
    pass
  def set_compression(self):
    pass
  def set_filename(self):
    pass
  def set_format(self):
    pass
  def set_fullpath(self):
    pass
  def set_keep_ram_image(self):
    pass
  def set_loaded_from_image(self):
    pass
  def set_loaded_from_txo(self):
    pass
  def set_magfilter(self):
    pass
  def set_match_framebuffer_format(self):
    pass
  def set_minfilter(self):
    pass
  def set_name(self):
    pass
  def set_num_views(self):
    pass
  def set_orig_file_size(self):
    pass
  def set_pad_size(self):
    pass
  def set_post_load_store_cache(self):
    pass
  def set_quality_level(self):
    pass
  def set_ram_image(self):
    pass
  def set_ram_image_as(self):
    pass
  def set_ram_mipmap_image(self):
    pass
  def set_ram_mipmap_pointer_from_int(self):
    pass
  def set_render_to_texture(self):
    pass
  def set_simple_ram_image(self):
    pass
  def set_size_padded(self):
    pass
  def set_textures_power_2():
    pass
  def set_wrap_u(self):
    pass
  def set_wrap_v(self):
    pass
  def set_wrap_w(self):
    pass
  def set_x_size(self):
    pass
  def set_y_size(self):
    pass
  def set_z_size(self):
    pass
  def setup1dTexture(self):
    pass
  def setup2dTexture(self):
    pass
  def setup2dTextureArray(self):
    pass
  def setup3dTexture(self):
    pass
  def setupCubeMap(self):
    pass
  def setupTexture(self):
    pass
  def setup_1d_texture(self):
    pass
  def setup_2d_texture(self):
    pass
  def setup_2d_texture_array(self):
    pass
  def setup_3d_texture(self):
    pass
  def setup_cube_map(self):
    pass
  def setup_texture(self):
    pass
  def store(self):
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncompressRamImage(self):
    pass
  def uncompress_ram_image(self):
    pass
  def unref(self):
    pass
  def up_to_power_2():
    pass
  def up_to_power_2():
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def usesMipmaps(self):
    pass
  def uses_mipmaps(self):
    pass
  def wasImageModified(self):
    pass
  def was_image_modified(self):
    pass
  def write(self):
    pass
  def writeTxo(self):
    pass
  def write_txo(self):
    pass
class TextureAttrib:
  def __init__(self):
    pass
  MAlways = int

  MConstant = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MNever = int

  MNone = int

  MNotEqual = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_always = int

  M_constant = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def addOffStage(self):
    pass
  def addOnStage(self):
    pass
  def add_off_stage(self):
    pass
  def add_on_stage(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findOnStage(self):
    pass
  def find_on_stage(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getFfTcIndex(self):
    pass
  def getHash(self):
    pass
  def get_num_attribs():
    pass
  def getNumOffStages(self):
    pass
  def getNumOnFfStages(self):
    pass
  def getNumOnStages(self):
    pass
  def getOffStage(self):
    pass
  def getOffStages(self):
    pass
  def getOnFfStage(self):
    pass
  def getOnFfStages(self):
    pass
  def getOnStage(self):
    pass
  def getOnStageOverride(self):
    pass
  def getOnStages(self):
    pass
  def getOnTexture(self):
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_ff_tc_index(self):
    pass
  def get_hash(self):
    pass
  def get_num_attribs():
    pass
  def get_num_off_stages(self):
    pass
  def get_num_on_ff_stages(self):
    pass
  def get_num_on_stages(self):
    pass
  def get_off_stage(self):
    pass
  def get_off_stages(self):
    pass
  def get_on_ff_stage(self):
    pass
  def get_on_ff_stages(self):
    pass
  def get_on_stage(self):
    pass
  def get_on_stage_override(self):
    pass
  def get_on_stages(self):
    pass
  def get_on_texture(self):
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def hasAllOff(self):
    pass
  def hasOffStage(self):
    pass
  def hasOnStage(self):
    pass
  def has_all_off(self):
    pass
  def has_off_stage(self):
    pass
  def has_on_stage(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isOfType(self):
    pass
  def isOff(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_of_type(self):
    pass
  def is_off(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def make_all_off():
    pass
  def make_default():
    pass
  def make_off():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def removeOffStage(self):
    pass
  def removeOnStage(self):
    pass
  def remove_off_stage(self):
    pass
  def remove_on_stage(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unifyTextureStages(self):
    pass
  def unify_texture_stages(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class TextureCollection:
  def __init__(self):
    pass
  def addTexture(self):
    pass
  def addTexturesFrom(self):
    pass
  def add_texture(self):
    pass
  def add_textures_from(self):
    pass
  def append(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def extend(self):
    pass
  def findTexture(self):
    pass
  def find_texture(self):
    pass
  def getNumTextures(self):
    pass
  def getTexture(self):
    pass
  def getTextures(self):
    pass
  def get_num_textures(self):
    pass
  def get_texture(self):
    pass
  def get_textures(self):
    pass
  def hasTexture(self):
    pass
  def has_texture(self):
    pass
  def output(self):
    pass
  def removeDuplicateTextures(self):
    pass
  def removeTexture(self):
    pass
  def removeTexturesFrom(self):
    pass
  def remove_duplicate_textures(self):
    pass
  def remove_texture(self):
    pass
  def remove_textures_from(self):
    pass
  def size(self):
    pass
  def write(self):
    pass
class TextureContext:
  def __init__(self):
    pass
  def assign(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToIndexBufferContext(self):
    pass
  def downcastToTextureContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToVertexBufferContext(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_IndexBufferContext(self):
    pass
  def downcast_to_TextureContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_VertexBufferContext(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getActive(self):
    pass
  def get_class_type():
    pass
  def getDataSizeBytes(self):
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getModified(self):
    pass
  def getNumFrames(self):
    pass
  def getNumInactiveFrames(self):
    pass
  def getResident(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getView(self):
    pass
  def get_active(self):
    pass
  def get_class_type():
    pass
  def get_data_size_bytes(self):
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_modified(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_inactive_frames(self):
    pass
  def get_resident(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_view(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def setLruSize(self):
    pass
  def set_lru_size(self):
    pass
  def upcastToAdaptiveLruPage(self):
    pass
  def upcastToBufferContext(self):
    pass
  def upcastToSavedContext(self):
    pass
  def upcast_to_AdaptiveLruPage(self):
    pass
  def upcast_to_BufferContext(self):
    pass
  def upcast_to_SavedContext(self):
    pass
  def wasImageModified(self):
    pass
  def wasModified(self):
    pass
  def wasPropertiesModified(self):
    pass
  def wasSimpleImageModified(self):
    pass
  def was_image_modified(self):
    pass
  def was_modified(self):
    pass
  def was_properties_modified(self):
    pass
  def was_simple_image_modified(self):
    pass
  def write(self):
    pass
class TexturePeeker:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def filterRect(self):
    pass
  def filter_rect(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZSize(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_z_size(self):
    pass
  def lookup(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
class TexturePool:
  def __init__(self):
    pass
  def add_texture():
    pass
  def add_texture():
    pass
  def clear_fake_texture_image():
    pass
  def clear_fake_texture_image():
    pass
  def find_all_textures():
    pass
  def find_texture():
    pass
  def find_all_textures():
    pass
  def find_texture():
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def get_alpha_scale_map():
    pass
  def get_fake_texture_image():
    pass
  def get_normalization_cube_map():
    pass
  def get_alpha_scale_map():
    pass
  def get_fake_texture_image():
    pass
  def get_normalization_cube_map():
    pass
  def has_fake_texture_image():
    pass
  def has_texture():
    pass
  def has_fake_texture_image():
    pass
  def has_texture():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def load_2d_texture_array():
    pass
  def load_3d_texture():
    pass
  def load_cube_map():
    pass
  def load_texture():
    pass
  def load_2d_texture_array():
    pass
  def load_3d_texture():
    pass
  def load_cube_map():
    pass
  def load_texture():
    pass
  def make_texture():
    pass
  def make_texture():
    pass
  def rehash():
    pass
  def release_all_textures():
    pass
  def release_texture():
    pass
  def release_all_textures():
    pass
  def release_texture():
    pass
  def set_fake_texture_image():
    pass
  def set_fake_texture_image():
    pass
  def verify_texture():
    pass
  def verify_texture():
    pass
  def write():
    pass
class TextureReloadRequest:
  def __init__(self):
    pass
  DSAgain = int

  DSCont = int

  DSDone = int

  DSExit = int

  DSInterrupt = int

  DSPause = int

  DSPickup = int

  DS_again = int

  DS_cont = int

  DS_done = int

  DS_exit = int

  DS_interrupt = int

  DS_pause = int

  DS_pickup = int

  SActive = int

  SActiveNested = int

  SInactive = int

  SServicing = int

  SServicingRemoved = int

  SSleeping = int

  S_active = int

  S_active_nested = int

  S_inactive = int

  S_servicing = int

  S_servicing_removed = int

  S_sleeping = int

  def assign(self):
    pass
  def clearDelay(self):
    pass
  def clearName(self):
    pass
  def clear_delay(self):
    pass
  def clear_name(self):
    pass
  def downcastToAsyncTaskSequence(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_AsyncTaskSequence(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def getAllowCompressed(self):
    pass
  def getAverageDt(self):
    pass
  def get_class_type():
    pass
  def getDelay(self):
    pass
  def getDoneEvent(self):
    pass
  def getDt(self):
    pass
  def getElapsedFrames(self):
    pass
  def getElapsedTime(self):
    pass
  def getManager(self):
    pass
  def getMaxDt(self):
    pass
  def getName(self):
    pass
  def getNamePrefix(self):
    pass
  def getPreparedGraphicsObjects(self):
    pass
  def getPriority(self):
    pass
  def getPythonObject(self):
    pass
  def getRefCount(self):
    pass
  def getSort(self):
    pass
  def getStartFrame(self):
    pass
  def getStartTime(self):
    pass
  def getState(self):
    pass
  def getTaskChain(self):
    pass
  def getTaskId(self):
    pass
  def getTexture(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getWakeTime(self):
    pass
  def get_allow_compressed(self):
    pass
  def get_average_dt(self):
    pass
  def get_class_type():
    pass
  def get_delay(self):
    pass
  def get_done_event(self):
    pass
  def get_dt(self):
    pass
  def get_elapsed_frames(self):
    pass
  def get_elapsed_time(self):
    pass
  def get_manager(self):
    pass
  def get_max_dt(self):
    pass
  def get_name(self):
    pass
  def get_name_prefix(self):
    pass
  def get_prepared_graphics_objects(self):
    pass
  def get_priority(self):
    pass
  def get_python_object(self):
    pass
  def get_ref_count(self):
    pass
  def get_sort(self):
    pass
  def get_start_frame(self):
    pass
  def get_start_time(self):
    pass
  def get_state(self):
    pass
  def get_task_chain(self):
    pass
  def get_task_id(self):
    pass
  def get_texture(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_wake_time(self):
    pass
  def hasDelay(self):
    pass
  def hasName(self):
    pass
  def has_delay(self):
    pass
  def has_name(self):
    pass
  def isAlive(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isReady(self):
    pass
  def is_alive(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_ready(self):
    pass
  def output(self):
    pass
  def recalcWakeTime(self):
    pass
  def recalc_wake_time(self):
    pass
  def ref(self):
    pass
  def remove(self):
    pass
  def setDelay(self):
    pass
  def setDoneEvent(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setPythonObject(self):
    pass
  def setSort(self):
    pass
  def setTaskChain(self):
    pass
  def set_delay(self):
    pass
  def set_done_event(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_python_object(self):
    pass
  def set_sort(self):
    pass
  def set_task_chain(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
class TextureStage:
  def __init__(self):
    pass
  CMAdd = int

  CMAddSigned = int

  CMDot3Rgb = int

  CMDot3Rgba = int

  CMInterpolate = int

  CMModulate = int

  CMReplace = int

  CMSubtract = int

  CMUndefined = int

  CM_add = int

  CM_add_signed = int

  CM_dot3_rgb = int

  CM_dot3_rgba = int

  CM_interpolate = int

  CM_modulate = int

  CM_replace = int

  CM_subtract = int

  CM_undefined = int

  COOneMinusSrcAlpha = int

  COOneMinusSrcColor = int

  COSrcAlpha = int

  COSrcColor = int

  COUndefined = int

  CO_one_minus_src_alpha = int

  CO_one_minus_src_color = int

  CO_src_alpha = int

  CO_src_color = int

  CO_undefined = int

  CSConstant = int

  CSConstantColorScale = int

  CSLastSavedResult = int

  CSPrevious = int

  CSPrimaryColor = int

  CSTexture = int

  CSUndefined = int

  CS_constant = int

  CS_constant_color_scale = int

  CS_last_saved_result = int

  CS_previous = int

  CS_primary_color = int

  CS_texture = int

  CS_undefined = int

  MAdd = int

  MBlend = int

  MBlendColorScale = int

  MCombine = int

  MDecal = int

  MGloss = int

  MGlow = int

  MHeight = int

  MModulate = int

  MModulateGloss = int

  MModulateGlow = int

  MNormal = int

  MNormalGloss = int

  MNormalHeight = int

  MReplace = int

  MSelector = int

  M_add = int

  M_blend = int

  M_blend_color_scale = int

  M_combine = int

  M_decal = int

  M_gloss = int

  M_glow = int

  M_height = int

  M_modulate = int

  M_modulate_gloss = int

  M_modulate_glow = int

  M_normal = int

  M_normal_gloss = int

  M_normal_height = int

  M_replace = int

  M_selector = int

  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def eq(self):
    pass
  def getAlphaScale(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getColor(self):
    pass
  def getCombineAlphaMode(self):
    pass
  def getCombineAlphaOperand0(self):
    pass
  def getCombineAlphaOperand1(self):
    pass
  def getCombineAlphaOperand2(self):
    pass
  def getCombineAlphaSource0(self):
    pass
  def getCombineAlphaSource1(self):
    pass
  def getCombineAlphaSource2(self):
    pass
  def getCombineRgbMode(self):
    pass
  def getCombineRgbOperand0(self):
    pass
  def getCombineRgbOperand1(self):
    pass
  def getCombineRgbOperand2(self):
    pass
  def getCombineRgbSource0(self):
    pass
  def getCombineRgbSource1(self):
    pass
  def getCombineRgbSource2(self):
    pass
  def get_default():
    pass
  def getMode(self):
    pass
  def getName(self):
    pass
  def getNumCombineAlphaOperands(self):
    pass
  def getNumCombineRgbOperands(self):
    pass
  def getPriority(self):
    pass
  def getRefCount(self):
    pass
  def getRgbScale(self):
    pass
  def getSavedResult(self):
    pass
  def getSort(self):
    pass
  def getTexViewOffset(self):
    pass
  def getTexcoordName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_alpha_scale(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_color(self):
    pass
  def get_combine_alpha_mode(self):
    pass
  def get_combine_alpha_operand0(self):
    pass
  def get_combine_alpha_operand1(self):
    pass
  def get_combine_alpha_operand2(self):
    pass
  def get_combine_alpha_source0(self):
    pass
  def get_combine_alpha_source1(self):
    pass
  def get_combine_alpha_source2(self):
    pass
  def get_combine_rgb_mode(self):
    pass
  def get_combine_rgb_operand0(self):
    pass
  def get_combine_rgb_operand1(self):
    pass
  def get_combine_rgb_operand2(self):
    pass
  def get_combine_rgb_source0(self):
    pass
  def get_combine_rgb_source1(self):
    pass
  def get_combine_rgb_source2(self):
    pass
  def get_default():
    pass
  def get_mode(self):
    pass
  def get_name(self):
    pass
  def get_num_combine_alpha_operands(self):
    pass
  def get_num_combine_rgb_operands(self):
    pass
  def get_priority(self):
    pass
  def get_ref_count(self):
    pass
  def get_rgb_scale(self):
    pass
  def get_saved_result(self):
    pass
  def get_sort(self):
    pass
  def get_tex_view_offset(self):
    pass
  def get_texcoord_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def involvesColorScale(self):
    pass
  def involves_color_scale(self):
    pass
  def isExactType(self):
    pass
  def isFixedFunction(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_fixed_function(self):
    pass
  def is_of_type(self):
    pass
  def lessThan(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setAlphaScale(self):
    pass
  def setColor(self):
    pass
  def setCombineAlpha(self):
    pass
  def setCombineRgb(self):
    pass
  def setMode(self):
    pass
  def setName(self):
    pass
  def setPriority(self):
    pass
  def setRgbScale(self):
    pass
  def setSavedResult(self):
    pass
  def setSort(self):
    pass
  def setTexViewOffset(self):
    pass
  def setTexcoordName(self):
    pass
  def set_alpha_scale(self):
    pass
  def set_color(self):
    pass
  def set_combine_alpha(self):
    pass
  def set_combine_rgb(self):
    pass
  def set_mode(self):
    pass
  def set_name(self):
    pass
  def set_priority(self):
    pass
  def set_rgb_scale(self):
    pass
  def set_saved_result(self):
    pass
  def set_sort(self):
    pass
  def set_tex_view_offset(self):
    pass
  def set_texcoord_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def usesColor(self):
    pass
  def usesLastSavedResult(self):
    pass
  def usesPrimaryColor(self):
    pass
  def uses_color(self):
    pass
  def uses_last_saved_result(self):
    pass
  def uses_primary_color(self):
    pass
  def write(self):
    pass
class TextureStageCollection:
  def __init__(self):
    pass
  def addTextureStage(self):
    pass
  def addTextureStagesFrom(self):
    pass
  def add_texture_stage(self):
    pass
  def add_texture_stages_from(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def findTextureStage(self):
    pass
  def find_texture_stage(self):
    pass
  def getNumTextureStages(self):
    pass
  def getTextureStage(self):
    pass
  def getTextureStages(self):
    pass
  def get_num_texture_stages(self):
    pass
  def get_texture_stage(self):
    pass
  def get_texture_stages(self):
    pass
  def hasTextureStage(self):
    pass
  def has_texture_stage(self):
    pass
  def output(self):
    pass
  def removeDuplicateTextureStages(self):
    pass
  def removeTextureStage(self):
    pass
  def removeTextureStagesFrom(self):
    pass
  def remove_duplicate_texture_stages(self):
    pass
  def remove_texture_stage(self):
    pass
  def remove_texture_stages_from(self):
    pass
  def size(self):
    pass
  def sort(self):
    pass
  def write(self):
    pass
class TextureStagePool:
  def __init__(self):
    pass
  MName = int

  MNone = int

  MUnique = int

  M_name = int

  M_none = int

  M_unique = int

  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def get_mode():
    pass
  def get_stage():
    pass
  def get_mode():
    pass
  def get_stage():
    pass
  def list_contents():
    pass
  def list_contents():
    pass
  def release_all_stages():
    pass
  def release_stage():
    pass
  def release_all_stages():
    pass
  def release_stage():
    pass
  def set_mode():
    pass
  def set_mode():
    pass
  def write():
    pass
class Thread:
  def __init__(self):
    pass
  def assign(self):
    pass
  def bind_thread():
    pass
  def bind_thread():
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def consider_yield():
    pass
  def consider_yield():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def force_yield():
    pass
  def force_yield():
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def getCurrentTask(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def getName(self):
    pass
  def getPipelineStage(self):
    pass
  def getPstatsIndex(self):
    pass
  def getPythonData(self):
    pass
  def getRefCount(self):
    pass
  def getSyncName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUniqueId(self):
    pass
  def get_class_type():
    pass
  def get_current_pipeline_stage():
    pass
  def get_current_task(self):
    pass
  def get_current_thread():
    pass
  def get_external_thread():
    pass
  def get_main_thread():
    pass
  def get_name(self):
    pass
  def get_pipeline_stage(self):
    pass
  def get_pstats_index(self):
    pass
  def get_python_data(self):
    pass
  def get_ref_count(self):
    pass
  def get_sync_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique_id(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isJoinable(self):
    pass
  def isOfType(self):
    pass
  def is_simple_threads():
    pass
  def isStarted(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def is_exact_type(self):
    pass
  def is_joinable(self):
    pass
  def is_of_type(self):
    pass
  def is_simple_threads():
    pass
  def is_started(self):
    pass
  def is_threading_supported():
    pass
  def is_true_threads():
    pass
  def join(self):
    pass
  def output(self):
    pass
  def outputBlocker(self):
    pass
  def output_blocker(self):
    pass
  def preempt(self):
    pass
  def prepare_for_exit():
    pass
  def prepare_for_exit():
    pass
  def ref(self):
    pass
  def setMinPipelineStage(self):
    pass
  def setName(self):
    pass
  def setPipelineStage(self):
    pass
  def setPythonData(self):
    pass
  def set_min_pipeline_stage(self):
    pass
  def set_name(self):
    pass
  def set_pipeline_stage(self):
    pass
  def set_python_data(self):
    pass
  def sleep():
    pass
  def start(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcastToTypedReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def upcast_to_TypedReferenceCount(self):
    pass
  def write_status():
    pass
  def write_status():
    pass
class TiXmlAttribute:
  def __init__(self):
    pass
  def Column(self):
    pass
  def DoubleValue(self):
    pass
  def EncodeString():
    pass
  def IntValue(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def Name(self):
    pass
  def NameTStr(self):
    pass
  def Next(self):
    pass
  def Previous(self):
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetDocument(self):
    pass
  def SetDoubleValue(self):
    pass
  def SetIntValue(self):
    pass
  def SetName(self):
    pass
  def SetValue(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def eq(self):
    pass
  def greaterThan(self):
    pass
  def lessThan(self):
    pass
class TiXmlAttributeSet:
  def __init__(self):
    pass
  def Add(self):
    pass
  def Find(self):
    pass
  def FindOrCreate(self):
    pass
  def First(self):
    pass
  def Last(self):
    pass
  def Remove(self):
    pass
class TiXmlBase:
  def __init__(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def IsWhiteSpaceCondensed():
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
class TiXmlComment:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def assign(self):
    pass
class TiXmlCursor:
  def __init__(self):
    pass
class TiXmlDeclaration:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def Encoding(self):
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetValue(self):
    pass
  def Standalone(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def Version(self):
    pass
  def assign(self):
    pass
class TiXmlDocument:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Clear(self):
    pass
  def ClearError(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def Error(self):
    pass
  def ErrorCol(self):
    pass
  def ErrorDesc(self):
    pass
  def ErrorId(self):
    pass
  def ErrorRow(self):
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def LoadFile(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def Print(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def RootElement(self):
    pass
  def Row(self):
    pass
  def SaveFile(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetTabSize(self):
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def TabSize(self):
    pass
  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def assign(self):
    pass
class TiXmlElement:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Attribute(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def FirstAttribute(self):
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def GetText(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastAttribute(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def QueryStringAttribute(self):
    pass
  def QueryValueAttribute(self):
    pass
  def RemoveAttribute(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetAttribute(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetDoubleAttribute(self):
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def assign(self):
    pass
class TiXmlHandle:
  def __init__(self):
    pass
  def Child(self):
    pass
  def ChildElement(self):
    pass
  def Element(self):
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def Node(self):
    pass
  def Text(self):
    pass
  def ToElement(self):
    pass
  def ToNode(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Unknown(self):
    pass
  def assign(self):
    pass
class TiXmlNode:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
class TiXmlPrinter:
  def __init__(self):
    pass
  def CStr(self):
    pass
  def Indent(self):
    pass
  def LineBreak(self):
    pass
  def SetIndent(self):
    pass
  def SetLineBreak(self):
    pass
  def SetStreamPrinting(self):
    pass
  def Size(self):
    pass
  def Str(self):
    pass
  def Visit(self):
    pass
  def VisitEnter(self):
    pass
  def VisitExit(self):
    pass
class TiXmlText:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def CDATA(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetCDATA(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def assign(self):
    pass
class TiXmlUnknown:
  def __init__(self):
    pass
  def Accept(self):
    pass
  def Clear(self):
    pass
  def Clone(self):
    pass
  def Column(self):
    pass
  def EncodeString():
    pass
  def FirstChild(self):
    pass
  def FirstChildElement(self):
    pass
  def GetDocument(self):
    pass
  def InsertAfterChild(self):
    pass
  def InsertBeforeChild(self):
    pass
  def InsertEndChild(self):
    pass
  def IsWhiteSpaceCondensed():
    pass
  def IterateChildren(self):
    pass
  def LastChild(self):
    pass
  def NextSibling(self):
    pass
  def NextSiblingElement(self):
    pass
  def NoChildren(self):
    pass
  def Parent(self):
    pass
  def PreviousSibling(self):
    pass
  def RemoveChild(self):
    pass
  def ReplaceChild(self):
    pass
  def Row(self):
    pass
  def SetCondenseWhiteSpace():
    pass
  def SetValue(self):
    pass
  TINYXMLCOMMENT = int

  TINYXMLDECLARATION = int

  TINYXMLDOCUMENT = int

  TINYXMLELEMENT = int

  TINYXMLTEXT = int

  TINYXMLTYPECOUNT = int

  TINYXMLUNKNOWN = int

  TINYXML_COMMENT = int

  TINYXML_DECLARATION = int

  TINYXML_DOCUMENT = int

  TINYXML_ELEMENT = int

  TINYXML_TEXT = int

  TINYXML_TYPECOUNT = int

  TINYXML_UNKNOWN = int

  def ToComment(self):
    pass
  def ToDeclaration(self):
    pass
  def ToDocument(self):
    pass
  def ToElement(self):
    pass
  def ToText(self):
    pass
  def ToUnknown(self):
    pass
  def Type(self):
    pass
  def Value(self):
    pass
  def ValueStr(self):
    pass
  def ValueTStr(self):
    pass
  def assign(self):
    pass
class TiXmlVisitor:
  def __init__(self):
    pass
  def Visit(self):
    pass
  def VisitEnter(self):
    pass
  def VisitExit(self):
    pass
class TimeVal:
  def __init__(self):
    pass
  def getSec(self):
    pass
  def getUsec(self):
    pass
  def get_sec(self):
    pass
  def get_usec(self):
    pass
class TouchInfo:
  def __init__(self):
    pass
  TIFDown = int

  TIFMove = int

  TIFUp = int

  TIF_down = int

  TIF_move = int

  TIF_up = int

  def getFlags(self):
    pass
  def getId(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_flags(self):
    pass
  def get_id(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
class Trackball:
  def __init__(self):
    pass
  CMDefault = int

  CMDolly = int

  CMPan = int

  CMRoll = int

  CMTruck = int

  CM_default = int

  CM_dolly = int

  CM_pan = int

  CM_roll = int

  CM_truck = int

  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAllButtons(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearButton(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_all_buttons(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_button(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getControlMode(self):
    pass
  def getCoordinateSystem(self):
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getForwardScale(self):
    pass
  def getH(self):
    pass
  def getHpr(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getInvert(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getMat(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOrigin(self):
    pass
  def get_overall_bit():
    pass
  def getP(self):
    pass
  def getParent(self):
    pass
  def getPos(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getR(self):
    pass
  def getRefCount(self):
    pass
  def getRelTo(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransMat(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_control_mode(self):
    pass
  def get_coordinate_system(self):
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_forward_scale(self):
    pass
  def get_h(self):
    pass
  def get_hpr(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_invert(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_mat(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_origin(self):
    pass
  def get_overall_bit():
    pass
  def get_p(self):
    pass
  def get_parent(self):
    pass
  def get_pos(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_r(self):
    pass
  def get_ref_count(self):
    pass
  def get_rel_to(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_trans_mat(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def moveOrigin(self):
    pass
  def move_origin(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def requireButton(self):
    pass
  def require_button(self):
    pass
  def reset(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetOriginHere(self):
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_origin_here(self):
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setControlMode(self):
    pass
  def setCoordinateSystem(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setForwardScale(self):
    pass
  def setH(self):
    pass
  def setHpr(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setInvert(self):
    pass
  def setMat(self):
    pass
  def setName(self):
    pass
  def setOrigin(self):
    pass
  def setOverallHidden(self):
    pass
  def setP(self):
    pass
  def setPos(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setR(self):
    pass
  def setRelTo(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_control_mode(self):
    pass
  def set_coordinate_system(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_forward_scale(self):
    pass
  def set_h(self):
    pass
  def set_hpr(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_invert(self):
    pass
  def set_mat(self):
    pass
  def set_name(self):
    pass
  def set_origin(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_p(self):
    pass
  def set_pos(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_r(self):
    pass
  def set_rel_to(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class TrackerNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getGraphCoordinateSystem(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def getOrient(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPos(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTime(self):
    pass
  def getTrackerCoordinateSystem(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_graph_coordinate_system(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_orient(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_pos(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_time(self):
    pass
  def get_tracker_coordinate_system(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def hasTime(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def has_time(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def isValid(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def is_valid(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setGraphCoordinateSystem(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTrackerCoordinateSystem(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_graph_coordinate_system(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_tracker_coordinate_system(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class Transform2SG:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNode(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_node(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setNode(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_node(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class TransformBlend:
  def __init__(self):
    pass
  def addTransform(self):
    pass
  def add_transform(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def eq(self):
    pass
  def getBlend(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getNumTransforms(self):
    pass
  def getTransform(self):
    pass
  def getTransforms(self):
    pass
  def getWeight(self):
    pass
  def get_blend(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_num_transforms(self):
    pass
  def get_transform(self):
    pass
  def get_transforms(self):
    pass
  def get_weight(self):
    pass
  def hasTransform(self):
    pass
  def has_transform(self):
    pass
  def lessThan(self):
    pass
  def limitTransforms(self):
    pass
  def limit_transforms(self):
    pass
  def ne(self):
    pass
  def normalizeWeights(self):
    pass
  def normalize_weights(self):
    pass
  def output(self):
    pass
  def removeTransform(self):
    pass
  def remove_transform(self):
    pass
  def setTransform(self):
    pass
  def setWeight(self):
    pass
  def set_transform(self):
    pass
  def set_weight(self):
    pass
  def transformPoint(self):
    pass
  def transformVector(self):
    pass
  def transform_point(self):
    pass
  def transform_vector(self):
    pass
  def updateBlend(self):
    pass
  def update_blend(self):
    pass
  def write(self):
    pass
class TransformBlendTable:
  def __init__(self):
    pass
  def addBlend(self):
    pass
  def add_blend(self):
    pass
  def assign(self):
    pass
  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def getBlend(self):
    pass
  def getBlends(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getMaxSimultaneousTransforms(self):
    pass
  def getModified(self):
    pass
  def getNumBlends(self):
    pass
  def getNumTransforms(self):
    pass
  def getRefCount(self):
    pass
  def getRows(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_blend(self):
    pass
  def get_blends(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_max_simultaneous_transforms(self):
    pass
  def get_modified(self):
    pass
  def get_num_blends(self):
    pass
  def get_num_transforms(self):
    pass
  def get_ref_count(self):
    pass
  def get_rows(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def modifyRows(self):
    pass
  def modify_rows(self):
    pass
  def ref(self):
    pass
  def removeBlend(self):
    pass
  def remove_blend(self):
    pass
  def setBlend(self):
    pass
  def setRows(self):
    pass
  def set_blend(self):
    pass
  def set_rows(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class TransformState:
  def __init__(self):
    pass
  RCache = int

  RNode = int

  R_cache = int

  R_node = int

  def cacheRef(self):
    pass
  def cacheUnref(self):
    pass
  def cache_ref(self):
    pass
  def cache_unref(self):
    pass
  def clear_cache():
    pass
  def clear_cache():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def componentsGiven(self):
    pass
  def components_given(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getBamModified(self):
    pass
  def getCacheRefCount(self):
    pass
  def get_class_type():
    pass
  def getCompositionCache(self):
    pass
  def getCompositionCacheNumEntries(self):
    pass
  def getCompositionCacheResult(self):
    pass
  def getCompositionCacheSize(self):
    pass
  def getCompositionCacheSource(self):
    pass
  def getGeomRendering(self):
    pass
  def getHash(self):
    pass
  def getHpr(self):
    pass
  def getInverse(self):
    pass
  def getInvertCompositionCache(self):
    pass
  def getInvertCompositionCacheNumEntries(self):
    pass
  def getInvertCompositionCacheResult(self):
    pass
  def getInvertCompositionCacheSize(self):
    pass
  def getInvertCompositionCacheSource(self):
    pass
  def getMat(self):
    pass
  def getMat3(self):
    pass
  def getNodeRefCount(self):
    pass
  def getNormQuat(self):
    pass
  def get_num_states():
    pass
  def get_num_unused_states():
    pass
  def getPos(self):
    pass
  def getPos2d(self):
    pass
  def getQuat(self):
    pass
  def getRefCount(self):
    pass
  def getReferencedBits(self):
    pass
  def getRotate2d(self):
    pass
  def getScale(self):
    pass
  def getScale2d(self):
    pass
  def getShear(self):
    pass
  def getShear2d(self):
    pass
  def get_states():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUniformScale(self):
    pass
  def getUnique(self):
    pass
  def get_unused_states():
    pass
  def get_bam_modified(self):
    pass
  def get_cache_ref_count(self):
    pass
  def get_class_type():
    pass
  def get_composition_cache(self):
    pass
  def get_composition_cache_num_entries(self):
    pass
  def get_composition_cache_result(self):
    pass
  def get_composition_cache_size(self):
    pass
  def get_composition_cache_source(self):
    pass
  def get_geom_rendering(self):
    pass
  def get_hash(self):
    pass
  def get_hpr(self):
    pass
  def get_inverse(self):
    pass
  def get_invert_composition_cache(self):
    pass
  def get_invert_composition_cache_num_entries(self):
    pass
  def get_invert_composition_cache_result(self):
    pass
  def get_invert_composition_cache_size(self):
    pass
  def get_invert_composition_cache_source(self):
    pass
  def get_mat(self):
    pass
  def get_mat3(self):
    pass
  def get_node_ref_count(self):
    pass
  def get_norm_quat(self):
    pass
  def get_num_states():
    pass
  def get_num_unused_states():
    pass
  def get_pos(self):
    pass
  def get_pos2d(self):
    pass
  def get_quat(self):
    pass
  def get_ref_count(self):
    pass
  def get_referenced_bits(self):
    pass
  def get_rotate2d(self):
    pass
  def get_scale(self):
    pass
  def get_scale2d(self):
    pass
  def get_shear(self):
    pass
  def get_shear2d(self):
    pass
  def get_states():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_uniform_scale(self):
    pass
  def get_unique(self):
    pass
  def get_unused_states():
    pass
  def hasComponents(self):
    pass
  def hasHpr(self):
    pass
  def hasIdentityScale(self):
    pass
  def hasMat(self):
    pass
  def hasNonzeroShear(self):
    pass
  def hasPos(self):
    pass
  def hasQuat(self):
    pass
  def hasScale(self):
    pass
  def hasShear(self):
    pass
  def hasUniformScale(self):
    pass
  def has_components(self):
    pass
  def has_hpr(self):
    pass
  def has_identity_scale(self):
    pass
  def has_mat(self):
    pass
  def has_nonzero_shear(self):
    pass
  def has_pos(self):
    pass
  def has_quat(self):
    pass
  def has_scale(self):
    pass
  def has_shear(self):
    pass
  def has_uniform_scale(self):
    pass
  def hprGiven(self):
    pass
  def hpr_given(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def is2d(self):
    pass
  def isExactType(self):
    pass
  def isIdentity(self):
    pass
  def isInvalid(self):
    pass
  def isOfType(self):
    pass
  def isSingular(self):
    pass
  def is_2d(self):
    pass
  def is_exact_type(self):
    pass
  def is_identity(self):
    pass
  def is_invalid(self):
    pass
  def is_of_type(self):
    pass
  def is_singular(self):
    pass
  def lessThan(self):
    pass
  def list_cycles():
    pass
  def list_states():
    pass
  def list_cycles():
    pass
  def list_states():
    pass
  def make_hpr():
    pass
  def make_identity():
    pass
  def make_invalid():
    pass
  def make_mat():
    pass
  def make_mat3():
    pass
  def make_pos():
    pass
  def make_pos2d():
    pass
  def make_pos_hpr():
    pass
  def make_pos_hpr_scale():
    pass
  def make_pos_hpr_scale_shear():
    pass
  def make_pos_quat_scale():
    pass
  def make_pos_quat_scale_shear():
    pass
  def make_pos_rotate2d():
    pass
  def make_pos_rotate_scale2d():
    pass
  def make_pos_rotate_scale_shear2d():
    pass
  def make_quat():
    pass
  def make_rotate2d():
    pass
  def make_scale():
    pass
  def make_scale2d():
    pass
  def make_shear():
    pass
  def make_shear2d():
    pass
  def make_hpr():
    pass
  def make_identity():
    pass
  def make_invalid():
    pass
  def make_mat():
    pass
  def make_mat3():
    pass
  def make_pos():
    pass
  def make_pos2d():
    pass
  def make_pos_hpr():
    pass
  def make_pos_hpr_scale():
    pass
  def make_pos_hpr_scale_shear():
    pass
  def make_pos_quat_scale():
    pass
  def make_pos_quat_scale_shear():
    pass
  def make_pos_rotate2d():
    pass
  def make_pos_rotate_scale2d():
    pass
  def make_pos_rotate_scale_shear2d():
    pass
  def make_quat():
    pass
  def make_rotate2d():
    pass
  def make_scale():
    pass
  def make_scale2d():
    pass
  def make_shear():
    pass
  def make_shear2d():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def nodeRef(self):
    pass
  def nodeUnref(self):
    pass
  def node_ref(self):
    pass
  def node_unref(self):
    pass
  def output(self):
    pass
  def quatGiven(self):
    pass
  def quat_given(self):
    pass
  def ref(self):
    pass
  def setHpr(self):
    pass
  def setPos(self):
    pass
  def setPos2d(self):
    pass
  def setQuat(self):
    pass
  def setRotate2d(self):
    pass
  def setScale(self):
    pass
  def setScale2d(self):
    pass
  def setShear(self):
    pass
  def setShear2d(self):
    pass
  def set_hpr(self):
    pass
  def set_pos(self):
    pass
  def set_pos2d(self):
    pass
  def set_quat(self):
    pass
  def set_rotate2d(self):
    pass
  def set_scale(self):
    pass
  def set_scale2d(self):
    pass
  def set_shear(self):
    pass
  def set_shear2d(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validateCompositionCache(self):
    pass
  def validate_states():
    pass
  def validate_composition_cache(self):
    pass
  def validate_states():
    pass
  def write(self):
    pass
  def writeCompositionCache(self):
    pass
  def write_composition_cache(self):
    pass
class TransformTable:
  def __init__(self):
    pass
  def addTransform(self):
    pass
  def add_transform(self):
    pass
  def assign(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getNumTransforms(self):
    pass
  def getRefCount(self):
    pass
  def getTransform(self):
    pass
  def getTransforms(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_num_transforms(self):
    pass
  def get_ref_count(self):
    pass
  def get_transform(self):
    pass
  def get_transforms(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def isRegistered(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def is_registered(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def register_table():
    pass
  def register_table():
    pass
  def removeTransform(self):
    pass
  def remove_transform(self):
    pass
  def setTransform(self):
    pass
  def set_transform(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class TransparencyAttrib:
  def __init__(self):
    pass
  MAlpha = int

  MAlways = int

  MBinary = int

  MConstant = int

  MDual = int

  MEqual = int

  MEyeCubeMap = int

  MEyeNormal = int

  MEyePosition = int

  MEyeSphereMap = int

  MGreater = int

  MGreaterEqual = int

  MLess = int

  MLessEqual = int

  MLightVector = int

  MMultisample = int

  MMultisampleMask = int

  MNever = int

  MNone = int

  MNotEqual = int

  MNotused = int

  MOff = int

  MPointSprite = int

  MUnused = int

  MWorldCubeMap = int

  MWorldNormal = int

  MWorldPosition = int

  M_alpha = int

  M_always = int

  M_binary = int

  M_constant = int

  M_dual = int

  M_equal = int

  M_eye_cube_map = int

  M_eye_normal = int

  M_eye_position = int

  M_eye_sphere_map = int

  M_greater = int

  M_greater_equal = int

  M_less = int

  M_less_equal = int

  M_light_vector = int

  M_multisample = int

  M_multisample_mask = int

  M_never = int

  M_none = int

  M_not_equal = int

  M_notused = int

  M_off = int

  M_point_sprite = int

  M_unused = int

  M_world_cube_map = int

  M_world_normal = int

  M_world_position = int

  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def compose(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def garbage_collect():
    pass
  def garbage_collect():
    pass
  def getAutoShaderAttrib(self):
    pass
  def getBamModified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getMode(self):
    pass
  def get_num_attribs():
    pass
  def getRefCount(self):
    pass
  def getSlot(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnique(self):
    pass
  def get_auto_shader_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_slot():
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_mode(self):
    pass
  def get_num_attribs():
    pass
  def get_ref_count(self):
    pass
  def get_slot(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unique(self):
    pass
  def invertCompose(self):
    pass
  def invert_compose(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def list_attribs():
    pass
  def list_attribs():
    pass
  def lowerAttribCanOverride(self):
    pass
  def lower_attrib_can_override(self):
    pass
  def make():
    pass
  def make_default():
    pass
  def make_default():
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def validate_attribs():
    pass
  def validate_attribs():
    pass
  def write(self):
    pass
class Triangulator:
  def __init__(self):
    pass
  def addHoleVertex(self):
    pass
  def addPolygonVertex(self):
    pass
  def addVertex(self):
    pass
  def add_hole_vertex(self):
    pass
  def add_polygon_vertex(self):
    pass
  def add_vertex(self):
    pass
  def beginHole(self):
    pass
  def begin_hole(self):
    pass
  def clear(self):
    pass
  def clearPolygon(self):
    pass
  def clear_polygon(self):
    pass
  def getNumTriangles(self):
    pass
  def getNumVertices(self):
    pass
  def getTriangleV0(self):
    pass
  def getTriangleV1(self):
    pass
  def getTriangleV2(self):
    pass
  def getVertex(self):
    pass
  def getVertices(self):
    pass
  def get_num_triangles(self):
    pass
  def get_num_vertices(self):
    pass
  def get_triangle_v0(self):
    pass
  def get_triangle_v1(self):
    pass
  def get_triangle_v2(self):
    pass
  def get_vertex(self):
    pass
  def get_vertices(self):
    pass
  def isLeftWinding(self):
    pass
  def is_left_winding(self):
    pass
  def triangulate(self):
    pass
class TypedWritable:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
class TypedWritableReferenceCount:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class UnalignedLMatrix4f:
  def __init__(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
class UnalignedLMatrix4d:
  def __init__(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
class UnalignedLMatrix4f:
  def __init__(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
class UnalignedLVecBase4f:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
  def size():
    pass
class UnalignedLVecBase4d:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
  def size():
    pass
class UnalignedLVecBase4f:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def assign(self):
    pass
  def get_class_type():
    pass
  def getNumComponents(self):
    pass
  def get_class_type():
    pass
  def get_num_components(self):
    pass
  def set(self):
    pass
  def size():
    pass
class UnionBoundingVolume:
  def __init__(self):
    pass
  BTBest = int

  BTBox = int

  BTDefault = int

  BTSphere = int

  BT_best = int

  BT_box = int

  BT_default = int

  BT_sphere = int

  IFAll = int

  IFDontUnderstand = int

  IFNoIntersection = int

  IFPossible = int

  IFSome = int

  IF_all = int

  IF_dont_understand = int

  IF_no_intersection = int

  IF_possible = int

  IF_some = int

  def addComponent(self):
    pass
  def add_component(self):
    pass
  def around(self):
    pass
  def clearComponents(self):
    pass
  def clear_components(self):
    pass
  def contains(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def extendBy(self):
    pass
  def extend_by(self):
    pass
  def filterIntersection(self):
    pass
  def filter_intersection(self):
    pass
  def getApproxCenter(self):
    pass
  def get_class_type():
    pass
  def getComponent(self):
    pass
  def getComponents(self):
    pass
  def getNumComponents(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_approx_center(self):
    pass
  def get_class_type():
    pass
  def get_component(self):
    pass
  def get_components(self):
    pass
  def get_num_components(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isEmpty(self):
    pass
  def isExactType(self):
    pass
  def isInfinite(self):
    pass
  def isOfType(self):
    pass
  def is_empty(self):
    pass
  def is_exact_type(self):
    pass
  def is_infinite(self):
    pass
  def is_of_type(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setInfinite(self):
    pass
  def set_infinite(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
  def xform(self):
    pass
class UniqueIdAllocator:
  def __init__(self):
    pass
  def allocate(self):
    pass
  def fractionUsed(self):
    pass
  def fraction_used(self):
    pass
  def free(self):
    pass
  def initialReserveId(self):
    pass
  def initial_reserve_id(self):
    pass
  def output(self):
    pass
  def write(self):
    pass
class UpdateSeq:
  def __init__(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def eq(self):
    pass
  def fresh():
    pass
  def greaterThan(self):
    pass
  def greaterThanOrEqual(self):
    pass
  def increment(self):
    pass
  def initial():
    pass
  def isFresh(self):
    pass
  def isInitial(self):
    pass
  def isOld(self):
    pass
  def isSpecial(self):
    pass
  def is_fresh(self):
    pass
  def is_initial(self):
    pass
  def is_old(self):
    pass
  def is_special(self):
    pass
  def lessThan(self):
    pass
  def lessThanOrEqual(self):
    pass
  def ne(self):
    pass
  def old():
    pass
  def output(self):
    pass
class UserDataAudio:
  def __init__(self):
    pass
  def append(self):
    pass
  def assign(self):
    pass
  def clearName(self):
    pass
  def clear_name(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def done(self):
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def get():
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getFilename(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_filename(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def hasName(self):
    pass
  def has_name(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def open(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setName(self):
    pass
  def set_name(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
class UserDataAudioCursor:
  def __init__(self):
    pass
  def aborted(self):
    pass
  def audioChannels(self):
    pass
  def audioRate(self):
    pass
  def audio_channels(self):
    pass
  def audio_rate(self):
    pass
  def canSeek(self):
    pass
  def canSeekFast(self):
    pass
  def can_seek(self):
    pass
  def can_seek_fast(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getRefCount(self):
    pass
  def getSource(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_ref_count(self):
    pass
  def get_source(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def length(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def readSamples(self):
    pass
  def read_samples(self):
    pass
  def ready(self):
    pass
  def ref(self):
    pass
  def seek(self):
    pass
  def skipSamples(self):
    pass
  def skip_samples(self):
    pass
  def tell(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
class UserVertexSlider:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSlider(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_slider(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setSlider(self):
    pass
  def set_slider(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class UserVertexTransform:
  def __init__(self):
    pass
  def accumulateMatrix(self):
    pass
  def accumulate_matrix(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def getMatrix(self):
    pass
  def getModified(self):
    pass
  def getName(self):
    pass
  def get_next_modified():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def get_matrix(self):
    pass
  def get_modified(self):
    pass
  def get_name(self):
    pass
  def get_next_modified():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def multMatrix(self):
    pass
  def mult_matrix(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def setMatrix(self):
    pass
  def set_matrix(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class UvScrollNode:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRSpeed(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUSpeed(self):
    pass
  def getUnexpectedChange(self):
    pass
  def getVSpeed(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_r_speed(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_u_speed(self):
    pass
  def get_unexpected_change(self):
    pass
  def get_v_speed(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def ref(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setRSpeed(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUSpeed(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setVSpeed(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_r_speed(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_u_speed(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_v_speed(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class LVecBase2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVecBase4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector2f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector3f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def angleDeg(self):
    pass
  def angleRad(self):
    pass
  def angle_deg(self):
    pass
  def angle_rad(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def back():
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def cross(self):
    pass
  def crossInto(self):
    pass
  def cross_into(self):
    pass
  def dot(self):
    pass
  def down():
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def forward():
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getStandardizedHpr(self):
    pass
  def getX(self):
    pass
  def getXy(self):
    pass
  def getXz(self):
    pass
  def getY(self):
    pass
  def getYz(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_standardized_hpr(self):
    pass
  def get_x(self):
    pass
  def get_xy(self):
    pass
  def get_xz(self):
    pass
  def get_y(self):
    pass
  def get_yz(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def left():
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def relativeAngleDeg(self):
    pass
  def relativeAngleRad(self):
    pass
  def relative_angle_deg(self):
    pass
  def relative_angle_rad(self):
    pass
  def rfu():
    pass
  def right():
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def signedAngleDeg(self):
    pass
  def signedAngleRad(self):
    pass
  def signed_angle_deg(self):
    pass
  def signed_angle_rad(self):
    pass
  def size():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def up():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4d:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class LVector4f:
  def __init__(self):
    pass
  def Getattr(self):
    pass
  def Setattr(self):
    pass
  def Setitem(self):
    pass
  def addHash(self):
    pass
  def addToCell(self):
    pass
  def addW(self):
    pass
  def addX(self):
    pass
  def addY(self):
    pass
  def addZ(self):
    pass
  def add_hash(self):
    pass
  def add_to_cell(self):
    pass
  def add_w(self):
    pass
  def add_x(self):
    pass
  def add_y(self):
    pass
  def add_z(self):
    pass
  def almostEqual(self):
    pass
  def almost_equal(self):
    pass
  def asTuple():
    pass
  def assign(self):
    pass
  def compareTo(self):
    pass
  def compare_to(self):
    pass
  def dot(self):
    pass
  def eq(self):
    pass
  def fill(self):
    pass
  def fmax(self):
    pass
  def fmin(self):
    pass
  def getCell(self):
    pass
  def get_class_type():
    pass
  def getHash(self):
    pass
  def getNumComponents(self):
    pass
  def getW(self):
    pass
  def getX(self):
    pass
  def getY(self):
    pass
  def getZ(self):
    pass
  def get_cell(self):
    pass
  def get_class_type():
    pass
  def get_hash(self):
    pass
  def get_num_components(self):
    pass
  def get_w(self):
    pass
  def get_x(self):
    pass
  def get_y(self):
    pass
  def get_z(self):
    pass
  def isNan(self):
    pass
  def is_nan(self):
    pass
  def length(self):
    pass
  def lengthSquared(self):
    pass
  def length_squared(self):
    pass
  def lessThan(self):
    pass
  def ne(self):
    pass
  def normalize(self):
    pass
  def output(self):
    pass
  def pPrintValues():
    pass
  def project(self):
    pass
  def pythonRepr(self):
    pass
  def python_repr(self):
    pass
  def readDatagram(self):
    pass
  def readDatagramFixed(self):
    pass
  def read_datagram(self):
    pass
  def read_datagram_fixed(self):
    pass
  def set(self):
    pass
  def setCell(self):
    pass
  def setW(self):
    pass
  def setX(self):
    pass
  def setY(self):
    pass
  def setZ(self):
    pass
  def set_cell(self):
    pass
  def set_w(self):
    pass
  def set_x(self):
    pass
  def set_y(self):
    pass
  def set_z(self):
    pass
  def size():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def unit_w():
    pass
  def unit_x():
    pass
  def unit_y():
    pass
  def unit_z():
    pass
  def writeDatagram(self):
    pass
  def writeDatagramFixed(self):
    pass
  def write_datagram(self):
    pass
  def write_datagram_fixed(self):
    pass
  def zero():
    pass
class VertexBufferContext:
  def __init__(self):
    pass
  def assign(self):
    pass
  def changedSize(self):
    pass
  def changedUsageHint(self):
    pass
  def changed_size(self):
    pass
  def changed_usage_hint(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToBufferContext(self):
    pass
  def downcastToIndexBufferContext(self):
    pass
  def downcastToTextureContext(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToVertexBufferContext(self):
    pass
  def downcast_to_BufferContext(self):
    pass
  def downcast_to_IndexBufferContext(self):
    pass
  def downcast_to_TextureContext(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_VertexBufferContext(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def getActive(self):
    pass
  def get_class_type():
    pass
  def getData(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getModified(self):
    pass
  def getNumFrames(self):
    pass
  def getNumInactiveFrames(self):
    pass
  def getResident(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_active(self):
    pass
  def get_class_type():
    pass
  def get_data(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_modified(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_inactive_frames(self):
    pass
  def get_resident(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def setLruSize(self):
    pass
  def set_lru_size(self):
    pass
  def upcastToAdaptiveLruPage(self):
    pass
  def upcastToBufferContext(self):
    pass
  def upcastToSavedContext(self):
    pass
  def upcast_to_AdaptiveLruPage(self):
    pass
  def upcast_to_BufferContext(self):
    pass
  def upcast_to_SavedContext(self):
    pass
  def wasModified(self):
    pass
  def was_modified(self):
    pass
  def write(self):
    pass
class VertexDataBlock:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToVertexDataBlock(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_VertexDataBlock(self):
    pass
  def free(self):
    pass
  def getAllocator(self):
    pass
  def get_class_type():
    pass
  def getMaxSize(self):
    pass
  def getNextBlock(self):
    pass
  def getPage(self):
    pass
  def getRefCount(self):
    pass
  def getSize(self):
    pass
  def getStart(self):
    pass
  def get_allocator(self):
    pass
  def get_class_type():
    pass
  def get_max_size(self):
    pass
  def get_next_block(self):
    pass
  def get_page(self):
    pass
  def get_ref_count(self):
    pass
  def get_size(self):
    pass
  def get_start(self):
    pass
  def isFree(self):
    pass
  def is_free(self):
    pass
  def output(self):
    pass
  def realloc(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToSimpleAllocatorBlock(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_SimpleAllocatorBlock(self):
    pass
class VertexDataBook:
  def __init__(self):
    pass
  def alloc(self):
    pass
  def countAllocatedSize(self):
    pass
  def countTotalPageSize(self):
    pass
  def count_allocated_size(self):
    pass
  def count_total_page_size(self):
    pass
  def getNumPages(self):
    pass
  def get_num_pages(self):
    pass
  def saveToDisk(self):
    pass
  def save_to_disk(self):
    pass
class VertexDataPage:
  def __init__(self):
    pass
  RCCompressed = int

  RCDisk = int

  RCEndOfList = int

  RCResident = int

  RC_compressed = int

  RC_disk = int

  RC_end_of_list = int

  RC_resident = int

  def alloc(self):
    pass
  def assign(self):
    pass
  def dequeueLru(self):
    pass
  def dequeue_lru(self):
    pass
  def downcastToGeomVertexArrayData(self):
    pass
  def downcastToVertexDataPage(self):
    pass
  def downcast_to_GeomVertexArrayData(self):
    pass
  def downcast_to_VertexDataPage(self):
    pass
  def enqueueLru(self):
    pass
  def enqueue_lru(self):
    pass
  def evictLru(self):
    pass
  def evict_lru(self):
    pass
  def flush_threads():
    pass
  def flush_threads():
    pass
  def getBook(self):
    pass
  def get_class_type():
    pass
  def getContiguous(self):
    pass
  def getFirstBlock(self):
    pass
  def get_global_lru():
    pass
  def getLru(self):
    pass
  def getLruSize(self):
    pass
  def getMaxSize(self):
    pass
  def get_num_pending_reads():
    pass
  def get_num_pending_writes():
    pass
  def get_num_threads():
    pass
  def get_pending_lru():
    pass
  def getPendingRamClass(self):
    pass
  def getRamClass(self):
    pass
  def get_save_file():
    pass
  def getTotalSize(self):
    pass
  def get_book(self):
    pass
  def get_class_type():
    pass
  def get_contiguous(self):
    pass
  def get_first_block(self):
    pass
  def get_global_lru():
    pass
  def get_lru(self):
    pass
  def get_lru_size(self):
    pass
  def get_max_size(self):
    pass
  def get_num_pending_reads():
    pass
  def get_num_pending_writes():
    pass
  def get_num_threads():
    pass
  def get_pending_lru():
    pass
  def get_pending_ram_class(self):
    pass
  def get_ram_class(self):
    pass
  def get_save_file():
    pass
  def get_total_size(self):
    pass
  def isEmpty(self):
    pass
  def is_empty(self):
    pass
  def markUsedLru(self):
    pass
  def mark_used_lru(self):
    pass
  def output(self):
    pass
  def requestResident(self):
    pass
  def request_resident(self):
    pass
  def saveToDisk(self):
    pass
  def save_to_disk(self):
    pass
  def setLruSize(self):
    pass
  def setMaxSize(self):
    pass
  def set_lru_size(self):
    pass
  def set_max_size(self):
    pass
  def stop_threads():
    pass
  def stop_threads():
    pass
  def upcastToSimpleAllocator(self):
    pass
  def upcastToSimpleLruPage(self):
    pass
  def upcast_to_SimpleAllocator(self):
    pass
  def upcast_to_SimpleLruPage(self):
    pass
  def write(self):
    pass
class VertexDataSaveFile:
  def __init__(self):
    pass
  def alloc(self):
    pass
  def downcastToVertexDataPage(self):
    pass
  def downcast_to_VertexDataPage(self):
    pass
  def getContiguous(self):
    pass
  def getFirstBlock(self):
    pass
  def getMaxSize(self):
    pass
  def getTotalFileSize(self):
    pass
  def getTotalSize(self):
    pass
  def getUsedFileSize(self):
    pass
  def get_contiguous(self):
    pass
  def get_first_block(self):
    pass
  def get_max_size(self):
    pass
  def get_total_file_size(self):
    pass
  def get_total_size(self):
    pass
  def get_used_file_size(self):
    pass
  def isEmpty(self):
    pass
  def isValid(self):
    pass
  def is_empty(self):
    pass
  def is_valid(self):
    pass
  def output(self):
    pass
  def setMaxSize(self):
    pass
  def set_max_size(self):
    pass
  def write(self):
    pass
class VertexSlider:
  def __init__(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getModified(self):
    pass
  def getName(self):
    pass
  def getRefCount(self):
    pass
  def getSlider(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_modified(self):
    pass
  def get_name(self):
    pass
  def get_ref_count(self):
    pass
  def get_slider(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class VertexTransform:
  def __init__(self):
    pass
  def accumulateMatrix(self):
    pass
  def accumulate_matrix(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def getMatrix(self):
    pass
  def getModified(self):
    pass
  def get_next_modified():
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_global_modified():
    pass
  def get_matrix(self):
    pass
  def get_modified(self):
    pass
  def get_next_modified():
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def multMatrix(self):
    pass
  def mult_matrix(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
class VideoTexture:
  def __init__(self):
    pass
  CMDefault = int

  CMDxt1 = int

  CMDxt2 = int

  CMDxt3 = int

  CMDxt4 = int

  CMDxt5 = int

  CMFxt1 = int

  CMOff = int

  CMOn = int

  CMPvr12bpp = int

  CMPvr14bpp = int

  CM_default = int

  CM_dxt1 = int

  CM_dxt2 = int

  CM_dxt3 = int

  CM_dxt4 = int

  CM_dxt5 = int

  CM_fxt1 = int

  CM_off = int

  CM_on = int

  CM_pvr1_2bpp = int

  CM_pvr1_4bpp = int

  FAlpha = int

  FBlue = int

  FColorIndex = int

  FDepthComponent = int

  FDepthComponent16 = int

  FDepthComponent24 = int

  FDepthComponent32 = int

  FDepthStencil = int

  FGreen = int

  FLuminance = int

  FLuminanceAlpha = int

  FLuminanceAlphamask = int

  FRed = int

  FRgb = int

  FRgb12 = int

  FRgb332 = int

  FRgb5 = int

  FRgb8 = int

  FRgba = int

  FRgba12 = int

  FRgba16 = int

  FRgba32 = int

  FRgba4 = int

  FRgba5 = int

  FRgba8 = int

  FRgbm = int

  FTDefault = int

  FTInvalid = int

  FTLinear = int

  FTLinearMipmapLinear = int

  FTLinearMipmapNearest = int

  FTNearest = int

  FTNearestMipmapLinear = int

  FTNearestMipmapNearest = int

  FTShadow = int

  FT_default = int

  FT_invalid = int

  FT_linear = int

  FT_linear_mipmap_linear = int

  FT_linear_mipmap_nearest = int

  FT_nearest = int

  FT_nearest_mipmap_linear = int

  FT_nearest_mipmap_nearest = int

  FT_shadow = int

  F_alpha = int

  F_blue = int

  F_color_index = int

  F_depth_component = int

  F_depth_component16 = int

  F_depth_component24 = int

  F_depth_component32 = int

  F_depth_stencil = int

  F_green = int

  F_luminance = int

  F_luminance_alpha = int

  F_luminance_alphamask = int

  F_red = int

  F_rgb = int

  F_rgb12 = int

  F_rgb332 = int

  F_rgb5 = int

  F_rgb8 = int

  F_rgba = int

  F_rgba12 = int

  F_rgba16 = int

  F_rgba32 = int

  F_rgba4 = int

  F_rgba5 = int

  F_rgba8 = int

  F_rgbm = int

  QLBest = int

  QLDefault = int

  QLFastest = int

  QLNormal = int

  QL_best = int

  QL_default = int

  QL_fastest = int

  QL_normal = int

  TFloat = int

  TT1dTexture = int

  TT2dTexture = int

  TT2dTextureArray = int

  TT3dTexture = int

  TTCubeMap = int

  TT_1d_texture = int

  TT_2d_texture = int

  TT_2d_texture_array = int

  TT_3d_texture = int

  TT_cube_map = int

  TUnsignedByte = int

  TUnsignedInt248 = int

  TUnsignedShort = int

  T_float = int

  T_unsigned_byte = int

  T_unsigned_int_24_8 = int

  T_unsigned_short = int

  WMBorderColor = int

  WMClamp = int

  WMInvalid = int

  WMMirror = int

  WMMirrorOnce = int

  WMRepeat = int

  WM_border_color = int

  WM_clamp = int

  WM_invalid = int

  WM_mirror = int

  WM_mirror_once = int

  WM_repeat = int

  def assign(self):
    pass
  def clear(self):
    pass
  def clearAlphaFilename(self):
    pass
  def clearAlphaFullpath(self):
    pass
  def clearAuxData(self):
    pass
  def clearFilename(self):
    pass
  def clearFullpath(self):
    pass
  def clearName(self):
    pass
  def clearRamImage(self):
    pass
  def clearRamMipmapImage(self):
    pass
  def clearRamMipmapImages(self):
    pass
  def clearSimpleRamImage(self):
    pass
  def clear_alpha_filename(self):
    pass
  def clear_alpha_fullpath(self):
    pass
  def clear_aux_data(self):
    pass
  def clear_filename(self):
    pass
  def clear_fullpath(self):
    pass
  def clear_name(self):
    pass
  def clear_ram_image(self):
    pass
  def clear_ram_mipmap_image(self):
    pass
  def clear_ram_mipmap_images(self):
    pass
  def clear_simple_ram_image(self):
    pass
  def compressRamImage(self):
    pass
  def compress_ram_image(self):
    pass
  def considerRescale(self):
    pass
  def consider_rescale(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def down_to_power_2():
    pass
  def down_to_power_2():
    pass
  def downcastToBamCacheRecord(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcastToVideoTexture(self):
    pass
  def downcast_to_BamCacheRecord(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def downcast_to_VideoTexture(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def estimateTextureMemory(self):
    pass
  def estimate_texture_memory(self):
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def format_component_type():
    pass
  def format_compression_mode():
    pass
  def format_filter_type():
    pass
  def format_format():
    pass
  def format_quality_level():
    pass
  def format_texture_type():
    pass
  def format_wrap_mode():
    pass
  def generateAlphaScaleMap(self):
    pass
  def generateNormalizationCubeMap(self):
    pass
  def generateRamMipmapImages(self):
    pass
  def generateSimpleRamImage(self):
    pass
  def generate_alpha_scale_map(self):
    pass
  def generate_normalization_cube_map(self):
    pass
  def generate_ram_mipmap_images(self):
    pass
  def generate_simple_ram_image(self):
    pass
  def getActive(self):
    pass
  def getAlphaFilename(self):
    pass
  def getAlphaFullpath(self):
    pass
  def getAnisotropicDegree(self):
    pass
  def getAutoTextureScale(self):
    pass
  def getAuxData(self):
    pass
  def getBamModified(self):
    pass
  def getBorderColor(self):
    pass
  def get_class_type():
    pass
  def getComponentType(self):
    pass
  def getComponentWidth(self):
    pass
  def getCompression(self):
    pass
  def getDataSizeBytes(self):
    pass
  def getEffectiveAnisotropicDegree(self):
    pass
  def getEffectiveMagfilter(self):
    pass
  def getEffectiveMinfilter(self):
    pass
  def getEffectiveQualityLevel(self):
    pass
  def getExpectedMipmapNumPages(self):
    pass
  def getExpectedMipmapXSize(self):
    pass
  def getExpectedMipmapYSize(self):
    pass
  def getExpectedMipmapZSize(self):
    pass
  def getExpectedNumMipmapLevels(self):
    pass
  def getExpectedRamImageSize(self):
    pass
  def getExpectedRamMipmapImageSize(self):
    pass
  def getExpectedRamMipmapPageSize(self):
    pass
  def getExpectedRamMipmapViewSize(self):
    pass
  def getExpectedRamPageSize(self):
    pass
  def getFilename(self):
    pass
  def getFormat(self):
    pass
  def getFrac(self):
    pass
  def getFrame(self):
    pass
  def getFrameRate(self):
    pass
  def getFullFframe(self):
    pass
  def getFullFrame(self):
    pass
  def getFullpath(self):
    pass
  def getImageModified(self):
    pass
  def getKeepRamImage(self):
    pass
  def getLoadedFromImage(self):
    pass
  def getLoadedFromTxo(self):
    pass
  def getMagfilter(self):
    pass
  def getMatchFramebufferFormat(self):
    pass
  def getMinfilter(self):
    pass
  def getName(self):
    pass
  def getNextFrame(self):
    pass
  def getNumComponents(self):
    pass
  def getNumFrames(self):
    pass
  def getNumLoadableRamMipmapImages(self):
    pass
  def getNumPages(self):
    pass
  def getNumRamMipmapImages(self):
    pass
  def getNumViews(self):
    pass
  def getOrigFileXSize(self):
    pass
  def getOrigFileYSize(self):
    pass
  def getOrigFileZSize(self):
    pass
  def getPadXSize(self):
    pass
  def getPadYSize(self):
    pass
  def getPadZSize(self):
    pass
  def getPlayRate(self):
    pass
  def getPostLoadStoreCache(self):
    pass
  def getPropertiesModified(self):
    pass
  def getQualityLevel(self):
    pass
  def getRamImage(self):
    pass
  def getRamImageAs(self):
    pass
  def getRamImageCompression(self):
    pass
  def getRamImageSize(self):
    pass
  def getRamMipmapImage(self):
    pass
  def getRamMipmapImageSize(self):
    pass
  def getRamMipmapPageSize(self):
    pass
  def getRamMipmapViewSize(self):
    pass
  def getRamPageSize(self):
    pass
  def getRamViewSize(self):
    pass
  def getRefCount(self):
    pass
  def getRenderToTexture(self):
    pass
  def getResident(self):
    pass
  def getSimpleImageModified(self):
    pass
  def getSimpleRamImage(self):
    pass
  def getSimpleRamImageSize(self):
    pass
  def getSimpleXSize(self):
    pass
  def getSimpleYSize(self):
    pass
  def getTexScale(self):
    pass
  def getTextureType(self):
    pass
  def get_textures_power_2():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUncompressedRamImage(self):
    pass
  def getVideoHeight(self):
    pass
  def getVideoWidth(self):
    pass
  def getWrapU(self):
    pass
  def getWrapV(self):
    pass
  def getWrapW(self):
    pass
  def getXSize(self):
    pass
  def getYSize(self):
    pass
  def getZSize(self):
    pass
  def get_active(self):
    pass
  def get_alpha_filename(self):
    pass
  def get_alpha_fullpath(self):
    pass
  def get_anisotropic_degree(self):
    pass
  def get_auto_texture_scale(self):
    pass
  def get_aux_data(self):
    pass
  def get_bam_modified(self):
    pass
  def get_border_color(self):
    pass
  def get_class_type():
    pass
  def get_component_type(self):
    pass
  def get_component_width(self):
    pass
  def get_compression(self):
    pass
  def get_data_size_bytes(self):
    pass
  def get_effective_anisotropic_degree(self):
    pass
  def get_effective_magfilter(self):
    pass
  def get_effective_minfilter(self):
    pass
  def get_effective_quality_level(self):
    pass
  def get_expected_mipmap_num_pages(self):
    pass
  def get_expected_mipmap_x_size(self):
    pass
  def get_expected_mipmap_y_size(self):
    pass
  def get_expected_mipmap_z_size(self):
    pass
  def get_expected_num_mipmap_levels(self):
    pass
  def get_expected_ram_image_size(self):
    pass
  def get_expected_ram_mipmap_image_size(self):
    pass
  def get_expected_ram_mipmap_page_size(self):
    pass
  def get_expected_ram_mipmap_view_size(self):
    pass
  def get_expected_ram_page_size(self):
    pass
  def get_filename(self):
    pass
  def get_format(self):
    pass
  def get_frac(self):
    pass
  def get_frame(self):
    pass
  def get_frame_rate(self):
    pass
  def get_full_fframe(self):
    pass
  def get_full_frame(self):
    pass
  def get_fullpath(self):
    pass
  def get_image_modified(self):
    pass
  def get_keep_ram_image(self):
    pass
  def get_loaded_from_image(self):
    pass
  def get_loaded_from_txo(self):
    pass
  def get_magfilter(self):
    pass
  def get_match_framebuffer_format(self):
    pass
  def get_minfilter(self):
    pass
  def get_name(self):
    pass
  def get_next_frame(self):
    pass
  def get_num_components(self):
    pass
  def get_num_frames(self):
    pass
  def get_num_loadable_ram_mipmap_images(self):
    pass
  def get_num_pages(self):
    pass
  def get_num_ram_mipmap_images(self):
    pass
  def get_num_views(self):
    pass
  def get_orig_file_x_size(self):
    pass
  def get_orig_file_y_size(self):
    pass
  def get_orig_file_z_size(self):
    pass
  def get_pad_x_size(self):
    pass
  def get_pad_y_size(self):
    pass
  def get_pad_z_size(self):
    pass
  def get_play_rate(self):
    pass
  def get_post_load_store_cache(self):
    pass
  def get_properties_modified(self):
    pass
  def get_quality_level(self):
    pass
  def get_ram_image(self):
    pass
  def get_ram_image_as(self):
    pass
  def get_ram_image_compression(self):
    pass
  def get_ram_image_size(self):
    pass
  def get_ram_mipmap_image(self):
    pass
  def get_ram_mipmap_image_size(self):
    pass
  def get_ram_mipmap_page_size(self):
    pass
  def get_ram_mipmap_view_size(self):
    pass
  def get_ram_page_size(self):
    pass
  def get_ram_view_size(self):
    pass
  def get_ref_count(self):
    pass
  def get_render_to_texture(self):
    pass
  def get_resident(self):
    pass
  def get_simple_image_modified(self):
    pass
  def get_simple_ram_image(self):
    pass
  def get_simple_ram_image_size(self):
    pass
  def get_simple_x_size(self):
    pass
  def get_simple_y_size(self):
    pass
  def get_tex_scale(self):
    pass
  def get_texture_type(self):
    pass
  def get_textures_power_2():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_uncompressed_ram_image(self):
    pass
  def get_video_height(self):
    pass
  def get_video_width(self):
    pass
  def get_wrap_u(self):
    pass
  def get_wrap_v(self):
    pass
  def get_wrap_w(self):
    pass
  def get_x_size(self):
    pass
  def get_y_size(self):
    pass
  def get_z_size(self):
    pass
  def hasAllRamMipmapImages(self):
    pass
  def hasAlphaFilename(self):
    pass
  def hasAlphaFullpath(self):
    pass
  def hasAutoTextureScale(self):
    pass
  def hasCompression(self):
    pass
  def hasFilename(self):
    pass
  def hasFullpath(self):
    pass
  def hasName(self):
    pass
  def hasRamImage(self):
    pass
  def hasRamMipmapImage(self):
    pass
  def hasSimpleRamImage(self):
    pass
  def has_textures_power_2():
    pass
  def hasUncompressedRamImage(self):
    pass
  def has_all_ram_mipmap_images(self):
    pass
  def has_alpha_filename(self):
    pass
  def has_alpha_fullpath(self):
    pass
  def has_auto_texture_scale(self):
    pass
  def has_compression(self):
    pass
  def has_filename(self):
    pass
  def has_fullpath(self):
    pass
  def has_name(self):
    pass
  def has_ram_image(self):
    pass
  def has_ram_mipmap_image(self):
    pass
  def has_simple_ram_image(self):
    pass
  def has_textures_power_2():
    pass
  def has_uncompressed_ram_image(self):
    pass
  def isCacheable(self):
    pass
  def isExactType(self):
    pass
  def is_mipmap():
    pass
  def isOfType(self):
    pass
  def isPlaying(self):
    pass
  def isPrepared(self):
    pass
  def is_cacheable(self):
    pass
  def is_exact_type(self):
    pass
  def is_mipmap():
    pass
  def is_of_type(self):
    pass
  def is_playing(self):
    pass
  def is_prepared(self):
    pass
  def load(self):
    pass
  def loadRelated(self):
    pass
  def load_related(self):
    pass
  def loop(self):
    pass
  def makeCopy(self):
    pass
  def make_from_txo():
    pass
  def makeRamImage(self):
    pass
  def makeRamMipmapImage(self):
    pass
  def make_copy(self):
    pass
  def make_from_txo():
    pass
  def make_ram_image(self):
    pass
  def make_ram_mipmap_image(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
  def mightHaveRamImage(self):
    pass
  def might_have_ram_image(self):
    pass
  def modifyRamImage(self):
    pass
  def modifyRamMipmapImage(self):
    pass
  def modifySimpleRamImage(self):
    pass
  def modify_ram_image(self):
    pass
  def modify_ram_mipmap_image(self):
    pass
  def modify_simple_ram_image(self):
    pass
  def newSimpleRamImage(self):
    pass
  def new_simple_ram_image(self):
    pass
  def output(self):
    pass
  def peek(self):
    pass
  def pingpong(self):
    pass
  def play(self):
    pass
  def pose(self):
    pass
  def prepare(self):
    pass
  def prepareNow(self):
    pass
  def prepare_now(self):
    pass
  def read(self):
    pass
  def readDds(self):
    pass
  def readTxo(self):
    pass
  def read_dds(self):
    pass
  def read_txo(self):
    pass
  def ref(self):
    pass
  def release(self):
    pass
  def releaseAll(self):
    pass
  def release_all(self):
    pass
  def reload(self):
    pass
  def rescaleTexture(self):
    pass
  def rescale_texture(self):
    pass
  def setAlphaFilename(self):
    pass
  def setAlphaFullpath(self):
    pass
  def setAnisotropicDegree(self):
    pass
  def setAutoTextureScale(self):
    pass
  def setAuxData(self):
    pass
  def setBorderColor(self):
    pass
  def setComponentType(self):
    pass
  def setCompression(self):
    pass
  def setFilename(self):
    pass
  def setFormat(self):
    pass
  def setFullpath(self):
    pass
  def setKeepRamImage(self):
    pass
  def setLoadedFromImage(self):
    pass
  def setLoadedFromTxo(self):
    pass
  def setMagfilter(self):
    pass
  def setMatchFramebufferFormat(self):
    pass
  def setMinfilter(self):
    pass
  def setName(self):
    pass
  def setNumViews(self):
    pass
  def setOrigFileSize(self):
    pass
  def setPadSize(self):
    pass
  def setPlayRate(self):
    pass
  def setPostLoadStoreCache(self):
    pass
  def setQualityLevel(self):
    pass
  def setRamImage(self):
    pass
  def setRamImageAs(self):
    pass
  def setRamMipmapImage(self):
    pass
  def setRamMipmapPointerFromInt(self):
    pass
  def setRenderToTexture(self):
    pass
  def setSimpleRamImage(self):
    pass
  def setSizePadded(self):
    pass
  def set_textures_power_2():
    pass
  def setWrapU(self):
    pass
  def setWrapV(self):
    pass
  def setWrapW(self):
    pass
  def setXSize(self):
    pass
  def setYSize(self):
    pass
  def setZSize(self):
    pass
  def set_alpha_filename(self):
    pass
  def set_alpha_fullpath(self):
    pass
  def set_anisotropic_degree(self):
    pass
  def set_auto_texture_scale(self):
    pass
  def set_aux_data(self):
    pass
  def set_border_color(self):
    pass
  def set_component_type(self):
    pass
  def set_compression(self):
    pass
  def set_filename(self):
    pass
  def set_format(self):
    pass
  def set_fullpath(self):
    pass
  def set_keep_ram_image(self):
    pass
  def set_loaded_from_image(self):
    pass
  def set_loaded_from_txo(self):
    pass
  def set_magfilter(self):
    pass
  def set_match_framebuffer_format(self):
    pass
  def set_minfilter(self):
    pass
  def set_name(self):
    pass
  def set_num_views(self):
    pass
  def set_orig_file_size(self):
    pass
  def set_pad_size(self):
    pass
  def set_play_rate(self):
    pass
  def set_post_load_store_cache(self):
    pass
  def set_quality_level(self):
    pass
  def set_ram_image(self):
    pass
  def set_ram_image_as(self):
    pass
  def set_ram_mipmap_image(self):
    pass
  def set_ram_mipmap_pointer_from_int(self):
    pass
  def set_render_to_texture(self):
    pass
  def set_simple_ram_image(self):
    pass
  def set_size_padded(self):
    pass
  def set_textures_power_2():
    pass
  def set_wrap_u(self):
    pass
  def set_wrap_v(self):
    pass
  def set_wrap_w(self):
    pass
  def set_x_size(self):
    pass
  def set_y_size(self):
    pass
  def set_z_size(self):
    pass
  def setup1dTexture(self):
    pass
  def setup2dTexture(self):
    pass
  def setup2dTextureArray(self):
    pass
  def setup3dTexture(self):
    pass
  def setupCubeMap(self):
    pass
  def setupTexture(self):
    pass
  def setup_1d_texture(self):
    pass
  def setup_2d_texture(self):
    pass
  def setup_2d_texture_array(self):
    pass
  def setup_3d_texture(self):
    pass
  def setup_cube_map(self):
    pass
  def setup_texture(self):
    pass
  def stop(self):
    pass
  def store(self):
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def string_component_type():
    pass
  def string_compression_mode():
    pass
  def string_filter_type():
    pass
  def string_format():
    pass
  def string_quality_level():
    pass
  def string_texture_type():
    pass
  def string_wrap_mode():
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def uncompressRamImage(self):
    pass
  def uncompress_ram_image(self):
    pass
  def unref(self):
    pass
  def up_to_power_2():
    pass
  def up_to_power_2():
    pass
  def upcastToAnimInterface(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTexture(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcastToTypedWritableReferenceCount(self):
    pass
  def upcast_to_AnimInterface(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_Texture(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def upcast_to_TypedWritableReferenceCount(self):
    pass
  def usesMipmaps(self):
    pass
  def uses_mipmaps(self):
    pass
  def wasImageModified(self):
    pass
  def was_image_modified(self):
    pass
  def write(self):
    pass
  def writeTxo(self):
    pass
  def write_txo(self):
    pass
class VirtualMouse:
  def __init__(self):
    pass
  FBCullCallback = int

  FBDrawMask = int

  FBEffects = int

  FBState = int

  FBTag = int

  FBTransform = int

  FB_cull_callback = int

  FB_draw_mask = int

  FB_effects = int

  FB_state = int

  FB_tag = int

  FB_transform = int

  UCChildren = int

  UCDrawMask = int

  UCParents = int

  UCState = int

  UCTransform = int

  UC_children = int

  UC_draw_mask = int

  UC_parents = int

  UC_state = int

  UC_transform = int

  def addChild(self):
    pass
  def addStashed(self):
    pass
  def add_child(self):
    pass
  def add_stashed(self):
    pass
  def adjustDrawMask(self):
    pass
  def adjust_draw_mask(self):
    pass
  def asLight(self):
    pass
  def as_light(self):
    pass
  def assign(self):
    pass
  def clearAttrib(self):
    pass
  def clearBounds(self):
    pass
  def clearEffect(self):
    pass
  def clearEffects(self):
    pass
  def clearName(self):
    pass
  def clearPythonTag(self):
    pass
  def clearState(self):
    pass
  def clearTag(self):
    pass
  def clearTransform(self):
    pass
  def clearUnexpectedChange(self):
    pass
  def clear_attrib(self):
    pass
  def clear_bounds(self):
    pass
  def clear_effect(self):
    pass
  def clear_effects(self):
    pass
  def clear_name(self):
    pass
  def clear_python_tag(self):
    pass
  def clear_state(self):
    pass
  def clear_tag(self):
    pass
  def clear_transform(self):
    pass
  def clear_unexpected_change(self):
    pass
  def combineWith(self):
    pass
  def combine_with(self):
    pass
  def compareTags(self):
    pass
  def compare_tags(self):
    pass
  def copyAllProperties(self):
    pass
  def copyChildren(self):
    pass
  def copySubgraph(self):
    pass
  def copyTags(self):
    pass
  def copy_all_properties(self):
    pass
  def copy_children(self):
    pass
  def copy_subgraph(self):
    pass
  def copy_tags(self):
    pass
  def countNumDescendants(self):
    pass
  def count_num_descendants(self):
    pass
  def decode_from_bam_stream():
    pass
  def decode_from_bam_stream():
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def findChild(self):
    pass
  def findParent(self):
    pass
  def findStashed(self):
    pass
  def find_child(self):
    pass
  def find_parent(self):
    pass
  def find_stashed(self):
    pass
  def get_all_camera_mask():
    pass
  def getAttrib(self):
    pass
  def getBamModified(self):
    pass
  def getBounds(self):
    pass
  def getBoundsType(self):
    pass
  def getChild(self):
    pass
  def getChildSort(self):
    pass
  def get_class_type():
    pass
  def getDrawControlMask(self):
    pass
  def getDrawShowMask(self):
    pass
  def getEffect(self):
    pass
  def getEffects(self):
    pass
  def getFancyBits(self):
    pass
  def getInternalBounds(self):
    pass
  def getInternalVertices(self):
    pass
  def getIntoCollideMask(self):
    pass
  def getLegalCollideMask(self):
    pass
  def getName(self):
    pass
  def getNestedVertices(self):
    pass
  def getNetCollideMask(self):
    pass
  def getNetDrawControlMask(self):
    pass
  def getNetDrawShowMask(self):
    pass
  def getNumChildren(self):
    pass
  def getNumParents(self):
    pass
  def getNumStashed(self):
    pass
  def getOffClipPlanes(self):
    pass
  def get_overall_bit():
    pass
  def getParent(self):
    pass
  def getPrevTransform(self):
    pass
  def getPythonTag(self):
    pass
  def getRefCount(self):
    pass
  def getStashed(self):
    pass
  def getStashedSort(self):
    pass
  def getState(self):
    pass
  def getTag(self):
    pass
  def getTransform(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def getUnexpectedChange(self):
    pass
  def get_all_camera_mask():
    pass
  def get_attrib(self):
    pass
  def get_bam_modified(self):
    pass
  def get_bounds(self):
    pass
  def get_bounds_type(self):
    pass
  def get_child(self):
    pass
  def get_child_sort(self):
    pass
  def get_class_type():
    pass
  def get_draw_control_mask(self):
    pass
  def get_draw_show_mask(self):
    pass
  def get_effect(self):
    pass
  def get_effects(self):
    pass
  def get_fancy_bits(self):
    pass
  def get_internal_bounds(self):
    pass
  def get_internal_vertices(self):
    pass
  def get_into_collide_mask(self):
    pass
  def get_legal_collide_mask(self):
    pass
  def get_name(self):
    pass
  def get_nested_vertices(self):
    pass
  def get_net_collide_mask(self):
    pass
  def get_net_draw_control_mask(self):
    pass
  def get_net_draw_show_mask(self):
    pass
  def get_num_children(self):
    pass
  def get_num_parents(self):
    pass
  def get_num_stashed(self):
    pass
  def get_off_clip_planes(self):
    pass
  def get_overall_bit():
    pass
  def get_parent(self):
    pass
  def get_prev_transform(self):
    pass
  def get_python_tag(self):
    pass
  def get_ref_count(self):
    pass
  def get_stashed(self):
    pass
  def get_stashed_sort(self):
    pass
  def get_state(self):
    pass
  def get_tag(self):
    pass
  def get_transform(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def get_unexpected_change(self):
    pass
  def hasAttrib(self):
    pass
  def hasDirtyPrevTransform(self):
    pass
  def hasEffect(self):
    pass
  def hasName(self):
    pass
  def hasPythonTag(self):
    pass
  def hasTag(self):
    pass
  def hasTags(self):
    pass
  def has_attrib(self):
    pass
  def has_dirty_prev_transform(self):
    pass
  def has_effect(self):
    pass
  def has_name(self):
    pass
  def has_python_tag(self):
    pass
  def has_tag(self):
    pass
  def has_tags(self):
    pass
  def isAmbientLight(self):
    pass
  def isBoundsStale(self):
    pass
  def isCollisionNode(self):
    pass
  def isExactType(self):
    pass
  def isFinal(self):
    pass
  def isGeomNode(self):
    pass
  def isLodNode(self):
    pass
  def isOfType(self):
    pass
  def isOverallHidden(self):
    pass
  def isSceneRoot(self):
    pass
  def isUnderSceneRoot(self):
    pass
  def is_ambient_light(self):
    pass
  def is_bounds_stale(self):
    pass
  def is_collision_node(self):
    pass
  def is_exact_type(self):
    pass
  def is_final(self):
    pass
  def is_geom_node(self):
    pass
  def is_lod_node(self):
    pass
  def is_of_type(self):
    pass
  def is_overall_hidden(self):
    pass
  def is_scene_root(self):
    pass
  def is_under_scene_root(self):
    pass
  def listTags(self):
    pass
  def list_tags(self):
    pass
  def ls(self):
    pass
  def makeCopy(self):
    pass
  def make_copy(self):
    pass
  def markBamModified(self):
    pass
  def markBoundsStale(self):
    pass
  def markInternalBoundsStale(self):
    pass
  def mark_bam_modified(self):
    pass
  def mark_bounds_stale(self):
    pass
  def mark_internal_bounds_stale(self):
    pass
  def output(self):
    pass
  def prepareScene(self):
    pass
  def prepare_scene(self):
    pass
  def pressButton(self):
    pass
  def press_button(self):
    pass
  def ref(self):
    pass
  def releaseButton(self):
    pass
  def release_button(self):
    pass
  def removeAllChildren(self):
    pass
  def removeChild(self):
    pass
  def removeStashed(self):
    pass
  def remove_all_children(self):
    pass
  def remove_child(self):
    pass
  def remove_stashed(self):
    pass
  def replaceChild(self):
    pass
  def replaceNode(self):
    pass
  def replace_child(self):
    pass
  def replace_node(self):
    pass
  def reset_all_prev_transform():
    pass
  def resetPrevTransform(self):
    pass
  def reset_all_prev_transform():
    pass
  def reset_prev_transform(self):
    pass
  def setAttrib(self):
    pass
  def setBound(self):
    pass
  def setBounds(self):
    pass
  def setBoundsType(self):
    pass
  def setEffect(self):
    pass
  def setEffects(self):
    pass
  def setFinal(self):
    pass
  def setIntoCollideMask(self):
    pass
  def setMouseOn(self):
    pass
  def setMousePos(self):
    pass
  def setName(self):
    pass
  def setOverallHidden(self):
    pass
  def setPrevTransform(self):
    pass
  def setPythonTag(self):
    pass
  def setState(self):
    pass
  def setTag(self):
    pass
  def setTransform(self):
    pass
  def setUnexpectedChange(self):
    pass
  def setWindowSize(self):
    pass
  def set_attrib(self):
    pass
  def set_bound(self):
    pass
  def set_bounds(self):
    pass
  def set_bounds_type(self):
    pass
  def set_effect(self):
    pass
  def set_effects(self):
    pass
  def set_final(self):
    pass
  def set_into_collide_mask(self):
    pass
  def set_mouse_on(self):
    pass
  def set_mouse_pos(self):
    pass
  def set_name(self):
    pass
  def set_overall_hidden(self):
    pass
  def set_prev_transform(self):
    pass
  def set_python_tag(self):
    pass
  def set_state(self):
    pass
  def set_tag(self):
    pass
  def set_transform(self):
    pass
  def set_unexpected_change(self):
    pass
  def set_window_size(self):
    pass
  def stashChild(self):
    pass
  def stash_child(self):
    pass
  def stealChildren(self):
    pass
  def steal_children(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def unstashChild(self):
    pass
  def unstash_child(self):
    pass
  def upcastToNamable(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedWritable(self):
    pass
  def upcast_to_Namable(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedWritable(self):
    pass
  def write(self):
    pass
  def writeConnections(self):
    pass
  def writeInputs(self):
    pass
  def writeOutputs(self):
    pass
  def write_connections(self):
    pass
  def write_inputs(self):
    pass
  def write_outputs(self):
    pass
class VrpnClient:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def forkAsynchronousThread(self):
    pass
  def fork_asynchronous_thread(self):
    pass
  def get_class_type():
    pass
  def getCoordinateSystem(self):
    pass
  def getLastPollTime(self):
    pass
  def getRefCount(self):
    pass
  def getServerName(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_coordinate_system(self):
    pass
  def get_last_poll_time(self):
    pass
  def get_ref_count(self):
    pass
  def get_server_name(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isConnected(self):
    pass
  def isExactType(self):
    pass
  def isForked(self):
    pass
  def isOfType(self):
    pass
  def isValid(self):
    pass
  def is_connected(self):
    pass
  def is_exact_type(self):
    pass
  def is_forked(self):
    pass
  def is_of_type(self):
    pass
  def is_valid(self):
    pass
  def poll(self):
    pass
  def ref(self):
    pass
  def setCoordinateSystem(self):
    pass
  def set_coordinate_system(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
  def write(self):
    pass
class WindowHandle:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def get_class_type():
    pass
  def getIntHandle(self):
    pass
  def getOsHandle(self):
    pass
  def getRefCount(self):
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_class_type():
    pass
  def get_int_handle(self):
    pass
  def get_os_handle(self):
    pass
  def get_ref_count(self):
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def output(self):
    pass
  def ref(self):
    pass
  def sendWindowsMessage(self):
    pass
  def send_windows_message(self):
    pass
  def setOsHandle(self):
    pass
  def set_os_handle(self):
    pass
  def testRefCountIntegrity(self):
    pass
  def testRefCountNonzero(self):
    pass
  def test_ref_count_integrity(self):
    pass
  def test_ref_count_nonzero(self):
    pass
  def unref(self):
    pass
  def upcastToReferenceCount(self):
    pass
  def upcastToTypedObject(self):
    pass
  def upcast_to_ReferenceCount(self):
    pass
  def upcast_to_TypedObject(self):
    pass
class WindowProperties:
  def __init__(self):
    pass
  MAbsolute = int

  MRelative = int

  M_absolute = int

  M_relative = int

  ZBottom = int

  ZNormal = int

  ZTop = int

  Z_bottom = int

  Z_normal = int

  Z_top = int

  def addProperties(self):
    pass
  def add_properties(self):
    pass
  def assign(self):
    pass
  def clear(self):
    pass
  def clearCursorFilename(self):
    pass
  def clearCursorHidden(self):
    pass
  def clear_default():
    pass
  def clearFixedSize(self):
    pass
  def clearForeground(self):
    pass
  def clearFullscreen(self):
    pass
  def clearIconFilename(self):
    pass
  def clearMinimized(self):
    pass
  def clearMouseMode(self):
    pass
  def clearOpen(self):
    pass
  def clearOrigin(self):
    pass
  def clearParentWindow(self):
    pass
  def clearRawMice(self):
    pass
  def clearSize(self):
    pass
  def clearTitle(self):
    pass
  def clearUndecorated(self):
    pass
  def clearZOrder(self):
    pass
  def clear_cursor_filename(self):
    pass
  def clear_cursor_hidden(self):
    pass
  def clear_default():
    pass
  def clear_fixed_size(self):
    pass
  def clear_foreground(self):
    pass
  def clear_fullscreen(self):
    pass
  def clear_icon_filename(self):
    pass
  def clear_minimized(self):
    pass
  def clear_mouse_mode(self):
    pass
  def clear_open(self):
    pass
  def clear_origin(self):
    pass
  def clear_parent_window(self):
    pass
  def clear_raw_mice(self):
    pass
  def clear_size(self):
    pass
  def clear_title(self):
    pass
  def clear_undecorated(self):
    pass
  def clear_z_order(self):
    pass
  def eq(self):
    pass
  def get_config_properties():
    pass
  def getCursorFilename(self):
    pass
  def getCursorHidden(self):
    pass
  def get_default():
    pass
  def getFixedSize(self):
    pass
  def getForeground(self):
    pass
  def getFullscreen(self):
    pass
  def getIconFilename(self):
    pass
  def getMinimized(self):
    pass
  def getMouseMode(self):
    pass
  def getOpen(self):
    pass
  def getParentWindow(self):
    pass
  def getRawMice(self):
    pass
  def getTitle(self):
    pass
  def getUndecorated(self):
    pass
  def getXOrigin(self):
    pass
  def getXSize(self):
    pass
  def getYOrigin(self):
    pass
  def getYSize(self):
    pass
  def getZOrder(self):
    pass
  def get_config_properties():
    pass
  def get_cursor_filename(self):
    pass
  def get_cursor_hidden(self):
    pass
  def get_default():
    pass
  def get_fixed_size(self):
    pass
  def get_foreground(self):
    pass
  def get_fullscreen(self):
    pass
  def get_icon_filename(self):
    pass
  def get_minimized(self):
    pass
  def get_mouse_mode(self):
    pass
  def get_open(self):
    pass
  def get_parent_window(self):
    pass
  def get_raw_mice(self):
    pass
  def get_title(self):
    pass
  def get_undecorated(self):
    pass
  def get_x_origin(self):
    pass
  def get_x_size(self):
    pass
  def get_y_origin(self):
    pass
  def get_y_size(self):
    pass
  def get_z_order(self):
    pass
  def hasCursorFilename(self):
    pass
  def hasCursorHidden(self):
    pass
  def hasFixedSize(self):
    pass
  def hasForeground(self):
    pass
  def hasFullscreen(self):
    pass
  def hasIconFilename(self):
    pass
  def hasMinimized(self):
    pass
  def hasMouseMode(self):
    pass
  def hasOpen(self):
    pass
  def hasOrigin(self):
    pass
  def hasParentWindow(self):
    pass
  def hasRawMice(self):
    pass
  def hasSize(self):
    pass
  def hasTitle(self):
    pass
  def hasUndecorated(self):
    pass
  def hasZOrder(self):
    pass
  def has_cursor_filename(self):
    pass
  def has_cursor_hidden(self):
    pass
  def has_fixed_size(self):
    pass
  def has_foreground(self):
    pass
  def has_fullscreen(self):
    pass
  def has_icon_filename(self):
    pass
  def has_minimized(self):
    pass
  def has_mouse_mode(self):
    pass
  def has_open(self):
    pass
  def has_origin(self):
    pass
  def has_parent_window(self):
    pass
  def has_raw_mice(self):
    pass
  def has_size(self):
    pass
  def has_title(self):
    pass
  def has_undecorated(self):
    pass
  def has_z_order(self):
    pass
  def isAnySpecified(self):
    pass
  def is_any_specified(self):
    pass
  def ne(self):
    pass
  def output(self):
    pass
  def setCursorFilename(self):
    pass
  def setCursorHidden(self):
    pass
  def set_default():
    pass
  def setFixedSize(self):
    pass
  def setForeground(self):
    pass
  def setFullscreen(self):
    pass
  def setIconFilename(self):
    pass
  def setMinimized(self):
    pass
  def setMouseMode(self):
    pass
  def setOpen(self):
    pass
  def setOrigin(self):
    pass
  def setParentWindow(self):
    pass
  def setRawMice(self):
    pass
  def setSize(self):
    pass
  def setTitle(self):
    pass
  def setUndecorated(self):
    pass
  def setZOrder(self):
    pass
  def set_cursor_filename(self):
    pass
  def set_cursor_hidden(self):
    pass
  def set_default():
    pass
  def set_fixed_size(self):
    pass
  def set_foreground(self):
    pass
  def set_fullscreen(self):
    pass
  def set_icon_filename(self):
    pass
  def set_minimized(self):
    pass
  def set_mouse_mode(self):
    pass
  def set_open(self):
    pass
  def set_origin(self):
    pass
  def set_parent_window(self):
    pass
  def set_raw_mice(self):
    pass
  def set_size(self):
    pass
  def set_title(self):
    pass
  def set_undecorated(self):
    pass
  def set_z_order(self):
    pass
  def size():
    pass
class WritableConfigurable:
  def __init__(self):
    pass
  def downcastToTypedReferenceCount(self):
    pass
  def downcastToTypedWritableReferenceCount(self):
    pass
  def downcast_to_TypedReferenceCount(self):
    pass
  def downcast_to_TypedWritableReferenceCount(self):
    pass
  def encodeToBamStream(self):
    pass
  def encode_to_bam_stream(self):
    pass
  def getBamModified(self):
    pass
  def get_class_type():
    pass
  def getType(self):
    pass
  def getTypeIndex(self):
    pass
  def get_bam_modified(self):
    pass
  def get_class_type():
    pass
  def get_type(self):
    pass
  def get_type_index(self):
    pass
  def isExactType(self):
    pass
  def isOfType(self):
    pass
  def is_exact_type(self):
    pass
  def is_of_type(self):
    pass
  def markBamModified(self):
    pass
  def mark_bam_modified(self):
    pass
def autoBind():
  pass
def auto_bind():
  pass
def composeMatrix():
  pass
def composeMatrixNewHpr():
  pass
def composeMatrixOldHpr():
  pass
def compose_matrix():
  pass
def compose_matrix_new_hpr():
  pass
def compose_matrix_old_hpr():
  pass
def decomposeMatrix():
  pass
def decomposeMatrixNewHpr():
  pass
def decomposeMatrixOldHpr():
  pass
def decompose_matrix():
  pass
def decompose_matrix_new_hpr():
  pass
def decompose_matrix_old_hpr():
  pass
def deg2Rad():
  pass
def deg_2_rad():
  pass
def formatCoordinateSystem():
  pass
def format_coordinate_system():
  pass
def genericReadDatagram():
  pass
def genericWriteDatagram():
  pass
def generic_read_datagram():
  pass
def generic_write_datagram():
  pass
def getDefaultCoordinateSystem():
  pass
def getModelPath():
  pass
def getPluginPath():
  pass
def getTIXMLDEFAULTENCODING():
  pass
def getTIXMLMAJORVERSION():
  pass
def getTIXMLMINORVERSION():
  pass
def getTIXMLPATCHVERSION():
  pass
def get_TIXML_DEFAULT_ENCODING():
  pass
def get_TIXML_MAJOR_VERSION():
  pass
def get_TIXML_MINOR_VERSION():
  pass
def get_TIXML_PATCH_VERSION():
  pass
def get_default_coordinate_system():
  pass
def get_model_path():
  pass
def get_plugin_path():
  pass
def hashPrcVariables():
  pass
def hash_prc_variables():
  pass
def headsUp():
  pass
def heads_up():
  pass
def invert():
  pass
def isRightHanded():
  pass
def is_right_handed():
  pass
def loadPrcFile():
  pass
def loadPrcFileData():
  pass
def load_prc_file():
  pass
def load_prc_file_data():
  pass
def lookAt():
  pass
def look_at():
  pass
def newToOldHpr():
  pass
def new_to_old_hpr():
  pass
def oldToNewHpr():
  pass
def old_to_new_hpr():
  pass
def parseCoordinateSystemString():
  pass
def parse_coordinate_system_string():
  pass
class pixel:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def size():
    pass
def printXml():
  pass
def printXmlToFile():
  pass
def print_xml():
  pass
def print_xml_to_file():
  pass
def pyDecodeNodePathFromBamStream():
  pass
def pyDecodeNodePathFromBamStreamPersist():
  pass
def pyDecodeTypedWritableFromBamStream():
  pass
def pyDecodeTypedWritableFromBamStreamPersist():
  pass
def py_decode_NodePath_from_bam_stream():
  pass
def py_decode_NodePath_from_bam_stream_persist():
  pass
def py_decode_TypedWritable_from_bam_stream():
  pass
def py_decode_TypedWritable_from_bam_stream_persist():
  pass
def rad2Deg():
  pass
def rad_2_deg():
  pass
def readXmlStream():
  pass
def read_xml_stream():
  pass
def rotateTo():
  pass
def rotate_to():
  pass
class CString:
  def __init__(self):
    pass
def transpose():
  pass
def unloadPrcFile():
  pass
def unload_prc_file():
  pass
def writeXmlStream():
  pass
def write_xml_stream():
  pass
class pixel:
  def __init__(self):
    pass
  def Setitem(self):
    pass
  def size():
    pass


class Vec3:
    pass

class Vec4:
    pass

class WindowsProperties:
    pass


class Vec4(object):
    pass


